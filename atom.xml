<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>shuke&#39;s Blog</title>
  
  <subtitle>技术 管理 生活 格局 人生</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shuke163.github.io/"/>
  <updated>2020-04-20T12:06:23.759Z</updated>
  <id>https://shuke163.github.io/</id>
  
  <author>
    <name>shuke</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ansible2.0 python Api</title>
    <link href="https://shuke163.github.io/2020/04/20/Ansible2-0-python-Api/"/>
    <id>https://shuke163.github.io/2020/04/20/Ansible2-0-python-Api/</id>
    <published>2020-04-20T12:03:18.000Z</published>
    <updated>2020-04-20T12:06:23.759Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible2-0-python-Api"><a href="#Ansible2-0-python-Api" class="headerlink" title="Ansible2.0 python Api"></a>Ansible2.0 python Api</h2><blockquote><p>Python 3.6.2  ansible 2.4.3.0</p></blockquote><p><a href="https://docs.ansible.com/ansible/latest/dev_guide/developing_api.html#python-api-example" target="_blank" rel="noopener">官方示例</a><br>注意: 默认官方示例中Ansbile的连接参数使用的是local,执行命令操作是在本地</p><p>示例修改后调用Ansible的模块执行远端命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python  </span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import json</span><br><span class="line">import shutil</span><br><span class="line">from collections import namedtuple</span><br><span class="line">from ansible.parsing.dataloader import DataLoader</span><br><span class="line">from ansible.vars.manager import VariableManager</span><br><span class="line">from ansible.inventory.manager import InventoryManager</span><br><span class="line">from ansible.playbook.play import Play</span><br><span class="line">from ansible.executor.task_queue_manager import TaskQueueManager</span><br><span class="line">from ansible.plugins.callback import CallbackBase</span><br><span class="line">import ansible.constants as C</span><br><span class="line"></span><br><span class="line">class ResultCallback(CallbackBase):</span><br><span class="line">    &quot;&quot;&quot;A sample callback plugin used for performing an action as results come in</span><br><span class="line"></span><br><span class="line">    If you want to collect all results into a single object for processing at</span><br><span class="line">    the end of the execution, look into utilizing the &#96;&#96;json&#96;&#96; callback plugin</span><br><span class="line">    or writing your own custom callback plugin</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    def v2_runner_on_ok(self, result, **kwargs):</span><br><span class="line">        &quot;&quot;&quot;Print a json representation of the result</span><br><span class="line"></span><br><span class="line">        This method could store the result in an instance attribute for retrieval later</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        host &#x3D; result._host</span><br><span class="line">        print(json.dumps(&#123;host.name: result._result&#125;, indent&#x3D;4))</span><br><span class="line"></span><br><span class="line"># since API is constructed for CLI it expects certain options to always be set, named tuple &#39;fakes&#39; the args parsing options object</span><br><span class="line">Options &#x3D; namedtuple(&#39;Options&#39;, [&#39;connection&#39;, &#39;module_path&#39;, &#39;forks&#39;, &#39;become&#39;, &#39;become_method&#39;, &#39;become_user&#39;, &#39;check&#39;, &#39;diff&#39;])</span><br><span class="line">options &#x3D; Options(connection&#x3D;&#39;smart&#39;, module_path&#x3D;[&#39;&#x2F;Users&#x2F;zhao&#x2F;anaconda3&#x2F;lib&#x2F;python3.6&#x2F;site-packages&#x2F;ansible&#39;], forks&#x3D;10, become&#x3D;True, become_method&#x3D;&#39;sudo&#39;, become_user&#x3D;&#39;root&#39;, check&#x3D;False, diff&#x3D;False)</span><br><span class="line"></span><br><span class="line"># initialize needed objects</span><br><span class="line">loader &#x3D; DataLoader() # Takes care of finding and reading yaml, json and ini files</span><br><span class="line">passwords &#x3D; dict(vault_pass&#x3D;&#39;secret&#39;)</span><br><span class="line"></span><br><span class="line"># Instantiate our ResultCallback for handling results as they come in. Ansible expects this to be one of its main display outlets</span><br><span class="line">results_callback &#x3D; ResultCallback()</span><br><span class="line"></span><br><span class="line"># create inventory, use path to host config file as source or hosts in a comma separated string</span><br><span class="line"># 此处的sources参数可以是hosts文件所在的目录,也可以是完整的文件路径,或者主机字符串,使用逗号分割</span><br><span class="line">inventory &#x3D; InventoryManager(loader&#x3D;loader, sources&#x3D;&#39;&#x2F;Users&#x2F;zhao&#x2F;work&#x2F;playbook&#x2F;inventory&#39;)</span><br><span class="line"></span><br><span class="line"># variable manager takes care of merging all the different sources to give you a unifed view of variables available in each context</span><br><span class="line">variable_manager &#x3D; VariableManager(loader&#x3D;loader, inventory&#x3D;inventory)</span><br><span class="line"></span><br><span class="line"># create datastructure that represents our play, including tasks, this is basically what our YAML loader does internally.</span><br><span class="line">play_source &#x3D;  dict(</span><br><span class="line">        name &#x3D; &quot;Ansible Play&quot;,</span><br><span class="line">        # 需要执行的主机或者主机组</span><br><span class="line">        hosts &#x3D; &#39;nginx-test&#39;,</span><br><span class="line">        gather_facts &#x3D; &#39;no&#39;,</span><br><span class="line">        tasks &#x3D; [</span><br><span class="line">            dict(action&#x3D;dict(module&#x3D;&#39;shell&#39;, args&#x3D;&#39;whoami&#39;), register&#x3D;&#39;shell_out&#39;),</span><br><span class="line">            dict(action&#x3D;dict(module&#x3D;&#39;debug&#39;, args&#x3D;dict(msg&#x3D;&#39;&#123;&#123;shell_out.stdout&#125;&#125;&#39;)))</span><br><span class="line">         ]</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"># Create play object, playbook objects use .load instead of init or new methods,</span><br><span class="line"># this will also automatically create the task objects from the info provided in play_source</span><br><span class="line">play &#x3D; Play().load(play_source, variable_manager&#x3D;variable_manager, loader&#x3D;loader)</span><br><span class="line"></span><br><span class="line"># Run it - instantiate task queue manager, which takes care of forking and setting up all objects to iterate over host list and tasks</span><br><span class="line">tqm &#x3D; None</span><br><span class="line">try:</span><br><span class="line">    tqm &#x3D; TaskQueueManager(</span><br><span class="line">              inventory&#x3D;inventory,</span><br><span class="line">              variable_manager&#x3D;variable_manager,</span><br><span class="line">              loader&#x3D;loader,</span><br><span class="line">              options&#x3D;options,</span><br><span class="line">              passwords&#x3D;passwords,</span><br><span class="line">              stdout_callback&#x3D;results_callback,  # Use our custom callback instead of the &#96;&#96;default&#96;&#96; callback plugin, which prints to stdout</span><br><span class="line">          )</span><br><span class="line">    result &#x3D; tqm.run(play) # most interesting data for a play is actually sent to the callback&#39;s methods</span><br><span class="line">finally:</span><br><span class="line">    # we always need to cleanup child procs and the structres we use to communicate with them</span><br><span class="line">    if tqm is not None:</span><br><span class="line">        tqm.cleanup()</span><br><span class="line"></span><br><span class="line">     # Remove ansible tmpdir</span><br><span class="line">    shutil.rmtree(C.DEFAULT_LOCAL_TMP, True)</span><br><span class="line">&#96;&#96;&#96;    </span><br><span class="line">执行结果如下:</span><br></pre></td></tr></table></figure><p>{<br>    “ngx-brazil-test01br-t001.gru1.wecash.net”: {<br>        “changed”: true,<br>        “end”: “2018-06-20 10:59:36.486658”,<br>        “stdout”: “root”,<br>        “cmd”: “whoami”,<br>        “rc”: 0,<br>        “start”: “2018-06-20 10:59:36.484856”,<br>        “stderr”: “”,<br>        “delta”: “0:00:00.001802”,<br>        “invocation”: {<br>            “module_args”: {<br>                “warn”: true,<br>                “executable”: null,<br>                “_uses_shell”: true,<br>                “_raw_params”: “whoami”,<br>                “removes”: null,<br>                “creates”: null,<br>                “chdir”: null,<br>                “stdin”: null<br>            }<br>        },<br>        “_ansible_parsed”: true,<br>        “stdout_lines”: [<br>            “root”<br>        ],<br>        “stderr_lines”: [],<br>        “_ansible_no_log”: false<br>    }<br>}<br>{<br>    “ngx-brazil-test01br-t001.gru1.wecash.net”: {<br>        “msg”: “root”,<br>        “_ansible_verbose_always”: true,<br>        “_ansible_no_log”: false,<br>        “changed”: false<br>    }<br>}<br>```</p>]]></content>
    
    <summary type="html">
    
      Ansible2.0 python Api
    
    </summary>
    
    
      <category term="Ansible" scheme="https://shuke163.github.io/categories/Ansible/"/>
    
    
      <category term="Ansible" scheme="https://shuke163.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>ansible api of python</title>
    <link href="https://shuke163.github.io/2020/04/20/ansible-api-of-python/"/>
    <id>https://shuke163.github.io/2020/04/20/ansible-api-of-python/</id>
    <published>2020-04-20T12:02:32.000Z</published>
    <updated>2020-04-20T12:02:57.082Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ansible-api-for-python"><a href="#ansible-api-for-python" class="headerlink" title="ansible api for python"></a>ansible api for python</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">@author: shuke</span><br><span class="line">@file: anisible-exec-api.py</span><br><span class="line">@time: 2019&#x2F;10&#x2F;28 14:56</span><br><span class="line">@contact: shu_ke163@163.com</span><br><span class="line">@software:  deploy-system</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">import json</span><br><span class="line">import shutil</span><br><span class="line">from collections import namedtuple</span><br><span class="line">from ansible.parsing.dataloader import DataLoader</span><br><span class="line">from ansible.vars.manager import VariableManager</span><br><span class="line">from ansible.inventory.manager import InventoryManager</span><br><span class="line">from ansible.playbook.play import Play</span><br><span class="line">from ansible.executor.task_queue_manager import TaskQueueManager</span><br><span class="line">from ansible.executor.playbook_executor import PlaybookExecutor</span><br><span class="line">from ansible.executor.task_executor import TaskExecutor</span><br><span class="line">from ansible.plugins.callback import CallbackBase</span><br><span class="line">import ansible.constants as C</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ResultCallback(CallbackBase):</span><br><span class="line">    def __init__(self, *args, **kwargs):</span><br><span class="line">        # super(ResultsCollector, self).__init__(*args, **kwargs)</span><br><span class="line">        self.host_ok &#x3D; &#123;&#125;</span><br><span class="line">        self.host_unreachable &#x3D; &#123;&#125;</span><br><span class="line">        self.host_failed &#x3D; &#123;&#125;</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_unreachable(self, result):</span><br><span class="line">        self.host_unreachable[result._host.get_name()] &#x3D; result</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_ok(self, result, *args, **kwargs):</span><br><span class="line">        self.host_ok[result._host.get_name()] &#x3D; result</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_failed(self, result, *args, **kwargs):</span><br><span class="line">        self.host_failed[result._host.get_name()] &#x3D; result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class AnsibleApi(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.Options &#x3D; namedtuple(&#39;Options&#39;,</span><br><span class="line">                                  [&#39;connection&#39;,</span><br><span class="line">                                   &#39;remote_user&#39;,</span><br><span class="line">                                   &#39;ask_sudo_pass&#39;,</span><br><span class="line">                                   &#39;verbosity&#39;,</span><br><span class="line">                                   &#39;ack_pass&#39;,</span><br><span class="line">                                   &#39;module_path&#39;,</span><br><span class="line">                                   &#39;forks&#39;,</span><br><span class="line">                                   &#39;become&#39;,</span><br><span class="line">                                   &#39;become_method&#39;,</span><br><span class="line">                                   &#39;become_user&#39;,</span><br><span class="line">                                   &#39;check&#39;,</span><br><span class="line">                                   &#39;listhosts&#39;,</span><br><span class="line">                                   &#39;listtasks&#39;,</span><br><span class="line">                                   &#39;listtags&#39;,</span><br><span class="line">                                   &#39;syntax&#39;,</span><br><span class="line">                                   &#39;sudo_user&#39;,</span><br><span class="line">                                   &#39;sudo&#39;,</span><br><span class="line">                                   &#39;diff&#39;])</span><br><span class="line"></span><br><span class="line">        self.ops &#x3D; self.Options(connection&#x3D;&#39;local&#39;,</span><br><span class="line">                                remote_user&#x3D;None,</span><br><span class="line">                                ack_pass&#x3D;None,</span><br><span class="line">                                sudo_user&#x3D;None,</span><br><span class="line">                                forks&#x3D;50,</span><br><span class="line">                                sudo&#x3D;None,</span><br><span class="line">                                ask_sudo_pass&#x3D;False,</span><br><span class="line">                                verbosity&#x3D;5,</span><br><span class="line">                                module_path&#x3D;None,</span><br><span class="line">                                become&#x3D;None,</span><br><span class="line">                                become_method&#x3D;None,</span><br><span class="line">                                become_user&#x3D;None,</span><br><span class="line">                                check&#x3D;False,</span><br><span class="line">                                diff&#x3D;False,</span><br><span class="line">                                listhosts&#x3D;None,</span><br><span class="line">                                listtasks&#x3D;None,</span><br><span class="line">                                listtags&#x3D;None,</span><br><span class="line">                                syntax&#x3D;None)</span><br><span class="line"></span><br><span class="line">        self.loader &#x3D; DataLoader()</span><br><span class="line">        self.passwords &#x3D; dict()</span><br><span class="line">        self.results_callback &#x3D; ResultCallback()</span><br><span class="line">        self.inventory &#x3D; InventoryManager(loader&#x3D;self.loader,</span><br><span class="line">                                          sources&#x3D;[&#39;&#x2F;Users&#x2F;shuke&#x2F;Work&#x2F;SCM&#x2F;rcx_rce.deploy&#x2F;playbook&#x2F;inventory&#x2F;rcx&#x2F;hosts.ini&#39;])</span><br><span class="line">        self.variable_manager &#x3D; VariableManager(loader&#x3D;self.loader, inventory&#x3D;self.inventory)</span><br><span class="line"></span><br><span class="line">    def runansible(self, host_list, task_list):</span><br><span class="line"></span><br><span class="line">        play_source &#x3D; dict(</span><br><span class="line">            name&#x3D;&quot;Ansible Play&quot;,</span><br><span class="line">            hosts&#x3D;host_list,</span><br><span class="line">            gather_facts&#x3D;&#39;no&#39;,</span><br><span class="line">            tasks&#x3D;task_list</span><br><span class="line">        )</span><br><span class="line">        play &#x3D; Play().load(play_source, variable_manager&#x3D;self.variable_manager, loader&#x3D;self.loader)</span><br><span class="line"></span><br><span class="line">        tqm &#x3D; None</span><br><span class="line">        try:</span><br><span class="line">            tqm &#x3D; TaskQueueManager(</span><br><span class="line">                inventory&#x3D;self.inventory,</span><br><span class="line">                variable_manager&#x3D;self.variable_manager,</span><br><span class="line">                loader&#x3D;self.loader,</span><br><span class="line">                passwords&#x3D;self.passwords,</span><br><span class="line">                stdout_callback&#x3D;self.results_callback,</span><br><span class="line">                run_tree&#x3D;False,</span><br><span class="line">            )</span><br><span class="line">            result &#x3D; tqm.run(play)</span><br><span class="line">        finally:</span><br><span class="line">            if tqm is not None:</span><br><span class="line">                tqm.cleanup()</span><br><span class="line">            shutil.rmtree(C.DEFAULT_LOCAL_TMP, True)</span><br><span class="line"></span><br><span class="line">        results_raw &#x3D; &#123;&#125;</span><br><span class="line">        results_raw[&#39;success&#39;] &#x3D; &#123;&#125;</span><br><span class="line">        results_raw[&#39;failed&#39;] &#x3D; &#123;&#125;</span><br><span class="line">        results_raw[&#39;unreachable&#39;] &#x3D; &#123;&#125;</span><br><span class="line"></span><br><span class="line">        for host, result in self.results_callback.host_ok.items():</span><br><span class="line">            results_raw[&#39;success&#39;][host] &#x3D; json.dumps(result._result)</span><br><span class="line"></span><br><span class="line">        for host, result in self.results_callback.host_failed.items():</span><br><span class="line">            results_raw[&#39;failed&#39;][host] &#x3D; result._result[&#39;msg&#39;]</span><br><span class="line"></span><br><span class="line">        for host, result in self.results_callback.host_unreachable.items():</span><br><span class="line">            results_raw[&#39;unreachable&#39;][host] &#x3D; result._result[&#39;msg&#39;]</span><br><span class="line"></span><br><span class="line">        print(results_raw)</span><br><span class="line"></span><br><span class="line">    def playbookrun(self, playbook_path):</span><br><span class="line"></span><br><span class="line">        self.variable_manager.extra_vars &#x3D; &#123;&#39;customer&#39;: &#39;test&#39;, &#39;disabled&#39;: &#39;yes&#39;&#125;</span><br><span class="line">        playbook &#x3D; PlaybookExecutor(playbooks&#x3D;playbook_path,</span><br><span class="line">                                    inventory&#x3D;self.inventory,</span><br><span class="line">                                    variable_manager&#x3D;self.variable_manager,</span><br><span class="line">                                    loader&#x3D;self.loader, passwords&#x3D;self.passwords)</span><br><span class="line">        result &#x3D; playbook.run()</span><br><span class="line">        return result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    a &#x3D; AnsibleApi()</span><br><span class="line">    host_list &#x3D; [&#39;all&#39;]</span><br><span class="line">    tasks_list &#x3D; [</span><br><span class="line">        dict(action&#x3D;dict(module&#x3D;&#39;setup&#39;, )),</span><br><span class="line">    ]</span><br><span class="line">    a.runansible(host_list, tasks_list)</span><br><span class="line">    # a.playbookrun(playbook_path&#x3D;[&#39;&#x2F;home&#x2F;jenkins&#x2F;python_script&#x2F;collect_data.yml&#39;])</span><br></pre></td></tr></table></figure><h2 id="example2"><a href="#example2" class="headerlink" title="example2"></a>example2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">@aythor: shuke</span><br><span class="line">@file: ansible_api_v2.py </span><br><span class="line">@content: zhaofengfeng@rongcloud.cn</span><br><span class="line">@time: 2020&#x2F;03&#x2F;10 09:46</span><br><span class="line">@software:  Door</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import re</span><br><span class="line">import json</span><br><span class="line">import logging</span><br><span class="line">import datetime</span><br><span class="line">import shutil</span><br><span class="line">from ansible import constants as C</span><br><span class="line">from collections import namedtuple</span><br><span class="line">from ansible.parsing.dataloader import DataLoader</span><br><span class="line">from ansible.playbook.play import Play</span><br><span class="line">from ansible.executor.task_queue_manager import TaskQueueManager</span><br><span class="line">from ansible.executor.playbook_executor import PlaybookExecutor</span><br><span class="line">from ansible.plugins.callback import CallbackBase</span><br><span class="line">from ansible.inventory.manager import InventoryManager</span><br><span class="line">from ansible.vars.manager import VariableManager</span><br><span class="line">from ansible.inventory.host import Host</span><br><span class="line">from ansible.parsing.ajson import AnsibleJSONEncoder</span><br><span class="line">from django.conf import settings</span><br><span class="line"></span><br><span class="line">PATH &#x3D; os.path.dirname(os.path.dirname(os.path.realpath(__file__)))</span><br><span class="line">sys.path.insert(0, PATH)</span><br><span class="line">#</span><br><span class="line"># os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;Door.settings&quot;)</span><br><span class="line">#</span><br><span class="line"># import django</span><br><span class="line">#</span><br><span class="line"># django.setup()</span><br><span class="line"></span><br><span class="line"># from apps.host.models import Cmdb</span><br><span class="line"></span><br><span class="line">logger &#x3D; logging.getLogger(&quot;door&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def current_time():</span><br><span class="line">    return &#39;%sZ&#39; % datetime.datetime.utcnow().isoformat()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class CallbackModule(CallbackBase):</span><br><span class="line">    CALLBACK_VERSION &#x3D; 2.0</span><br><span class="line">    CALLBACK_TYPE &#x3D; &#39;stdout&#39;</span><br><span class="line">    CALLBACK_NAME &#x3D; &#39;tomysql&#39;</span><br><span class="line"></span><br><span class="line">    def __init__(self, display&#x3D;None):</span><br><span class="line">        super(CallbackModule, self).__init__(display)</span><br><span class="line">        self.results &#x3D; []</span><br><span class="line"></span><br><span class="line">    def _new_play(self, play):</span><br><span class="line">        return &#123;</span><br><span class="line">            &#39;play&#39;: &#123;</span><br><span class="line">                &#39;name&#39;: play.get_name(),</span><br><span class="line">                &#39;id&#39;: str(play._uuid),</span><br><span class="line">                &#39;duration&#39;: &#123;</span><br><span class="line">                    &#39;start&#39;: current_time()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#39;tasks&#39;: []</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    def _new_task(self, task):</span><br><span class="line">        return &#123;</span><br><span class="line">            &#39;task&#39;: &#123;</span><br><span class="line">                &#39;name&#39;: task.get_name(),</span><br><span class="line">                &#39;id&#39;: str(task._uuid),</span><br><span class="line">                &#39;duration&#39;: &#123;</span><br><span class="line">                    &#39;start&#39;: current_time()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#39;hosts&#39;: &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_ok(self, result, **kwargs):</span><br><span class="line">        hostname &#x3D; result._host.get_name()</span><br><span class="line">        logger.info(f&quot;ansible v2_runner_on_ok hostname: &#123;hostname&#125;&quot;)</span><br><span class="line"></span><br><span class="line">        try:</span><br><span class="line">            host &#x3D; result._result[&quot;ansible_facts&quot;]</span><br><span class="line"></span><br><span class="line">            host_info &#x3D; &#123;&#125;</span><br><span class="line">            host_info[&quot;hostname&quot;] &#x3D; hostname</span><br><span class="line">            host_info[&quot;fqdn&quot;] &#x3D; host.get(&quot;ansible_fqdn&quot;, None)</span><br><span class="line">            host_info[&quot;cpu&quot;] &#x3D; str(host.get(&quot;ansible_processor_vcpus&quot;, None)) + &quot;c&quot;</span><br><span class="line">            host_info[&quot;memory&quot;] &#x3D; str(round(host.get(&quot;ansible_memtotal_mb&quot;) &#x2F; 1024) + 1) + &quot; GB&quot;</span><br><span class="line">            host_info[&quot;disk&quot;] &#x3D; host.get(&quot;ansible_devices&quot;)[&quot;vda&quot;][&quot;size&quot;]</span><br><span class="line">            host_info[&quot;disk_format&quot;] &#x3D; host.get(&quot;ansible_mounts&quot;)[0][&quot;fstype&quot;]</span><br><span class="line">            host_info[&quot;mount_point&quot;] &#x3D; host.get(&quot;ansible_mounts&quot;)[0][&quot;mount&quot;]</span><br><span class="line">            host_info[&quot;ipv4&quot;] &#x3D; host.get(&quot;ansible_default_ipv4&quot;)[&quot;address&quot;]</span><br><span class="line">            host_info[&quot;arch&quot;] &#x3D; host.get(&quot;ansible_architecture&quot;, None)</span><br><span class="line">            host_info[&quot;os_type&quot;] &#x3D; host.get(&quot;ansible_distribution&quot;, None)</span><br><span class="line">            host_info[&quot;os_version&quot;] &#x3D; host.get(&quot;ansible_distribution_version&quot;, None)</span><br><span class="line">            host_info[&quot;machine_id&quot;] &#x3D; host.get(&quot;ansible_machine_id&quot;, None)</span><br><span class="line">            host_info[&quot;macaddress&quot;] &#x3D; host.get(&quot;ansible_default_ipv4&quot;)[&quot;macaddress&quot;]</span><br><span class="line">            host_info[&quot;kernel_info&quot;] &#x3D; host.get(&quot;ansible_kernel&quot;, None)</span><br><span class="line">            host_info[&quot;virtualization_type&quot;] &#x3D; host.get(&quot;ansible_virtualization_type&quot;, None)</span><br><span class="line"></span><br><span class="line">            import json</span><br><span class="line">            print(json.dumps(host_info, indent&#x3D;4, ensure_ascii&#x3D;False))</span><br><span class="line"></span><br><span class="line">            # models.Cmdb.objects.get_or_create(host_info)</span><br><span class="line"></span><br><span class="line">        except Exception as e:</span><br><span class="line">            logger.error(f&quot;get ansible facts result faild: &#123;e.__class__.__name__&#125;: &#123;e&#125;&quot;)</span><br><span class="line">            raise Exception(&quot;&#123;hostname&#125; already exist&quot;.format(hostname&#x3D;hostname))</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_unreachable(self, result):</span><br><span class="line">        logger.info(&quot;unreachable host: %s&quot; % result._host.get_name())</span><br><span class="line">        self.host_unreachable[result._host.get_name()] &#x3D; result</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_failed(self, result, *args, **kwargs):</span><br><span class="line">        # print(result.__dict__)</span><br><span class="line">        logger.info(&quot;主机执行失败: &quot;.format(result._host.get_name()))</span><br><span class="line">        self.results.append(&#123;result._host.get_name(): result&#125;)</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_play_start(self, play):</span><br><span class="line">        self.results.append(self._new_play(play))</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_task_start(self, task, is_conditional):</span><br><span class="line">        self.results[-1][&#39;tasks&#39;].append(self._new_task(task))</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_handler_task_start(self, task):</span><br><span class="line">        self.results[-1][&#39;tasks&#39;].append(self._new_task(task))</span><br><span class="line"></span><br><span class="line">    def _convert_host_to_name(self, key):</span><br><span class="line">        if isinstance(key, (Host,)):</span><br><span class="line">            return key.get_name()</span><br><span class="line">        return key</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_stats(self, stats):</span><br><span class="line">        &quot;&quot;&quot;Display info about playbook statistics&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">        hosts &#x3D; sorted(stats.processed.keys())</span><br><span class="line"></span><br><span class="line">        summary &#x3D; &#123;&#125;</span><br><span class="line">        for h in hosts:</span><br><span class="line">            s &#x3D; stats.summarize(h)</span><br><span class="line">            summary[h] &#x3D; s</span><br><span class="line"></span><br><span class="line">        custom_stats &#x3D; &#123;&#125;</span><br><span class="line">        global_custom_stats &#x3D; &#123;&#125;</span><br><span class="line"></span><br><span class="line">        if self.get_option(&#39;show_custom_stats&#39;) and stats.custom:</span><br><span class="line">            custom_stats.update(dict((self._convert_host_to_name(k), v) for k, v in stats.custom.items()))</span><br><span class="line">            global_custom_stats.update(custom_stats.pop(&#39;_run&#39;, &#123;&#125;))</span><br><span class="line"></span><br><span class="line">        output &#x3D; &#123;</span><br><span class="line">            &#39;plays&#39;: self.results,</span><br><span class="line">            &#39;stats&#39;: summary,</span><br><span class="line">            &#39;custom_stats&#39;: custom_stats,</span><br><span class="line">            &#39;global_custom_stats&#39;: global_custom_stats,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        self._display.display(json.dumps(output, cls&#x3D;AnsibleJSONEncoder, indent&#x3D;4, sort_keys&#x3D;True))</span><br><span class="line"></span><br><span class="line">    def _record_task_result(self, on_info, result, **kwargs):</span><br><span class="line">        &quot;&quot;&quot;This function is used as a partial to add failed&#x2F;skipped info in a single method&quot;&quot;&quot;</span><br><span class="line">        host &#x3D; result._host</span><br><span class="line">        task &#x3D; result._task</span><br><span class="line">        task_result &#x3D; result._result.copy()</span><br><span class="line">        task_result.update(on_info)</span><br><span class="line">        task_result[&#39;action&#39;] &#x3D; task.action</span><br><span class="line">        self.results[-1][&#39;tasks&#39;][-1][&#39;hosts&#39;][host.name] &#x3D; task_result</span><br><span class="line">        end_time &#x3D; current_time()</span><br><span class="line">        self.results[-1][&#39;tasks&#39;][-1][&#39;task&#39;][&#39;duration&#39;][&#39;end&#39;] &#x3D; end_time</span><br><span class="line">        self.results[-1][&#39;play&#39;][&#39;duration&#39;][&#39;end&#39;] &#x3D; end_time</span><br><span class="line"></span><br><span class="line">    # def __getattribute__(self, name):</span><br><span class="line">    #     &quot;&quot;&quot;Return &#96;&#96;_record_task_result&#96;&#96; partial with a dict containing skipped&#x2F;failed if necessary&quot;&quot;&quot;</span><br><span class="line">    #     if name not in (&#39;v2_runner_on_ok&#39;, &#39;v2_runner_on_failed&#39;, &#39;v2_runner_on_unreachable&#39;, &#39;v2_runner_on_skipped&#39;):</span><br><span class="line">    #         return object.__getattribute__(self, name)</span><br><span class="line">    #</span><br><span class="line">    #     on &#x3D; name.rsplit(&#39;_&#39;, 1)[1]</span><br><span class="line">    #</span><br><span class="line">    #     on_info &#x3D; &#123;&#125;</span><br><span class="line">    #     if on in (&#39;failed&#39;, &#39;skipped&#39;):</span><br><span class="line">    #         on_info[on] &#x3D; True</span><br><span class="line">    #</span><br><span class="line">    #     # logger.info(&quot;Event: &#123;name&#125;, Task status: &#123;status&#125;&quot;.format(name&#x3D;name, status&#x3D;on))</span><br><span class="line">    #     return partial(self._record_task_result, on_info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class DeployResultsCollector(CallbackBase):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    直接执行模块命令的回调类</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    def __init__(self, sock, send_msg, *args, **kwargs):</span><br><span class="line">        super(DeployResultsCollector, self).__init__(*args, **kwargs)</span><br><span class="line">        self.sock &#x3D; sock</span><br><span class="line">        self.send_msg &#x3D; send_msg</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_unreachable(self, result):</span><br><span class="line">        if &#39;msg&#39; in result._result:</span><br><span class="line">            data &#x3D; &#39;主机&#123;host&#125;不可达！&#x3D;&#x3D;&gt; &#123;stdout&#125;\n剔除该主机!\n&#39;.format(host&#x3D;result._host.name, stdout&#x3D;result._result.get(&#39;msg&#39;))</span><br><span class="line">        else:</span><br><span class="line">            data &#x3D; &#39;主机&#123;host&#125;不可达！&#x3D;&#x3D;&gt; &#123;stdout&#125;\n剔除该主机!\n&#39;.format(host&#x3D;result._host.name,</span><br><span class="line">                                                               stdout&#x3D;json.dumps(result._result, indent&#x3D;4))</span><br><span class="line"></span><br><span class="line">        self.chk_host_list(data, result._host.name)</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_ok(self, result, *args, **kwargs):</span><br><span class="line">        data &#x3D; &#39;主机&#123;host&#125;执行任务成功！\n&#39;.format(host&#x3D;result._host.name)</span><br><span class="line">        self.sock.send_save(data, send&#x3D;self.send_msg)</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_failed(self, result, *args, **kwargs):</span><br><span class="line">        if &#39;stderr&#39; in result._result:</span><br><span class="line">            data &#x3D; &#39;&lt;p style&#x3D;&quot;color: #FF0000&quot;&gt;\n主机&#123;host&#125;执行任务失败 &#x3D;&#x3D;&gt; &#123;stdout&#125;\n剔除该主机！&lt;&#x2F;p&gt;&#39;.format(</span><br><span class="line">                host&#x3D;result._host.name, stdout&#x3D;result._result.get(&#39;stderr&#39;).encode().decode(&#39;utf-8&#39;))</span><br><span class="line">        elif &#39;msg&#39; in result._result:</span><br><span class="line">            data &#x3D; &#39;&lt;p style&#x3D;&quot;color: #FF0000&quot;&gt;\n主机&#123;host&#125;执行任务失败 &#x3D;&#x3D;&gt; &#123;stdout&#125;\n剔除该主机！&lt;&#x2F;p&gt;&#39;.format(</span><br><span class="line">                host&#x3D;result._host.name, stdout&#x3D;result._result.get(&#39;msg&#39;))</span><br><span class="line">        else:</span><br><span class="line">            data &#x3D; &#39;&lt;p style&#x3D;&quot;color: #FF0000&quot;&gt;\n主机&#123;host&#125;执行任务失败 &#x3D;&#x3D;&gt; &#123;stdout&#125;\n剔除该主机！&lt;&#x2F;p&gt;&#39;.format(</span><br><span class="line">                host&#x3D;result._host.name, stdout&#x3D;json.dumps(result._result, indent&#x3D;4))</span><br><span class="line">        self.chk_host_list(data, result._host.name)</span><br><span class="line"></span><br><span class="line">    def chk_host_list(self, data, host):</span><br><span class="line">        self.sock.send_save(data, send&#x3D;self.send_msg)</span><br><span class="line">        self.sock.host_list.remove(host)</span><br><span class="line">        self.sock.host_fail.append(host)</span><br><span class="line">        if len(self.sock.host_list) &#x3D;&#x3D; 0:</span><br><span class="line">            self.sock.send(&#39;&lt;p style&#x3D;&quot;color: #FF0000&quot;&gt;所有主机均部署失败！退出部署流程！&lt;&#x2F;p&gt;&#39;, close&#x3D;True)</span><br><span class="line">            self.sock.deploy_results.append(&#39;&lt;p style&#x3D;&quot;color: #FF0000&quot;&gt;所有主机均部署失败！退出部署流程！&lt;&#x2F;p&gt;&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ModuleResultsCollector(CallbackBase):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    直接执行模块命令的回调类</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    def __init__(self, sock&#x3D;None, *args, **kwargs):</span><br><span class="line">        super(ModuleResultsCollector, self).__init__(*args, **kwargs)</span><br><span class="line">        self.module_results &#x3D; []</span><br><span class="line">        self.sock &#x3D; sock</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_unreachable(self, result):</span><br><span class="line">        if &#39;msg&#39; in result._result:</span><br><span class="line">            data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #FF0000&quot;&gt;\n&#123;host&#125; | unreachable | rc&#x3D;&#123;rc&#125; &gt;&gt; \n&#123;stdout&#125;\n&lt;&#x2F;code&gt;&#39;.format(</span><br><span class="line">                host&#x3D;result._host.name, rc&#x3D;result._result.get(&#39;rc&#39;),</span><br><span class="line">                stdout&#x3D;result._result.get(&#39;msg&#39;).encode().decode(&#39;utf-8&#39;))</span><br><span class="line">        else:</span><br><span class="line">            data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #FF0000&quot;&gt;\n&#123;host&#125; | unreachable &gt;&gt; \n&#123;stdout&#125;\n&lt;&#x2F;code&gt;&#39;.format(</span><br><span class="line">                host&#x3D;result._host.name,</span><br><span class="line">                stdout&#x3D;json.dumps(result._result, indent&#x3D;4, ensure_ascii&#x3D;False))</span><br><span class="line">        if self.sock:</span><br><span class="line">            self.sock.send(data)</span><br><span class="line">        self.module_results.append(data)</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_ok(self, result, *args, **kwargs):</span><br><span class="line"></span><br><span class="line">        if &#39;rc&#39; in result._result and &#39;stdout&#39; in result._result:</span><br><span class="line">            data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #008000&quot;&gt;\n&#123;host&#125; | success | rc&#x3D;&#123;rc&#125; &gt;&gt; \n&#123;stdout&#125;\n&lt;&#x2F;code&gt;&#39;.format(</span><br><span class="line">                host&#x3D;result._host.name, rc&#x3D;result._result.get(&#39;rc&#39;),</span><br><span class="line">                stdout&#x3D;result._result.get(&#39;stdout&#39;).encode().decode(&#39;utf-8&#39;))</span><br><span class="line">        elif &#39;results&#39; in result._result and &#39;rc&#39; in result._result:</span><br><span class="line">            data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #008000&quot;&gt;\n&#123;host&#125; | success | rc&#x3D;&#123;rc&#125; &gt;&gt; \n&#123;stdout&#125;\n&lt;&#x2F;code&gt;&#39;.format(</span><br><span class="line">                host&#x3D;result._host.name, rc&#x3D;result._result.get(&#39;rc&#39;),</span><br><span class="line">                stdout&#x3D;result._result.get(&#39;results&#39;)[0].encode().decode(&#39;utf-8&#39;))</span><br><span class="line">        elif &#39;module_stdout&#39; in result._result and &#39;rc&#39; in result._result:</span><br><span class="line">            data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #008000&quot;&gt;\n&#123;host&#125; | success | rc&#x3D;&#123;rc&#125; &gt;&gt; \n&#123;stdout&#125;\n&lt;&#x2F;code&gt;&#39;.format(</span><br><span class="line">                host&#x3D;result._host.name, rc&#x3D;result._result.get(&#39;rc&#39;),</span><br><span class="line">                stdout&#x3D;result._result.get(&#39;module_stdout&#39;).encode().decode(&#39;utf-8&#39;))</span><br><span class="line">        else:</span><br><span class="line">            data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #008000&quot;&gt;\n&#123;host&#125; | success &gt;&gt; \n&#123;stdout&#125;\n&lt;&#x2F;code&gt;&#39;.format(</span><br><span class="line">                host&#x3D;result._host.name,</span><br><span class="line">                stdout&#x3D;json.dumps(result._result, indent&#x3D;4, ensure_ascii&#x3D;False))</span><br><span class="line">        if self.sock:</span><br><span class="line">            self.sock.send(data)</span><br><span class="line">        self.module_results.append(data)</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_failed(self, result, *args, **kwargs):</span><br><span class="line">        if &#39;stderr&#39; in result._result:</span><br><span class="line">            data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #FF0000&quot;&gt;\n&#123;host&#125; | failed | rc&#x3D;&#123;rc&#125; &gt;&gt; \n&#123;stdout&#125;\n&lt;&#x2F;code&gt;&#39;.format(</span><br><span class="line">                host&#x3D;result._host.name,</span><br><span class="line">                rc&#x3D;result._result.get(&#39;rc&#39;),</span><br><span class="line">                stdout&#x3D;result._result.get(&#39;stderr&#39;).encode().decode(&#39;utf-8&#39;))</span><br><span class="line">        elif &#39;module_stdout&#39; in result._result:</span><br><span class="line">            data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #FF0000&quot;&gt;\n&#123;host&#125; | failed | rc&#x3D;&#123;rc&#125; &gt;&gt; \n&#123;stdout&#125;\n&lt;&#x2F;code&gt;&#39;.format(</span><br><span class="line">                host&#x3D;result._host.name,</span><br><span class="line">                rc&#x3D;result._result.get(&#39;rc&#39;),</span><br><span class="line">                stdout&#x3D;result._result.get(&#39;module_stdout&#39;).encode().decode(&#39;utf-8&#39;))</span><br><span class="line">        else:</span><br><span class="line">            data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #FF0000&quot;&gt;\n&#123;host&#125; | failed &gt;&gt; \n&#123;stdout&#125;\n&lt;&#x2F;code&gt;&#39;.format(</span><br><span class="line">                host&#x3D;result._host.name,</span><br><span class="line">                stdout&#x3D;json.dumps(result._result, indent&#x3D;4, ensure_ascii&#x3D;False))</span><br><span class="line">        if self.sock:</span><br><span class="line">            self.sock.send(data)</span><br><span class="line">        self.module_results.append(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class PlayBookResultsCollector(CallbackBase):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    执行playbook的回调类</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    def __init__(self, sock, *args, **kwargs):</span><br><span class="line">        super(PlayBookResultsCollector, self).__init__(*args, **kwargs)</span><br><span class="line">        self.playbook_results &#x3D; []</span><br><span class="line">        self.sock &#x3D; sock</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_play_start(self, play):</span><br><span class="line">        name &#x3D; play.get_name().strip()</span><br><span class="line">        if not name:</span><br><span class="line">            msg &#x3D; format(&#39;&lt;code style&#x3D;&quot;color: #FFFFFF&quot;&gt;\nPLAY&#39;, &#39;*&lt;150&#39;) + &#39; \n&lt;&#x2F;code&gt;&#39;</span><br><span class="line">        else:</span><br><span class="line">            msg &#x3D; format(f&#39;&lt;code style&#x3D;&quot;color: #FFFFFF&quot;&gt;\nPLAY [&#123;name&#125;]&#39;, &#39;*&lt;150&#39;) + &#39; \n&lt;&#x2F;code&gt;&#39;</span><br><span class="line">        self.send_save(msg)</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_task_start(self, task, is_conditional):</span><br><span class="line">        msg &#x3D; format(f&#39;&lt;code style&#x3D;&quot;color: #FFFFFF&quot;&gt;\nTASK [&#123;task.get_name()&#125;]&#39;, &#39;*&lt;150&#39;) + &#39; \n&lt;&#x2F;code&gt;&#39;</span><br><span class="line">        self.send_save(msg)</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_ok(self, result, *args, **kwargs):</span><br><span class="line">        if result.is_changed():</span><br><span class="line">            data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #FFFF00&quot;&gt;[&#123;&#125;]&#x3D;&gt; changed\n&lt;&#x2F;code&gt;&#39;.format(result._host.name)</span><br><span class="line">        else:</span><br><span class="line">            data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #008000&quot;&gt;[&#123;&#125;]&#x3D;&gt; ok\n&lt;&#x2F;code&gt;&#39;.format(result._host.name)</span><br><span class="line">        self.send_save(data)</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_failed(self, result, *args, **kwargs):</span><br><span class="line">        if &#39;changed&#39; in result._result:</span><br><span class="line">            del result._result[&#39;changed&#39;]</span><br><span class="line">        data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #FF0000&quot;&gt;[&#123;&#125;]&#x3D;&gt; &#123;&#125;: &#123;&#125;\n&lt;&#x2F;code&gt;&#39;.format(result._host.name, &#39;failed&#39;,</span><br><span class="line">                                                                            self._dump_results(result._result))</span><br><span class="line">        self.send_save(data)</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_unreachable(self, result):</span><br><span class="line">        if &#39;changed&#39; in result._result:</span><br><span class="line">            del result._result[&#39;changed&#39;]</span><br><span class="line">        data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #FF0000&quot;&gt;[&#123;&#125;]&#x3D;&gt; &#123;&#125;: &#123;&#125;\n&lt;&#x2F;code&gt;&#39;.format(result._host.name, &#39;unreachable&#39;,</span><br><span class="line">                                                                            self._dump_results(result._result))</span><br><span class="line">        self.send_save(data)</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_skipped(self, result):</span><br><span class="line">        if &#39;changed&#39; in result._result:</span><br><span class="line">            del result._result[&#39;changed&#39;]</span><br><span class="line">        data &#x3D; &#39;&lt;code style&#x3D;&quot;color: #FFFF00&quot;&gt;[&#123;&#125;]&#x3D;&gt; &#123;&#125;: &#123;&#125;\n&lt;&#x2F;code&gt;&#39;.format(result._host.name, &#39;skipped&#39;,</span><br><span class="line">                                                                            self._dump_results(result._result))</span><br><span class="line">        self.send_save(data)</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_stats(self, stats):</span><br><span class="line">        hosts &#x3D; sorted(stats.processed.keys())</span><br><span class="line">        data &#x3D; format(&#39;&lt;code style&#x3D;&quot;color: #FFFFFF&quot;&gt;\nPLAY RECAP &#39;, &#39;*&lt;150&#39;) + &#39;\n&#39;</span><br><span class="line">        self.send_save(data)</span><br><span class="line">        for h in hosts:</span><br><span class="line">            s &#x3D; stats.summarize(h)</span><br><span class="line">            msg &#x3D; &#39;&lt;code style&#x3D;&quot;color: #FFFFFF&quot;&gt;&#123;&#125; : ok&#x3D;&#123;&#125; changed&#x3D;&#123;&#125; unreachable&#x3D;&#123;&#125; failed&#x3D;&#123;&#125; skipped&#x3D;&#123;&#125;\n&lt;&#x2F;code&gt;&#39;.format(</span><br><span class="line">                h, s[&#39;ok&#39;], s[&#39;changed&#39;], s[&#39;unreachable&#39;], s[&#39;failures&#39;], s[&#39;skipped&#39;])</span><br><span class="line">            self.send_save(msg)</span><br><span class="line"></span><br><span class="line">    def send_save(self, data):</span><br><span class="line">        self.sock.send(data)</span><br><span class="line">        self.playbook_results.append(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class MyInventory(InventoryManager):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    用于动态生成Inventory的类.</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    def __init__(self, loader, resource&#x3D;None, sources&#x3D;None):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        resource的数据格式是一个列表字典，比如</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;group1&quot;: &#123;</span><br><span class="line">                    &quot;hosts&quot;: [&#123;&quot;ip&quot;: &quot;10.0.0.0&quot;, &quot;port&quot;: &quot;22&quot;, &quot;username&quot;: &quot;test&quot;, &quot;password&quot;: &quot;pass&quot;&#125;, ...],</span><br><span class="line">                    &quot;group_vars&quot;: &#123;&quot;var1&quot;: value1, &quot;var2&quot;: value2, ...&#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">             如果你只传入1个列表，这默认该列表内的所有主机属于default 组,比如</span><br><span class="line">            [&#123;&quot;ip&quot;: &quot;10.0.0.0&quot;, &quot;port&quot;: &quot;22&quot;, &quot;username&quot;: &quot;test&quot;, &quot;password&quot;: &quot;pass&quot;&#125;, ...]</span><br><span class="line">        sources是原生的方法，参数是配置的inventory文件路径，可以指定一个，也可以以列表的形式可以指定多个</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        super(MyInventory, self).__init__(loader&#x3D;loader, sources&#x3D;sources)</span><br><span class="line">        self.resource &#x3D; resource</span><br><span class="line">        self.dynamic_inventory()</span><br><span class="line"></span><br><span class="line">    def add_dynamic_group(self, hosts, group_name, group_vars&#x3D;None):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        将从数据库读取的组信息，主机信息等生成的resource信息解析成ansible可以读取的内容</span><br><span class="line">        :param hosts: 包含主机所有信息的的列表</span><br><span class="line">        :type hosts: list</span><br><span class="line">        :param group_name:</span><br><span class="line">        :param group_vars:</span><br><span class="line">        :type group_vars: dict</span><br><span class="line">        :return:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        # 添加主机组</span><br><span class="line">        self.add_group(group_name)</span><br><span class="line"></span><br><span class="line">        # 添加主机组变量</span><br><span class="line">        if group_vars:</span><br><span class="line">            for key, value in group_vars.items():</span><br><span class="line">                self.groups[group_name].set_variable(key, value)</span><br><span class="line"></span><br><span class="line">        for host in hosts:</span><br><span class="line">            ip &#x3D; host.get(&#39;ip&#39;)</span><br><span class="line">            port &#x3D; host.get(&#39;port&#39;)</span><br><span class="line"></span><br><span class="line">            # 添加主机到主机组</span><br><span class="line">            self.add_host(ip, group_name, port)</span><br><span class="line"></span><br><span class="line">            username &#x3D; host.get(&#39;username&#39;)</span><br><span class="line">            password &#x3D; host.get(&#39;password&#39;)</span><br><span class="line"></span><br><span class="line">            # 生成ansible主机变量</span><br><span class="line">            self.get_host(ip).set_variable(&#39;ansible_ssh_host&#39;, ip)</span><br><span class="line">            self.get_host(ip).set_variable(&#39;ansible_ssh_port&#39;, port)</span><br><span class="line">            self.get_host(ip).set_variable(&#39;ansible_ssh_user&#39;, username)</span><br><span class="line">            self.get_host(ip).set_variable(&#39;ansible_ssh_pass&#39;, password)</span><br><span class="line">            self.get_host(ip).set_variable(&#39;ansible_sudo_pass&#39;, password)</span><br><span class="line"></span><br><span class="line">            # 如果使用同一个密钥管理所有机器，只需把下方的注释去掉，ssh_key指定密钥文件，若是不同主机使用不同密钥管理，则需要单独设置主机变量或组变量</span><br><span class="line">            # self.get_host(ip).set_variable(&#39;ansible_ssh_private_key_file&#39;, ssh_key)</span><br><span class="line"></span><br><span class="line">            # set other variables</span><br><span class="line">            for key, value in host.items():</span><br><span class="line">                if key not in [&quot;ip&quot;, &quot;port&quot;, &quot;username&quot;, &quot;password&quot;]:</span><br><span class="line">                    self.get_host(ip).set_variable(key, value)</span><br><span class="line"></span><br><span class="line">    def dynamic_inventory(self):</span><br><span class="line">        if isinstance(self.resource, list):</span><br><span class="line">            self.add_dynamic_group(self.resource, &#39;default&#39;)</span><br><span class="line">        elif isinstance(self.resource, dict):</span><br><span class="line">            for groupname, hosts_and_vars in self.resource.items():</span><br><span class="line">                self.add_dynamic_group(hosts_and_vars.get(&quot;hosts&quot;), groupname, hosts_and_vars.get(&quot;group_vars&quot;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ANSRunner(object):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    执行ansible模块或者playbook的类，这里默认采用了用户名+密码+sudo的方式</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    def __init__(self, resource&#x3D;None, sources&#x3D;None, sock&#x3D;None, **kwargs):</span><br><span class="line">        Options &#x3D; namedtuple(&#39;Options&#39;, [&#39;connection&#39;, &#39;module_path&#39;, &#39;forks&#39;, &#39;timeout&#39;, &#39;remote_user&#39;,</span><br><span class="line">                                         &#39;ask_pass&#39;, &#39;private_key_file&#39;, &#39;ssh_common_args&#39;, &#39;ssh_extra_args&#39;,</span><br><span class="line">                                         &#39;sftp_extra_args&#39;, &#39;strategy&#39;,</span><br><span class="line">                                         &#39;scp_extra_args&#39;, &#39;become&#39;, &#39;become_method&#39;, &#39;become_user&#39;, &#39;ask_value_pass&#39;,</span><br><span class="line">                                         &#39;verbosity&#39;, &#39;retry_files_enabled&#39;,</span><br><span class="line">                                         &#39;check&#39;, &#39;listhosts&#39;, &#39;listtasks&#39;, &#39;listtags&#39;, &#39;syntax&#39;, &#39;diff&#39;,</span><br><span class="line">                                         &#39;gathering&#39;, &#39;roles_path&#39;])</span><br><span class="line">        self.options &#x3D; Options(connection&#x3D;&#39;smart&#39;,</span><br><span class="line">                               module_path&#x3D;None,</span><br><span class="line">                               forks&#x3D;50, timeout&#x3D;10,</span><br><span class="line">                               remote_user&#x3D;kwargs.get(&#39;remote_user&#39;, None), ask_pass&#x3D;False, private_key_file&#x3D;None,</span><br><span class="line">                               ssh_common_args&#x3D;None,</span><br><span class="line">                               ssh_extra_args&#x3D;None,</span><br><span class="line">                               sftp_extra_args&#x3D;None, strategy&#x3D;&#39;free&#39;, scp_extra_args&#x3D;None,</span><br><span class="line">                               become&#x3D;kwargs.get(&#39;become&#39;, None),</span><br><span class="line">                               become_method&#x3D;kwargs.get(&#39;become_method&#39;, None),</span><br><span class="line">                               become_user&#x3D;kwargs.get(&#39;become_user&#39;, None), ask_value_pass&#x3D;False, verbosity&#x3D;None,</span><br><span class="line">                               retry_files_enabled&#x3D;False, check&#x3D;False, listhosts&#x3D;False,</span><br><span class="line">                               listtasks&#x3D;False, listtags&#x3D;False, syntax&#x3D;False, diff&#x3D;True, gathering&#x3D;&#39;smart&#39;,</span><br><span class="line">                               roles_path&#x3D;os.path.join(PATH, &quot;..&#x2F;roles&quot;))</span><br><span class="line">        self.loader &#x3D; DataLoader()</span><br><span class="line">        self.inventory &#x3D; MyInventory(resource&#x3D;resource, loader&#x3D;self.loader, sources&#x3D;sources)</span><br><span class="line">        self.variable_manager &#x3D; VariableManager(loader&#x3D;self.loader, inventory&#x3D;self.inventory)</span><br><span class="line">        self.passwords &#x3D; dict(sshpass&#x3D;None, becomepass&#x3D;None)</span><br><span class="line">        self.callback &#x3D; None</span><br><span class="line">        self.sock &#x3D; sock</span><br><span class="line"></span><br><span class="line">    def run_module(self, host_list, module_name, module_args&#x3D;None, deploy&#x3D;False, send_msg&#x3D;True):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        run module from ansible ad-hoc.</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        self.callback &#x3D; CallbackModule()</span><br><span class="line"></span><br><span class="line">        if module_args:</span><br><span class="line">            play_source &#x3D; dict(</span><br><span class="line">                name&#x3D;&quot;Ansible play&quot;,</span><br><span class="line">                hosts&#x3D;host_list,</span><br><span class="line">                gather_facts&#x3D;&#39;no&#39;,</span><br><span class="line">                tasks&#x3D;[dict(action&#x3D;dict(module&#x3D;module_name, args&#x3D;module_args))]</span><br><span class="line">            )</span><br><span class="line">        else:</span><br><span class="line">            play_source &#x3D; dict(</span><br><span class="line">                name&#x3D;&quot;Ansible play&quot;,</span><br><span class="line">                hosts&#x3D;host_list,</span><br><span class="line">                gather_facts&#x3D;&#39;no&#39;,</span><br><span class="line">                tasks&#x3D;[dict(action&#x3D;dict(module&#x3D;module_name, ))]</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">        play &#x3D; Play().load(play_source, variable_manager&#x3D;self.variable_manager, loader&#x3D;self.loader)</span><br><span class="line"></span><br><span class="line">        # actually run it</span><br><span class="line">        tqm &#x3D; None</span><br><span class="line"></span><br><span class="line">        try:</span><br><span class="line">            tqm &#x3D; TaskQueueManager(</span><br><span class="line">                inventory&#x3D;self.inventory,</span><br><span class="line">                variable_manager&#x3D;self.variable_manager,</span><br><span class="line">                loader&#x3D;self.loader,</span><br><span class="line">                # options&#x3D;self.options,</span><br><span class="line">                passwords&#x3D;self.passwords,</span><br><span class="line">                stdout_callback&#x3D;self.callback,</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            C.HOST_KEY_CHECKING &#x3D; False  # 关闭第一次使用ansible连接客户端时输入命令</span><br><span class="line">            tqm.run(play)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            logger.error(&#39;执行 &#123;&#125; 失败，原因: &#123;&#125;&#39;.format(module_name, e))</span><br><span class="line">        finally:</span><br><span class="line">            if tqm is not None:</span><br><span class="line">                tqm.cleanup()</span><br><span class="line">            shutil.rmtree(C.DEFAULT_LOCAL_TMP, True)</span><br><span class="line"></span><br><span class="line">    def run_playbook(self, playbook_path, extra_vars&#x3D;None):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        run ansible playbook</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        try:</span><br><span class="line">            self.callback &#x3D; PlayBookResultsCollector(sock&#x3D;self.sock)</span><br><span class="line">            if extra_vars:</span><br><span class="line">                self.variable_manager.extra_vars &#x3D; extra_vars</span><br><span class="line">            executor &#x3D; PlaybookExecutor(</span><br><span class="line">                playbooks&#x3D;[playbook_path], inventory&#x3D;self.inventory, variable_manager&#x3D;self.variable_manager,</span><br><span class="line">                loader&#x3D;self.loader,</span><br><span class="line">                passwords&#x3D;self.passwords,</span><br><span class="line">            )</span><br><span class="line">            executor._tqm._stdout_callback &#x3D; self.callback</span><br><span class="line">            C.HOST_KEY_CHECKING &#x3D; False  # 关闭第一次使用ansible连接客户端时输入命令</span><br><span class="line">            executor.run()</span><br><span class="line">        except Exception as e:</span><br><span class="line">            logger.error(&#39;执行&#123;&#125;失败，原因: &#123;&#125;&#39;.format(playbook_path, e))</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def get_module_results(self):</span><br><span class="line">        return self.callback.results</span><br><span class="line"></span><br><span class="line">    @property</span><br><span class="line">    def get_playbook_results(self):</span><br><span class="line">        return self.callback.playbook_results</span><br><span class="line"></span><br><span class="line">    @staticmethod</span><br><span class="line">    def handle_setup_data(data):</span><br><span class="line">        &quot;&quot;&quot;处理setup模块数据，用于收集服务器信息功能&quot;&quot;&quot;</span><br><span class="line">        server_facts &#x3D; &#123;&#125;</span><br><span class="line">        result &#x3D; json.loads(data[data.index(&#39;&#123;&#39;): data.rindex(&#39;&#125;&#39;) + 1])</span><br><span class="line">        facts &#x3D; result[&#39;ansible_facts&#39;]</span><br><span class="line">        server_facts[&#39;hostname&#39;] &#x3D; facts[&#39;ansible_hostname&#39;]</span><br><span class="line">        server_facts[&#39;cpu_model&#39;] &#x3D; facts[&#39;ansible_processor&#39;][-1]</span><br><span class="line">        server_facts[&#39;cpu_number&#39;] &#x3D; int(facts[&#39;ansible_processor_count&#39;])</span><br><span class="line">        server_facts[&#39;vcpu_number&#39;] &#x3D; int(facts[&#39;ansible_processor_vcpus&#39;])</span><br><span class="line">        server_facts[&#39;disk_total&#39;], disk_size &#x3D; 0, 0</span><br><span class="line">        for k, v in facts[&#39;ansible_devices&#39;].items():</span><br><span class="line">            if k[0:2] in [&#39;sd&#39;, &#39;hd&#39;, &#39;ss&#39;, &#39;vd&#39;]:</span><br><span class="line">                if &#39;G&#39; in v[&#39;size&#39;]:</span><br><span class="line">                    disk_size &#x3D; float(v[&#39;size&#39;][0: v[&#39;size&#39;].rindex(&#39;G&#39;) - 1])</span><br><span class="line">                elif &#39;T&#39; in v[&#39;size&#39;]:</span><br><span class="line">                    disk_size &#x3D; float(v[&#39;size&#39;][0: v[&#39;size&#39;].rindex(&#39;T&#39;) - 1]) * 1024</span><br><span class="line">                server_facts[&#39;disk_total&#39;] +&#x3D; round(disk_size, 2)</span><br><span class="line">        server_facts[&#39;ram_total&#39;] &#x3D; round(int(facts[&#39;ansible_memtotal_mb&#39;]) &#x2F; 1024)</span><br><span class="line">        server_facts[&#39;kernel&#39;] &#x3D; facts[&#39;ansible_kernel&#39;]</span><br><span class="line">        server_facts[&#39;system&#39;] &#x3D; &#39;&#123;&#125; &#123;&#125; &#123;&#125;&#39;.format(facts[&#39;ansible_distribution&#39;],</span><br><span class="line">                                                   facts[&#39;ansible_distribution_version&#39;],</span><br><span class="line">                                                   facts[&#39;ansible_userspace_bits&#39;])</span><br><span class="line">        server_model &#x3D; facts[&#39;ansible_product_name&#39;]</span><br><span class="line"></span><br><span class="line">        # 获取网卡信息</span><br><span class="line">        nks &#x3D; []</span><br><span class="line">        for nk in facts.keys():</span><br><span class="line">            networkcard_facts &#x3D; &#123;&#125;</span><br><span class="line">            if re.match(r&quot;^ansible_(eth|bind|eno|ens|em)\d+?&quot;, nk):</span><br><span class="line">                networkcard_facts[&#39;network_card_name&#39;] &#x3D; facts.get(nk).get(&#39;device&#39;)</span><br><span class="line">                networkcard_facts[&#39;network_card_mac&#39;] &#x3D; facts.get(nk).get(&#39;macaddress&#39;)</span><br><span class="line">                networkcard_facts[&#39;network_card_ip&#39;] &#x3D; facts.get(nk).get(&#39;ipv4&#39;).get(&#39;address&#39;) if &#39;ipv4&#39; in facts.get(</span><br><span class="line">                    nk) else &#39;unknown&#39;</span><br><span class="line">                networkcard_facts[&#39;network_card_model&#39;] &#x3D; facts.get(nk).get(&#39;type&#39;)</span><br><span class="line">                networkcard_facts[&#39;network_card_mtu&#39;] &#x3D; facts.get(nk).get(&#39;mtu&#39;)</span><br><span class="line">                networkcard_facts[&#39;network_card_status&#39;] &#x3D; 1 if facts.get(nk).get(&#39;active&#39;) else 0</span><br><span class="line">                nks.append(networkcard_facts)</span><br><span class="line">        return server_facts, server_model, nks</span><br><span class="line"></span><br><span class="line">    @staticmethod</span><br><span class="line">    def handle_mem_data(data):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        处理获取的内存信息</span><br><span class="line">        :param data: 通过ansible获取的内存信息</span><br><span class="line">        :return:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        result &#x3D; json.loads(data[data.index(&#39;&#123;&#39;): data.rindex(&#39;&#125;&#39;) + 1])</span><br><span class="line">        facts &#x3D; result[&#39;ansible_facts&#39;]</span><br><span class="line">        return facts[&#39;mem_info&#39;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    inventory_path &#x3D; &#39;&#x2F;Users&#x2F;shuke&#x2F;Work&#x2F;SCM&#x2F;Door&#x2F;apps&#x2F;playbook&#x2F;inventory&#x2F;rcx&#x2F;hosts.ini&#39;</span><br><span class="line">    ANSRunner(sources&#x3D;inventory_path).run_playbook(playbook_path&#x3D;[&#39;&#x2F;Users&#x2F;shuke&#x2F;Work&#x2F;SCM&#x2F;Door&#x2F;apps&#x2F;playbook&#x2F;test.yml&#39;])</span><br></pre></td></tr></table></figure><h2 id="example3"><a href="#example3" class="headerlink" title="example3"></a>example3</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">@author: shuke</span><br><span class="line">@file: ansible_playbook_api.py </span><br><span class="line">@time: 2020&#x2F;03&#x2F;18 09:55</span><br><span class="line">@contact: shu_ke163@163.com</span><br><span class="line">@software:  Door</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import json</span><br><span class="line">import logging</span><br><span class="line">import datetime</span><br><span class="line">from collections import namedtuple</span><br><span class="line"></span><br><span class="line">from ansible import constants as C</span><br><span class="line">from ansible import constants</span><br><span class="line">from ansible.parsing.ajson import AnsibleJSONEncoder</span><br><span class="line">from ansible.plugins.callback.default import CallbackModule</span><br><span class="line">from ansible.parsing.dataloader import DataLoader</span><br><span class="line">from ansible.vars.manager import VariableManager</span><br><span class="line">from ansible.inventory.manager import InventoryManager</span><br><span class="line">from ansible.executor.playbook_executor import PlaybookExecutor</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    from __main__ import display</span><br><span class="line">except ImportError:</span><br><span class="line">    from ansible.utils.display import Display</span><br><span class="line"></span><br><span class="line">    display &#x3D; Display()</span><br><span class="line"></span><br><span class="line">logger &#x3D; logging.getLogger(&quot;door&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def current_time():</span><br><span class="line">    return &#39;%sZ&#39; % datetime.datetime.utcnow().isoformat()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class PlaybookCallback(CallbackModule):</span><br><span class="line">    &quot;&quot;&quot;重写console输出日志&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(CallbackModule, self).__init__(display)</span><br><span class="line">        self.results &#x3D; []</span><br><span class="line">        self.host_unreachable &#x3D; &#123;&#125;</span><br><span class="line">        self.host_failed &#x3D; &#123;&#125;</span><br><span class="line">        self.host_ok &#x3D; &#123;&#125;</span><br><span class="line"></span><br><span class="line">    def _new_play(self, play):</span><br><span class="line">        return &#123;</span><br><span class="line">            &#39;play&#39;: &#123;</span><br><span class="line">                &#39;name&#39;: play.get_name(),</span><br><span class="line">                &#39;id&#39;: str(play._uuid),</span><br><span class="line">                &#39;duration&#39;: &#123;</span><br><span class="line">                    &#39;start&#39;: current_time()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#39;tasks&#39;: []</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    def _new_task(self, task):</span><br><span class="line">        return &#123;</span><br><span class="line">            &#39;task&#39;: &#123;</span><br><span class="line">                &#39;name&#39;: task.get_name(),</span><br><span class="line">                &#39;id&#39;: str(task._uuid),</span><br><span class="line">                &#39;duration&#39;: &#123;</span><br><span class="line">                    &#39;start&#39;: current_time()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#39;hosts&#39;: &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    # 重写2.0版本正确stdout</span><br><span class="line">    def v2_runner_on_ok(self, result):</span><br><span class="line"></span><br><span class="line">        print(result._result)</span><br><span class="line"></span><br><span class="line">        # if self._play.strategy &#x3D;&#x3D; &#39;free&#39; and self._last_task_banner !&#x3D; result._task._uuid:</span><br><span class="line">        #     self._print_task_banner(result._task)</span><br><span class="line">        #</span><br><span class="line">        # self._clean_results(result._result, result._task.action)</span><br><span class="line">        # # delegated_vars &#x3D; result._result.get(&#39;_ansible_delegated_vars&#39;, None)</span><br><span class="line">        # delegated_vars &#x3D; self._dump_results(result._result)</span><br><span class="line">        # # delegated_vars &#x3D; result._result</span><br><span class="line">        # # n_delegated_vars &#x3D; self._dump_results(result)</span><br><span class="line">        # # print n_delegated_vars</span><br><span class="line">        # self._clean_results(result._result, result._task.action)</span><br><span class="line">        #</span><br><span class="line">        # if result._task.action in (&#39;include&#39;, &#39;include_role&#39;):</span><br><span class="line">        #     return</span><br><span class="line">        # elif result._result.get(&#39;changed&#39;, False):</span><br><span class="line">        #     if delegated_vars:</span><br><span class="line">        #         # 自定义输出</span><br><span class="line">        #         zdy_msg &#x3D; self.zdy_stdout(json.loads(delegated_vars))</span><br><span class="line">        #         if zdy_msg:</span><br><span class="line">        #             msg &#x3D; &quot;changed: [%s]%s&quot; % (result._host.get_name(), zdy_msg)</span><br><span class="line">        #         else:</span><br><span class="line">        #             msg &#x3D; &quot;changed: [%s -&gt; %s]&quot; % (result._host.get_name(), delegated_vars)</span><br><span class="line">        #     else:</span><br><span class="line">        #         msg &#x3D; &quot;changed: [%s]&quot; % result._host.get_name()</span><br><span class="line">        #     color &#x3D; C.COLOR_CHANGED</span><br><span class="line">        # # 判断是否是第一步 setup</span><br><span class="line">        #</span><br><span class="line">        # elif result._result.get(&#39;ansible_facts&#39;, False):</span><br><span class="line">        #     msg &#x3D; &quot;ok: [ %s | %s ]&quot; % (str(result._host), str(result._host.get_groups()))</span><br><span class="line">        #     color &#x3D; C.COLOR_OK</span><br><span class="line">        # else:</span><br><span class="line">        #     if delegated_vars:</span><br><span class="line">        #         # 自定义输出</span><br><span class="line">        #         zdy_msg &#x3D; self.zdy_stdout(json.loads(delegated_vars))</span><br><span class="line">        #         if zdy_msg:</span><br><span class="line">        #             msg &#x3D; &quot;ok: [%s]%s&quot; % (result._host.get_name(), zdy_msg)</span><br><span class="line">        #         else:</span><br><span class="line">        #             msg &#x3D; &quot;ok: [%s -&gt; %s]&quot; % (result._host.get_name(), delegated_vars)</span><br><span class="line">        #     else:</span><br><span class="line">        #         msg &#x3D; &quot;ok: [%s]&quot; % result._host.get_name()</span><br><span class="line">        #     color &#x3D; C.COLOR_OK</span><br><span class="line">        #</span><br><span class="line">        # if result._task.loop and &#39;results&#39; in result._result:</span><br><span class="line">        #     self._process_items(result)</span><br><span class="line">        # else:</span><br><span class="line">        #     self._display.display(msg, color&#x3D;color)</span><br><span class="line">        #</span><br><span class="line">        # self._handle_warnings(result._result)</span><br><span class="line"></span><br><span class="line">    # 自定义输出,格式清晰一些</span><br><span class="line">    def zdy_stdout(self, result):</span><br><span class="line">        msg &#x3D; &#39;&#39;</span><br><span class="line">        if result.get(&#39;delta&#39;, False):</span><br><span class="line">            msg +&#x3D; u&#39;\t执行时间:%s&#39; % result[&#39;delta&#39;]</span><br><span class="line">        if result.get(&#39;cmd&#39;, False):</span><br><span class="line">            msg +&#x3D; u&#39;\n执行命令:%s&#39; % result[&#39;cmd&#39;]</span><br><span class="line">        if result.get(&#39;stderr&#39;, False):</span><br><span class="line">            msg +&#x3D; u&#39;\n错误输出:\n%s&#39; % result[&#39;stderr&#39;]</span><br><span class="line">        if result.get(&#39;stdout&#39;, False):</span><br><span class="line">            msg +&#x3D; u&#39;\n正确输出:\n%s&#39; % result[&#39;stdout&#39;]</span><br><span class="line">        if result.get(&#39;warnings&#39;, False):</span><br><span class="line">            msg +&#x3D; u&#39;\n警告:%s&#39; % result[&#39;warnings&#39;]</span><br><span class="line">        return msg</span><br><span class="line"></span><br><span class="line">    def display_skipped_hosts(self, result):</span><br><span class="line">        print(result._result)</span><br><span class="line"></span><br><span class="line">    # def v2_runner_on_ok(self, result, **kwargs):</span><br><span class="line">    #</span><br><span class="line">    #     hostname &#x3D; result._host.get_name()</span><br><span class="line">    #     logger.info(f&quot;ansible v2_runner_on_ok hostname: &#123;hostname&#125;&quot;)</span><br><span class="line">    #     try:</span><br><span class="line">    #</span><br><span class="line">    #         self.host_ok[result._host.get_name()] &#x3D; result</span><br><span class="line">    #</span><br><span class="line">    #     except Exception as e:</span><br><span class="line">    #         logger.error(f&quot;get ansible facts result faild: &#123;e.__class__.__name__&#125;: &#123;e&#125;&quot;)</span><br><span class="line">    #         raise Exception(&quot;&#123;hostname&#125; already exist&quot;.format(hostname&#x3D;hostname))</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_unreachable(self, result):</span><br><span class="line">        logger.info(&quot;unreachable host: &#123;&#125;&quot;.format(result._host.get_name()))</span><br><span class="line">        self.results.append(&#123;result._host.get_name(): result._result&#125;)</span><br><span class="line">        self.host_unreachable[result._host.get_name()] &#x3D; result</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_failed(self, result, *args, **kwargs):</span><br><span class="line">        print(result.__dict__)</span><br><span class="line">        logger.info(&quot;host failed: &#123;&#125;&quot;.format(result._host.get_name()))</span><br><span class="line">        self.results.append(&#123;result._host.get_name(): result._result&#125;)</span><br><span class="line">        self.host_failed[result._host.get_name()] &#x3D; result</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_play_start(self, play):</span><br><span class="line">        self.results.append(self._new_play(play))</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_task_start(self, task, is_conditional):</span><br><span class="line">        self.results[-1][&#39;tasks&#39;].append(self._new_task(task))</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_handler_task_start(self, task):</span><br><span class="line">        self.results[-1][&#39;tasks&#39;].append(self._new_task(task))</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_stats(self, stats):</span><br><span class="line">        &quot;&quot;&quot;Display info about playbook statistics&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">        hosts &#x3D; sorted(stats.processed.keys())</span><br><span class="line"></span><br><span class="line">        summary &#x3D; &#123;&#125;</span><br><span class="line">        for h in hosts:</span><br><span class="line">            s &#x3D; stats.summarize(h)</span><br><span class="line">            summary[h] &#x3D; s</span><br><span class="line"></span><br><span class="line">        custom_stats &#x3D; &#123;&#125;</span><br><span class="line">        global_custom_stats &#x3D; &#123;&#125;</span><br><span class="line"></span><br><span class="line">        if self.get_option(&#39;show_custom_stats&#39;) and stats.custom:</span><br><span class="line">            custom_stats.update(dict((self._convert_host_to_name(k), v) for k, v in stats.custom.items()))</span><br><span class="line">            global_custom_stats.update(custom_stats.pop(&#39;_run&#39;, &#123;&#125;))</span><br><span class="line"></span><br><span class="line">        output &#x3D; &#123;</span><br><span class="line">            &#39;plays&#39;: self.results,</span><br><span class="line">            &#39;stats&#39;: summary,</span><br><span class="line">            &#39;custom_stats&#39;: custom_stats,</span><br><span class="line">            &#39;global_custom_stats&#39;: global_custom_stats,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        self._display.display(json.dumps(output, cls&#x3D;AnsibleJSONEncoder, indent&#x3D;4, sort_keys&#x3D;True))</span><br><span class="line"></span><br><span class="line">    def _record_task_result(self, on_info, result, **kwargs):</span><br><span class="line">        &quot;&quot;&quot;This function is used as a partial to add failed&#x2F;skipped info in a single method&quot;&quot;&quot;</span><br><span class="line">        host &#x3D; result._host</span><br><span class="line">        task &#x3D; result._task</span><br><span class="line">        task_result &#x3D; result._result.copy()</span><br><span class="line">        task_result.update(on_info)</span><br><span class="line">        task_result[&#39;action&#39;] &#x3D; task.action</span><br><span class="line">        self.results[-1][&#39;tasks&#39;][-1][&#39;hosts&#39;][host.name] &#x3D; task_result</span><br><span class="line">        end_time &#x3D; current_time()</span><br><span class="line">        self.results[-1][&#39;tasks&#39;][-1][&#39;task&#39;][&#39;duration&#39;][&#39;end&#39;] &#x3D; end_time</span><br><span class="line">        self.results[-1][&#39;play&#39;][&#39;duration&#39;][&#39;end&#39;] &#x3D; end_time</span><br><span class="line"></span><br><span class="line">        return self.results</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class PlayBookJob:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    封装一个playbook接口,提供给外部使用</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    def __init__(self, playbooks, host_list, ssh_user&#x3D;&#39;bbs&#39;, passwords&#x3D;&#39;null&#39;, project_name&#x3D;&#39;all&#39;, ack_pass&#x3D;False,</span><br><span class="line">                 forks&#x3D;5, ext_vars&#x3D;None):</span><br><span class="line">        self.playbooks &#x3D; playbooks</span><br><span class="line">        self.host_list &#x3D; host_list</span><br><span class="line">        self.ssh_user &#x3D; ssh_user</span><br><span class="line">        self.passwords &#x3D; dict(vault_pass&#x3D;passwords)</span><br><span class="line">        self.project_name &#x3D; project_name</span><br><span class="line">        self.ack_pass &#x3D; ack_pass</span><br><span class="line">        self.forks &#x3D; forks</span><br><span class="line">        self.connection &#x3D; &#39;smart&#39;</span><br><span class="line">        self.ext_vars &#x3D; ext_vars</span><br><span class="line"></span><br><span class="line">        ## 用来加载解析yaml文件或JSON内容,并且支持vault的解密</span><br><span class="line">        self.loader &#x3D; DataLoader()</span><br><span class="line"></span><br><span class="line">        # 根据inventory加载对应变量</span><br><span class="line">        self.inventory &#x3D; InventoryManager(loader&#x3D;self.loader,</span><br><span class="line">                                          sources&#x3D;&#39;&#x2F;Users&#x2F;shuke&#x2F;Work&#x2F;SCM&#x2F;Door&#x2F;apps&#x2F;playbook&#x2F;inventory&#x2F;rcx&#x2F;hosts.ini&#39;)</span><br><span class="line"></span><br><span class="line">        # 管理变量的类，包括主机，组，扩展等变量，之前版本是在 inventory中的</span><br><span class="line">        self.variable_manager &#x3D; VariableManager(loader&#x3D;self.loader, inventory&#x3D;self.inventory)</span><br><span class="line"></span><br><span class="line">        self.variable_manager.set_inventory(self.inventory)</span><br><span class="line"></span><br><span class="line">        # 初始化需要的对象1</span><br><span class="line">        self.Options &#x3D; namedtuple(&#39;Options&#39;,</span><br><span class="line">                                  [&#39;connection&#39;,</span><br><span class="line">                                   &#39;remote_user&#39;,</span><br><span class="line">                                   &#39;ask_sudo_pass&#39;,</span><br><span class="line">                                   &#39;verbosity&#39;,</span><br><span class="line">                                   &#39;ack_pass&#39;,</span><br><span class="line">                                   &#39;module_path&#39;,</span><br><span class="line">                                   &#39;forks&#39;,</span><br><span class="line">                                   &#39;become&#39;,</span><br><span class="line">                                   &#39;become_method&#39;,</span><br><span class="line">                                   &#39;become_user&#39;,</span><br><span class="line">                                   &#39;check&#39;,</span><br><span class="line">                                   &#39;listhosts&#39;,</span><br><span class="line">                                   &#39;listtasks&#39;,</span><br><span class="line">                                   &#39;listtags&#39;,</span><br><span class="line">                                   &#39;syntax&#39;,</span><br><span class="line">                                   &#39;sudo_user&#39;,</span><br><span class="line">                                   &#39;sudo&#39;</span><br><span class="line">                                   ])</span><br><span class="line"></span><br><span class="line">        # 初始化需要的对象2</span><br><span class="line">        self.options &#x3D; self.Options(connection&#x3D;self.connection,</span><br><span class="line">                                    remote_user&#x3D;self.ssh_user,</span><br><span class="line">                                    ack_pass&#x3D;self.ack_pass,</span><br><span class="line">                                    sudo_user&#x3D;self.ssh_user,</span><br><span class="line">                                    forks&#x3D;self.forks,</span><br><span class="line">                                    sudo&#x3D;&#39;yes&#39;,</span><br><span class="line">                                    ask_sudo_pass&#x3D;False,</span><br><span class="line">                                    verbosity&#x3D;5,</span><br><span class="line">                                    module_path&#x3D;None,</span><br><span class="line">                                    become&#x3D;True,</span><br><span class="line">                                    become_method&#x3D;&#39;sudo&#39;,</span><br><span class="line">                                    become_user&#x3D;&#39;root&#39;,</span><br><span class="line">                                    check&#x3D;None,</span><br><span class="line">                                    listhosts&#x3D;None,</span><br><span class="line">                                    listtasks&#x3D;None,</span><br><span class="line">                                    listtags&#x3D;None,</span><br><span class="line">                                    syntax&#x3D;None</span><br><span class="line">                                    )</span><br><span class="line"></span><br><span class="line">        # 初始化console输出</span><br><span class="line">        self.callback &#x3D; PlaybookCallback()</span><br><span class="line"></span><br><span class="line">        # 直接开始</span><br><span class="line">        self.run_playbook()</span><br><span class="line"></span><br><span class="line">    def run_playbook(self, extra_vars&#x3D;dict()):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        run ansible palybook</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">        self.callback &#x3D; PlaybookCallback()</span><br><span class="line">        extra_vars[&#39;host&#39;] &#x3D; &#39;,&#39;.join(self.host_list)</span><br><span class="line"></span><br><span class="line">        executor &#x3D; PlaybookExecutor(</span><br><span class="line">            playbooks&#x3D;self.playbooks, inventory&#x3D;self.inventory,</span><br><span class="line">            variable_manager&#x3D;self.variable_manager,</span><br><span class="line">            loader&#x3D;self.loader,</span><br><span class="line">            passwords&#x3D;self.passwords,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        print(executor)</span><br><span class="line"></span><br><span class="line">        executor._tqm._stdout_callback &#x3D; self.callback</span><br><span class="line">        constants.HOST_KEY_CHECKING &#x3D; False</span><br><span class="line">        constants.DEPRECATION_WARNINGS &#x3D; False</span><br><span class="line">        constants.RETRY_FILES_ENABLED &#x3D; False</span><br><span class="line">        executor.run()</span><br><span class="line"></span><br><span class="line">        # try:</span><br><span class="line">        #</span><br><span class="line">        # except Exception as err:</span><br><span class="line">        #     logger.error(msg&#x3D;&quot;run playbook failed: &#123;err&#125;&quot;.format(err&#x3D;str(err)))</span><br><span class="line">        #     return False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    PlayBookJob(playbooks&#x3D;[&#39;&#x2F;Users&#x2F;shuke&#x2F;Work&#x2F;SCM&#x2F;Door&#x2F;apps&#x2F;playbook&#x2F;test.yml&#39;],</span><br><span class="line">                host_list&#x3D;[&#39;10.45.176.2&#39;],</span><br><span class="line">                ssh_user&#x3D;&#39;root&#39;,</span><br><span class="line">                project_name&#x3D;&quot;test&quot;,</span><br><span class="line">                forks&#x3D;20,</span><br><span class="line">                ext_vars&#x3D;None</span><br><span class="line">                )</span><br></pre></td></tr></table></figure><h3 id="example4"><a href="#example4" class="headerlink" title="example4"></a>example4</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">@aythor: shuke</span><br><span class="line">@file: ansible_api.py </span><br><span class="line">@content: zhaofengfeng@rongcloud.cn</span><br><span class="line">@time: 2020&#x2F;03&#x2F;07 14:48</span><br><span class="line">@software:  Door</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import datetime</span><br><span class="line">import json</span><br><span class="line">import shutil</span><br><span class="line">import logging</span><br><span class="line">from ansible.module_utils.common.collections import ImmutableDict</span><br><span class="line">from ansible.parsing.dataloader import DataLoader</span><br><span class="line">from ansible.vars.manager import VariableManager</span><br><span class="line">from ansible.inventory.manager import InventoryManager</span><br><span class="line">from ansible.playbook.play import Play</span><br><span class="line">from ansible.executor.task_queue_manager import TaskQueueManager</span><br><span class="line">from ansible import context</span><br><span class="line">import ansible.constants as C</span><br><span class="line">from ansible.inventory.host import Host</span><br><span class="line">from ansible.parsing.ajson import AnsibleJSONEncoder</span><br><span class="line">from ansible.plugins.callback import CallbackBase</span><br><span class="line">from distutils.sysconfig import get_python_lib</span><br><span class="line">from functools import partial</span><br><span class="line"></span><br><span class="line">PATH &#x3D; os.path.dirname(os.path.dirname(os.path.realpath(__file__)))</span><br><span class="line">sys.path.insert(0, PATH)</span><br><span class="line"></span><br><span class="line">os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;Door.settings&quot;)</span><br><span class="line"></span><br><span class="line">import django</span><br><span class="line"></span><br><span class="line">django.setup()</span><br><span class="line"></span><br><span class="line">from apps.host import models</span><br><span class="line"></span><br><span class="line">logger &#x3D; logging.getLogger(&quot;door&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def current_time():</span><br><span class="line">    return &#39;%sZ&#39; % datetime.datetime.utcnow().isoformat()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class CallbackModule(CallbackBase):</span><br><span class="line">    CALLBACK_VERSION &#x3D; 2.0</span><br><span class="line">    CALLBACK_TYPE &#x3D; &#39;stdout&#39;</span><br><span class="line">    CALLBACK_NAME &#x3D; &#39;tomysql&#39;</span><br><span class="line"></span><br><span class="line">    def __init__(self, display&#x3D;None):</span><br><span class="line">        super(CallbackModule, self).__init__(display)</span><br><span class="line">        self.results &#x3D; []</span><br><span class="line">        self.host_unreachable &#x3D; &#123;&#125;</span><br><span class="line">        self.host_failed &#x3D; &#123;&#125;</span><br><span class="line">        self.host_ok &#x3D; &#123;&#125;</span><br><span class="line"></span><br><span class="line">    def _new_play(self, play):</span><br><span class="line">        return &#123;</span><br><span class="line">            &#39;play&#39;: &#123;</span><br><span class="line">                &#39;name&#39;: play.get_name(),</span><br><span class="line">                &#39;id&#39;: str(play._uuid),</span><br><span class="line">                &#39;duration&#39;: &#123;</span><br><span class="line">                    &#39;start&#39;: current_time()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#39;tasks&#39;: []</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    def _new_task(self, task):</span><br><span class="line">        return &#123;</span><br><span class="line">            &#39;task&#39;: &#123;</span><br><span class="line">                &#39;name&#39;: task.get_name(),</span><br><span class="line">                &#39;id&#39;: str(task._uuid),</span><br><span class="line">                &#39;duration&#39;: &#123;</span><br><span class="line">                    &#39;start&#39;: current_time()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#39;hosts&#39;: &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_ok(self, result, **kwargs):</span><br><span class="line"></span><br><span class="line">        hostname &#x3D; result._host.get_name()</span><br><span class="line">        logger.info(f&quot;ansible v2_runner_on_ok hostname: &#123;hostname&#125;&quot;)</span><br><span class="line">        try:</span><br><span class="line">            host &#x3D; result._result[&quot;ansible_facts&quot;]</span><br><span class="line">            host_info &#x3D; &#123;&#125;</span><br><span class="line">            host_info[&quot;hostname&quot;] &#x3D; hostname</span><br><span class="line">            host_info[&quot;fqdn&quot;] &#x3D; host.get(&quot;ansible_fqdn&quot;, None)</span><br><span class="line">            host_info[&quot;cpu&quot;] &#x3D; str(host.get(&quot;ansible_processor_vcpus&quot;, None)) + &quot;c&quot;</span><br><span class="line">            host_info[&quot;memory&quot;] &#x3D; str(round(host.get(&quot;ansible_memtotal_mb&quot;) &#x2F; 1024) + 1) + &quot; GB&quot;</span><br><span class="line">            host_info[&quot;disk&quot;] &#x3D; host.get(&quot;ansible_devices&quot;)[&quot;vda&quot;][&quot;size&quot;]</span><br><span class="line">            host_info[&quot;disk_format&quot;] &#x3D; host.get(&quot;ansible_mounts&quot;)[0][&quot;fstype&quot;]</span><br><span class="line">            host_info[&quot;mount_point&quot;] &#x3D; host.get(&quot;ansible_mounts&quot;)[0][&quot;mount&quot;]</span><br><span class="line">            host_info[&quot;ipv4&quot;] &#x3D; host.get(&quot;ansible_default_ipv4&quot;)[&quot;address&quot;]</span><br><span class="line">            host_info[&quot;arch&quot;] &#x3D; host.get(&quot;ansible_architecture&quot;, None)</span><br><span class="line">            host_info[&quot;os_type&quot;] &#x3D; host.get(&quot;ansible_distribution&quot;, None)</span><br><span class="line">            host_info[&quot;os_version&quot;] &#x3D; host.get(&quot;ansible_distribution_version&quot;, None)</span><br><span class="line">            host_info[&quot;machine_id&quot;] &#x3D; host.get(&quot;ansible_machine_id&quot;, None)</span><br><span class="line">            host_info[&quot;macaddress&quot;] &#x3D; host.get(&quot;ansible_default_ipv4&quot;)[&quot;macaddress&quot;]</span><br><span class="line">            host_info[&quot;kernel_info&quot;] &#x3D; host.get(&quot;ansible_kernel&quot;, None)</span><br><span class="line">            host_info[&quot;virtualization_type&quot;] &#x3D; host.get(&quot;ansible_virtualization_type&quot;, None)</span><br><span class="line"></span><br><span class="line">            import json</span><br><span class="line">            print(json.dumps(host_info, indent&#x3D;4, ensure_ascii&#x3D;False))</span><br><span class="line"></span><br><span class="line">            self.results.append(host_info)</span><br><span class="line">            self.host_ok[result._host.get_name()] &#x3D; result</span><br><span class="line"></span><br><span class="line">            models.Cmdb.objects.update_or_create(hostname&#x3D;host_info[&quot;hostname&quot;], defaults&#x3D;host_info)</span><br><span class="line"></span><br><span class="line">        except Exception as e:</span><br><span class="line">            logger.error(f&quot;get ansible facts result faild: &#123;e.__class__.__name__&#125;: &#123;e&#125;&quot;)</span><br><span class="line">            raise Exception(&quot;&#123;hostname&#125; already exist&quot;.format(hostname&#x3D;hostname))</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_unreachable(self, result):</span><br><span class="line">        logger.info(&quot;unreachable host: &#123;&#125;&quot;.format(result._host.get_name()))</span><br><span class="line">        self.results.append(&#123;result._host.get_name(): result._result&#125;)</span><br><span class="line">        self.host_unreachable[result._host.get_name()] &#x3D; result</span><br><span class="line"></span><br><span class="line">    def v2_runner_on_failed(self, result, *args, **kwargs):</span><br><span class="line">        # print(result.__dict__)</span><br><span class="line">        logger.info(&quot;host failed: &#123;&#125;&quot;.format(result._host.get_name()))</span><br><span class="line">        self.results.append(&#123;result._host.get_name(): result._result&#125;)</span><br><span class="line">        self.host_failed[result._host.get_name()] &#x3D; result</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_play_start(self, play):</span><br><span class="line">        self.results.append(self._new_play(play))</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_task_start(self, task, is_conditional):</span><br><span class="line">        self.results[-1][&#39;tasks&#39;].append(self._new_task(task))</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_handler_task_start(self, task):</span><br><span class="line">        self.results[-1][&#39;tasks&#39;].append(self._new_task(task))</span><br><span class="line"></span><br><span class="line">    def _convert_host_to_name(self, key):</span><br><span class="line">        if isinstance(key, (Host,)):</span><br><span class="line">            return key.get_name()</span><br><span class="line">        return key</span><br><span class="line"></span><br><span class="line">    def v2_playbook_on_stats(self, stats):</span><br><span class="line">        &quot;&quot;&quot;Display info about playbook statistics&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">        hosts &#x3D; sorted(stats.processed.keys())</span><br><span class="line"></span><br><span class="line">        summary &#x3D; &#123;&#125;</span><br><span class="line">        for h in hosts:</span><br><span class="line">            s &#x3D; stats.summarize(h)</span><br><span class="line">            summary[h] &#x3D; s</span><br><span class="line"></span><br><span class="line">        custom_stats &#x3D; &#123;&#125;</span><br><span class="line">        global_custom_stats &#x3D; &#123;&#125;</span><br><span class="line"></span><br><span class="line">        if self.get_option(&#39;show_custom_stats&#39;) and stats.custom:</span><br><span class="line">            custom_stats.update(dict((self._convert_host_to_name(k), v) for k, v in stats.custom.items()))</span><br><span class="line">            global_custom_stats.update(custom_stats.pop(&#39;_run&#39;, &#123;&#125;))</span><br><span class="line"></span><br><span class="line">        output &#x3D; &#123;</span><br><span class="line">            &#39;plays&#39;: self.results,</span><br><span class="line">            &#39;stats&#39;: summary,</span><br><span class="line">            &#39;custom_stats&#39;: custom_stats,</span><br><span class="line">            &#39;global_custom_stats&#39;: global_custom_stats,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        self._display.display(json.dumps(output, cls&#x3D;AnsibleJSONEncoder, indent&#x3D;4, sort_keys&#x3D;True))</span><br><span class="line"></span><br><span class="line">    def _record_task_result(self, on_info, result, **kwargs):</span><br><span class="line">        &quot;&quot;&quot;This function is used as a partial to add failed&#x2F;skipped info in a single method&quot;&quot;&quot;</span><br><span class="line">        host &#x3D; result._host</span><br><span class="line">        task &#x3D; result._task</span><br><span class="line">        task_result &#x3D; result._result.copy()</span><br><span class="line">        task_result.update(on_info)</span><br><span class="line">        task_result[&#39;action&#39;] &#x3D; task.action</span><br><span class="line">        self.results[-1][&#39;tasks&#39;][-1][&#39;hosts&#39;][host.name] &#x3D; task_result</span><br><span class="line">        end_time &#x3D; current_time()</span><br><span class="line">        self.results[-1][&#39;tasks&#39;][-1][&#39;task&#39;][&#39;duration&#39;][&#39;end&#39;] &#x3D; end_time</span><br><span class="line">        self.results[-1][&#39;play&#39;][&#39;duration&#39;][&#39;end&#39;] &#x3D; end_time</span><br><span class="line"></span><br><span class="line">        return self.results</span><br><span class="line"></span><br><span class="line">    # def __getattribute__(self, name):</span><br><span class="line">    #     &quot;&quot;&quot;Return &#96;&#96;_record_task_result&#96;&#96; partial with a dict containing skipped&#x2F;failed if necessary&quot;&quot;&quot;</span><br><span class="line">    #     if name not in (&#39;v2_runner_on_ok&#39;, &#39;v2_runner_on_failed&#39;, &#39;v2_runner_on_unreachable&#39;, &#39;v2_runner_on_skipped&#39;):</span><br><span class="line">    #         return object.__getattribute__(self, name)</span><br><span class="line">    #</span><br><span class="line">    #     on &#x3D; name.rsplit(&#39;_&#39;, 1)[1]</span><br><span class="line">    #</span><br><span class="line">    #     on_info &#x3D; &#123;&#125;</span><br><span class="line">    #     if on in (&#39;failed&#39;, &#39;skipped&#39;):</span><br><span class="line">    #         on_info[on] &#x3D; True</span><br><span class="line">    #</span><br><span class="line">    #     # logger.info(&quot;Event: &#123;name&#125;, Task status: &#123;status&#125;&quot;.format(name&#x3D;name, status&#x3D;on))</span><br><span class="line">    #     return partial(self._record_task_result, on_info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class AnsibleAPI(object):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    执行ansible模块或者playbook的类</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    def __init__(self, inventory_path):</span><br><span class="line">        self.inventory_path &#x3D; inventory_path</span><br><span class="line">        self.loader &#x3D; DataLoader()</span><br><span class="line">        self.callback &#x3D; None</span><br><span class="line"></span><br><span class="line">    def cmdb(self):</span><br><span class="line">        module_path &#x3D; os.path.join(get_python_lib(), &quot;ansible&quot;)</span><br><span class="line">        context.CLIARGS &#x3D; ImmutableDict(connection&#x3D;&#39;smart&#39;,</span><br><span class="line">                                        module_path&#x3D;[module_path, ],</span><br><span class="line">                                        forks&#x3D;50, become&#x3D;None,</span><br><span class="line">                                        become_method&#x3D;None, become_user&#x3D;None, check&#x3D;False, diff&#x3D;False)</span><br><span class="line"></span><br><span class="line">        passwords &#x3D; dict(vault_pass&#x3D;&#39;secret&#39;)</span><br><span class="line"></span><br><span class="line">        self.callback &#x3D; CallbackModule()</span><br><span class="line"></span><br><span class="line">        inventory &#x3D; InventoryManager(loader&#x3D;self.loader, sources&#x3D;self.inventory_path)</span><br><span class="line"></span><br><span class="line">        print(inventory.list_groups(), inventory.get_groups_dict(), inventory.add_group(&quot;cmdb&quot;))</span><br><span class="line">        # print(inventory.list_groups(), inventory.list_hosts())</span><br><span class="line"></span><br><span class="line">        variable_manager &#x3D; VariableManager(loader&#x3D;self.loader, inventory&#x3D;inventory)</span><br><span class="line"></span><br><span class="line">        play_source &#x3D; dict(</span><br><span class="line">            name&#x3D;&quot;Ansible CMDB&quot;,</span><br><span class="line">            hosts&#x3D;str(inventory.groups[&quot;all&quot;]),</span><br><span class="line">            gather_facts&#x3D;&#39;no&#39;,</span><br><span class="line">            tasks&#x3D;[</span><br><span class="line">                # dict(action&#x3D;dict(module&#x3D;&#39;shell&#39;, args&#x3D;&#39;ls&#39;), register&#x3D;&#39;shell_out&#39;),</span><br><span class="line">                # dict(action&#x3D;dict(module&#x3D;&#39;debug&#39;, args&#x3D;dict(msg&#x3D;&#39;&#123;&#123;shell_out.stdout&#125;&#125;&#39;)))</span><br><span class="line">                # dict(action&#x3D;dict(module&#x3D;&#39;shell&#39;, args&#x3D;&#39;whoami&#39;)),</span><br><span class="line">                dict(action&#x3D;dict(module&#x3D;&#39;setup&#39;, )),</span><br><span class="line">            ]</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        # Create play object, playbook objects use .load instead of init or new methods,</span><br><span class="line">        play &#x3D; Play().load(play_source, variable_manager&#x3D;variable_manager, loader&#x3D;self.loader)</span><br><span class="line"></span><br><span class="line">        tqm &#x3D; None</span><br><span class="line">        try:</span><br><span class="line">            tqm &#x3D; TaskQueueManager(</span><br><span class="line">                inventory&#x3D;inventory,</span><br><span class="line">                variable_manager&#x3D;variable_manager,</span><br><span class="line">                loader&#x3D;self.loader,</span><br><span class="line">                passwords&#x3D;passwords,</span><br><span class="line">                stdout_callback&#x3D;self.callback,</span><br><span class="line">                # Use our custom callback instead of the &#96;&#96;default&#96;&#96; callback plugin, which prints to stdout</span><br><span class="line">            )</span><br><span class="line">            tqm._stdout_callback &#x3D; self.callback</span><br><span class="line">            tqm.run(play)  # most interesting data for a play is actually sent to the callback&#39;s methods</span><br><span class="line"></span><br><span class="line">            result_raw &#x3D; &#123;&#39;success&#39;: &#123;&#125;, &#39;failed&#39;: &#123;&#125;, &#39;unreachable&#39;: &#123;&#125;&#125;</span><br><span class="line">            for host, result in self.callback.host_ok.items():</span><br><span class="line">                result_raw[&#39;success&#39;][host] &#x3D; result._result[&quot;ansible_facts&quot;]</span><br><span class="line">            for host, result in self.callback.host_failed.items():</span><br><span class="line">                result_raw[&#39;failed&#39;][host] &#x3D; result._result</span><br><span class="line">            for host, result in self.callback.host_unreachable.items():</span><br><span class="line">                result_raw[&#39;failed&#39;][host] &#x3D; result._result</span><br><span class="line"></span><br><span class="line">            print(json.dumps(result_raw, indent&#x3D;4))</span><br><span class="line"></span><br><span class="line">            return result_raw</span><br><span class="line"></span><br><span class="line">        finally:</span><br><span class="line">            if tqm is not None:</span><br><span class="line">                tqm.cleanup()</span><br><span class="line"></span><br><span class="line">            shutil.rmtree(C.DEFAULT_LOCAL_TMP, True)</span><br><span class="line"></span><br><span class="line">    def runplaybook(self):</span><br><span class="line">        module_path &#x3D; os.path.join(get_python_lib(), &quot;ansible&quot;)</span><br><span class="line">        context.CLIARGS &#x3D; ImmutableDict(connection&#x3D;&#39;smart&#39;,</span><br><span class="line">                                        module_path&#x3D;[module_path, ],</span><br><span class="line">                                        forks&#x3D;50, become&#x3D;None,</span><br><span class="line">                                        become_method&#x3D;None, become_user&#x3D;None, check&#x3D;False, diff&#x3D;False)</span><br><span class="line"></span><br><span class="line">        passwords &#x3D; dict(vault_pass&#x3D;&#39;secret&#39;)</span><br><span class="line"></span><br><span class="line">        self.callback &#x3D; CallbackModule()</span><br><span class="line"></span><br><span class="line">        inventory &#x3D; InventoryManager(loader&#x3D;self.loader, sources&#x3D;self.inventory_path)</span><br><span class="line"></span><br><span class="line">        print(inventory.list_groups(), inventory.get_groups_dict(), inventory.add_group(&quot;cmdb&quot;))</span><br><span class="line">        # print(inventory.list_groups(), inventory.list_hosts())</span><br><span class="line"></span><br><span class="line">        variable_manager &#x3D; VariableManager(loader&#x3D;self.loader, inventory&#x3D;inventory)</span><br><span class="line"></span><br><span class="line">        play_source &#x3D; dict(</span><br><span class="line">            name&#x3D;&quot;Ansible CMDB&quot;,</span><br><span class="line">            hosts&#x3D;str(inventory.groups[&quot;all&quot;]),</span><br><span class="line">            gather_facts&#x3D;&#39;no&#39;,</span><br><span class="line">            tasks&#x3D;[</span><br><span class="line">                # dict(action&#x3D;dict(module&#x3D;&#39;shell&#39;, args&#x3D;&#39;ls&#39;), register&#x3D;&#39;shell_out&#39;),</span><br><span class="line">                # dict(action&#x3D;dict(module&#x3D;&#39;debug&#39;, args&#x3D;dict(msg&#x3D;&#39;&#123;&#123;shell_out.stdout&#125;&#125;&#39;)))</span><br><span class="line">                # dict(action&#x3D;dict(module&#x3D;&#39;shell&#39;, args&#x3D;&#39;whoami&#39;)),</span><br><span class="line">                dict(action&#x3D;dict(module&#x3D;&#39;setup&#39;, )),</span><br><span class="line">            ]</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        # Create play object, playbook objects use .load instead of init or new methods,</span><br><span class="line">        play &#x3D; Play().load(play_source, variable_manager&#x3D;variable_manager, loader&#x3D;self.loader)</span><br><span class="line"></span><br><span class="line">        tqm &#x3D; None</span><br><span class="line">        try:</span><br><span class="line">            tqm &#x3D; TaskQueueManager(</span><br><span class="line">                inventory&#x3D;inventory,</span><br><span class="line">                variable_manager&#x3D;variable_manager,</span><br><span class="line">                loader&#x3D;self.loader,</span><br><span class="line">                passwords&#x3D;passwords,</span><br><span class="line">                stdout_callback&#x3D;self.callback,</span><br><span class="line">                # Use our custom callback instead of the &#96;&#96;default&#96;&#96; callback plugin, which prints to stdout</span><br><span class="line">            )</span><br><span class="line">            tqm._stdout_callback &#x3D; self.callback</span><br><span class="line">            tqm.run(play)  # most interesting data for a play is actually sent to the callback&#39;s methods</span><br><span class="line"></span><br><span class="line">            result_raw &#x3D; &#123;&#39;success&#39;: &#123;&#125;, &#39;failed&#39;: &#123;&#125;, &#39;unreachable&#39;: &#123;&#125;&#125;</span><br><span class="line">            for host, result in self.callback.host_ok.items():</span><br><span class="line">                result_raw[&#39;success&#39;][host] &#x3D; result._result[&quot;ansible_facts&quot;]</span><br><span class="line">            for host, result in self.callback.host_failed.items():</span><br><span class="line">                result_raw[&#39;failed&#39;][host] &#x3D; result._result</span><br><span class="line">            for host, result in self.callback.host_unreachable.items():</span><br><span class="line">                result_raw[&#39;failed&#39;][host] &#x3D; result._result</span><br><span class="line"></span><br><span class="line">            print(json.dumps(result_raw, indent&#x3D;4))</span><br><span class="line"></span><br><span class="line">            return result_raw</span><br><span class="line"></span><br><span class="line">        finally:</span><br><span class="line">            if tqm is not None:</span><br><span class="line">                tqm.cleanup()</span><br><span class="line"></span><br><span class="line">            shutil.rmtree(C.DEFAULT_LOCAL_TMP, True)</span><br><span class="line"></span><br><span class="line">    def VariablManager(self, hostname&#x3D;None):</span><br><span class="line">        inventory &#x3D; InventoryManager(loader&#x3D;self.loader,</span><br><span class="line">                                     sources&#x3D;&#39;&#x2F;Users&#x2F;shuke&#x2F;Work&#x2F;SCM&#x2F;Door&#x2F;apps&#x2F;playbook&#x2F;inventory&#x2F;rcx&#x2F;hosts.ini&#39;)</span><br><span class="line">        vm &#x3D; VariableManager(loader&#x3D;self.loader, inventory&#x3D;inventory)</span><br><span class="line"></span><br><span class="line">        host &#x3D; inventory.get_host(hostname)</span><br><span class="line"></span><br><span class="line">        vm.set_host_variable(host&#x3D;host, varname&#x3D;&quot;name&quot;, value&#x3D;&quot;test&quot;)</span><br><span class="line"></span><br><span class="line">        # 获取指定主机的变量</span><br><span class="line">        # print(vm.get_vars(host&#x3D;host))</span><br><span class="line"></span><br><span class="line">        return vm.get_vars(host&#x3D;host)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    inventory_path &#x3D; &#39;&#x2F;Users&#x2F;shuke&#x2F;Work&#x2F;SCM&#x2F;Door&#x2F;apps&#x2F;playbook&#x2F;inventory&#x2F;rcx&#x2F;hosts.ini&#39;</span><br><span class="line">    AnsibleAPI(inventory_path).cmdb()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      ansible api of python
    
    </summary>
    
    
      <category term="Ansible" scheme="https://shuke163.github.io/categories/Ansible/"/>
    
    
      <category term="Ansible" scheme="https://shuke163.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Ansible API调用测试</title>
    <link href="https://shuke163.github.io/2020/04/20/Ansible-API%E8%B0%83%E7%94%A8%E6%B5%8B%E8%AF%95/"/>
    <id>https://shuke163.github.io/2020/04/20/Ansible-API%E8%B0%83%E7%94%A8%E6%B5%8B%E8%AF%95/</id>
    <published>2020-04-20T12:01:53.000Z</published>
    <updated>2020-04-20T12:02:13.428Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ansible-API调用测试"><a href="#Ansible-API调用测试" class="headerlink" title="Ansible API调用测试"></a>Ansible API调用测试</h2><p>本文主要作为记录并未实际使用验证</p><p>以下代码是博主测试使用的代码，博主测试使用密码来测试，如需秘钥只要将password注释了就可以使用秘钥了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">$ cat test.py</span><br><span class="line"></span><br><span class="line">#! &#x2F;usr&#x2F;local&#x2F;bin&#x2F;python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">from  setup.ansible_api.runner import AdHocRunner, CommandRunner, PlayBookRunner</span><br><span class="line">from  setup.ansible_api.inventory import BaseInventory</span><br><span class="line"></span><br><span class="line">def  TestAdHocRunner():</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">         以yml的形式 执行多个命令</span><br><span class="line">        :return:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">        host_data &#x3D; [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;hostname&quot;: &quot;192.168.188.6&quot;,</span><br><span class="line">                &quot;ip&quot;: &quot;192.168.188.6&quot;,</span><br><span class="line">                &quot;port&quot;: 22,</span><br><span class="line">                &quot;username&quot;: &quot;root&quot;,</span><br><span class="line">                &quot;password&quot;: &quot;admin12&quot;,</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">        inventory &#x3D; BaseInventory(host_data)</span><br><span class="line">        runner &#x3D; AdHocRunner(inventory)</span><br><span class="line"></span><br><span class="line">        tasks &#x3D; [</span><br><span class="line">            # &#123;&quot;action&quot;: &#123;&quot;module&quot;: &quot;cron&quot;,&quot;args&quot;: &quot;name&#x3D;\&quot;sync time\&quot; minute&#x3D;\&quot;*&#x2F;3\&quot; job&#x3D;\&quot;&#x2F;usr&#x2F;sbin&#x2F;ntpdate time.nist.gov &amp;&gt; &#x2F;dev&#x2F;null\&quot;&quot; &#125;, &quot;name&quot;: &quot;run_cmd&quot;&#125;,</span><br><span class="line">            # &#123;&quot;action&quot;: &#123;&quot;module&quot;: &quot;shell&quot;, &quot;args&quot;: &quot;ls &#x2F;root1&quot;&#125;, &quot;name&quot;: &quot;run_whoami&quot;&#125;,</span><br><span class="line">            # &#123;&quot;action&quot;: &#123;&quot;module&quot;: &quot;copy&quot;, &quot;args&quot;: &quot;src&#x3D;&#x2F;home&#x2F;23.txt dest&#x3D;&#x2F;tmp&quot;,&quot;mode&quot;:&quot;0644&quot;&#125;, &quot;name&quot;: &quot;run_whoami&quot;&#125;,</span><br><span class="line">            # &#123;&quot;action&quot;: &#123;&quot;module&quot;: &quot;setup&quot;, &quot;args&quot;: &quot;&quot;&#125;, &quot;name&quot;: &quot;run_whoami&quot;&#125;,</span><br><span class="line">            &#123;&quot;action&quot;: &#123;&quot;module&quot;: &quot;ping&quot;, &quot;args&quot;: &quot;&quot;&#125;, &quot;name&quot;: &quot;run_whoami&quot;&#125;,</span><br><span class="line">            # &#123;&quot;action&quot;: &#123;&quot;module&quot;: &quot;yum&quot;, &quot;args&quot;: &quot;name&#x3D;httpd state&#x3D;latest&quot;&#125;, &quot;name&quot;: &quot;run_whoami&quot;&#125;,</span><br><span class="line">        ]</span><br><span class="line">        ret &#x3D; runner.run(tasks, &quot;all&quot;)</span><br><span class="line">        print(ret.results_summary)</span><br><span class="line">        print(ret.results_raw)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def TestCommandRunner():</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        执行单个命令，返回结果</span><br><span class="line">        :return:</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">        host_data &#x3D; [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;hostname&quot;: &quot;192.168.188.6&quot;,</span><br><span class="line">                &quot;ip&quot;: &quot;192.168.188.6&quot;,</span><br><span class="line">                &quot;port&quot;: 22,</span><br><span class="line">                &quot;username&quot;: &quot;root&quot;,</span><br><span class="line">                &quot;password&quot;: &quot;admin12&quot;,</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">        inventory &#x3D; BaseInventory(host_data)</span><br><span class="line">        runner &#x3D; CommandRunner(inventory)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        res &#x3D; runner.execute(&#39;who&#39;, &#39;all&#39;)</span><br><span class="line">        print(res.results_command)</span><br><span class="line">        print(res.results_raw)</span><br><span class="line">        print(res.results_command[&#39;192.168.188.6&#39;][&#39;stdout&#39;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def TestPlayBookRunner():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">     以yml的形式 执行多个命令</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">    host_data &#x3D; [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;hostname&quot;: &quot;192.168.188.6&quot;,</span><br><span class="line">            &quot;ip&quot;: &quot;192.168.188.5&quot;,</span><br><span class="line">            &quot;port&quot;: 22,</span><br><span class="line">            &quot;username&quot;: &quot;root&quot;,</span><br><span class="line">            &quot;password&quot;: &quot;admin12&quot;,</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">    inventory &#x3D; BaseInventory(host_data)</span><br><span class="line">    path &#x3D; &#39;&#x2F;etc&#x2F;ansible&#x2F;webservice.yml&#39;</span><br><span class="line">    runner &#x3D; PlayBookRunner(playbook_path&#x3D;path,inventory&#x3D;inventory)</span><br><span class="line">    ret &#x3D; runner.run()</span><br><span class="line">    print(ret)</span><br><span class="line"></span><br><span class="line">def  TestInventoryRunner():</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    返回主机信息，组信息，组内主机信息</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    host_list &#x3D; [&#123;</span><br><span class="line">        &quot;hostname&quot;: &quot;testserver1&quot;,</span><br><span class="line">        &quot;ip&quot;: &quot;102.1.1.1&quot;,</span><br><span class="line">        &quot;port&quot;: 22,</span><br><span class="line">        &quot;username&quot;: &quot;root&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;password&quot;,</span><br><span class="line">        &quot;private_key&quot;: &quot;&#x2F;tmp&#x2F;private_key&quot;,</span><br><span class="line">        &quot;become&quot;: &#123;</span><br><span class="line">            &quot;method&quot;: &quot;sudo&quot;,</span><br><span class="line">            &quot;user&quot;: &quot;root&quot;,</span><br><span class="line">            &quot;pass&quot;: None,</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;groups&quot;: [&quot;group1&quot;, &quot;group2&quot;],</span><br><span class="line">        &quot;vars&quot;: &#123;&quot;sexy&quot;: &quot;yes&quot;&#125;,</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        &quot;hostname&quot;: &quot;testserver2&quot;,</span><br><span class="line">        &quot;ip&quot;: &quot;8.8.8.8&quot;,</span><br><span class="line">        &quot;port&quot;: 2222,</span><br><span class="line">        &quot;username&quot;: &quot;root&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;password&quot;,</span><br><span class="line">        &quot;private_key&quot;: &quot;&#x2F;tmp&#x2F;private_key&quot;,</span><br><span class="line">        &quot;become&quot;: &#123;</span><br><span class="line">            &quot;method&quot;: &quot;su&quot;,</span><br><span class="line">            &quot;user&quot;: &quot;root&quot;,</span><br><span class="line">            &quot;pass&quot;: &quot;123&quot;,</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;groups&quot;: [&quot;group3&quot;, &quot;group4&quot;],</span><br><span class="line">        &quot;vars&quot;: &#123;&quot;love&quot;: &quot;yes&quot;&#125;,</span><br><span class="line">    &#125;]</span><br><span class="line"></span><br><span class="line">    inventory &#x3D; BaseInventory(host_list&#x3D;host_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    print(&quot;#&quot;*10 + &quot;Hosts&quot; + &quot;#&quot;*10)</span><br><span class="line">    for host in inventory.hosts:</span><br><span class="line">        print(host)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    print(&quot;#&quot; * 10 + &quot;Groups&quot; + &quot;#&quot; * 10)</span><br><span class="line">    for group in inventory.groups:</span><br><span class="line">        print(group)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    print(&quot;#&quot; * 10 + &quot;all group hosts&quot; + &quot;#&quot; * 10)</span><br><span class="line">    group &#x3D; inventory.get_group(&#39;all&#39;)</span><br><span class="line">    print(group.hosts)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    TestPlayBookRunner()</span><br><span class="line">    TestAdHocRunnerRunner()</span><br><span class="line">    TestCommandRunner()</span><br><span class="line">    TestInventoryRunner()</span><br></pre></td></tr></table></figure><p>下面测试调用AdHoc的测试结果，博主比较懒，只测试一个ping模块，其他模块网友请自行测试。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PLAY [Ansible Ad-hoc] **********************************************************</span><br><span class="line"></span><br><span class="line">TASK [ping] ********************************************************************</span><br><span class="line">ok: [192.168.188.6]</span><br><span class="line">&#123;&#39;ok&#39;: &#123;&#39;192.168.188.6&#39;: &#123;&#39;ping&#39;: &#123;&#39;invocation&#39;: &#123;&#39;module_args&#39;: &#123;&#39;data&#39;: &#39;pong&#39;&#125;&#125;, &#39;ping&#39;: &#39;pong&#39;, &#39;_ansible_parsed&#39;: True, &#39;_ansible_no_log&#39;: False, &#39;changed&#39;: False&#125;&#125;&#125;, &#39;failed&#39;: &#123;&#125;, &#39;unreachable&#39;: &#123;&#125;, &#39;skipped&#39;: &#123;&#125;&#125;</span><br></pre></td></tr></table></figure><p>下面测试调用Command的测试结果，测试在目标机器上面使用who命令，其他命令网友自行测试。另外调用TestCommandRunner()必须是以下模块’shell’, ‘raw’, ‘command’, ‘script’，其他模块，请使用AdHoc。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PLAY [Run command who on 192.168.188.6] ****************************************</span><br><span class="line"></span><br><span class="line">TASK [command] *****************************************************************</span><br><span class="line">changed: [192.168.188.6]</span><br><span class="line">&#123;&#39;192.168.188.6&#39;: &#123;&#39;cmd&#39;: &#39;who&#39;, &#39;stderr&#39;: &#39;&#39;, &#39;stdout&#39;: &#39;root     :0           2018-03-10 09:59 (:0)\nroot     pts&#x2F;1        2018-03-10 10:15 (192.168.188.7)&#39;, &#39;rc&#39;: 0, &#39;delta&#39;: &#39;0:00:00.017265&#39;&#125;&#125;</span><br><span class="line">&#123;&#39;ok&#39;: &#123;&#39;192.168.188.6&#39;: &#123;&#39;command&#39;: &#123;&#39;changed&#39;: True, &#39;end&#39;: &#39;2018-03-10 10:15:21.892560&#39;, &#39;stdout&#39;: &#39;root     :0           2018-03-10 09:59 (:0)\nroot     pts&#x2F;1        2018-03-10 10:15 (192.168.188.7)&#39;, &#39;cmd&#39;: &#39;who&#39;, &#39;rc&#39;: 0, &#39;start&#39;: &#39;2018-03-10 10:15:21.875295&#39;, &#39;stderr&#39;: &#39;&#39;, &#39;delta&#39;: &#39;0:00:00.017265&#39;, &#39;invocation&#39;: &#123;&#39;module_args&#39;: &#123;&#39;warn&#39;: True, &#39;executable&#39;: None, &#39;_uses_shell&#39;: True, &#39;_raw_params&#39;: &#39;who&#39;, &#39;removes&#39;: None, &#39;creates&#39;: None, &#39;chdir&#39;: None, &#39;stdin&#39;: None&#125;&#125;, &#39;_ansible_parsed&#39;: True, &#39;stdout_lines&#39;: [&#39;root     :0           2018-03-10 09:59 (:0)&#39;, &#39;root     pts&#x2F;1        2018-03-10 10:15 (192.168.188.7)&#39;], &#39;stderr_lines&#39;: [], &#39;_ansible_no_log&#39;: False&#125;&#125;&#125;, &#39;failed&#39;: &#123;&#125;, &#39;unreachable&#39;: &#123;&#125;, &#39;skipped&#39;: &#123;&#125;&#125;</span><br><span class="line">root     :0           2018-03-10 09:59 (:0)</span><br><span class="line">root     pts&#x2F;1        2018-03-10 10:15 (192.168.188.7)</span><br></pre></td></tr></table></figure><p>下面测试调用PlayBook的测试结果。<br>下面是博主使用的playbook文件，只是简单的touch一个123.txt文件，其他网友自行测试。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- hosts: te</span><br><span class="line">  remote_user: root</span><br><span class="line">  vars:</span><br><span class="line">    - touch_flile: 123.txt</span><br><span class="line">  tasks:</span><br><span class="line">    - name: touch file</span><br><span class="line">      shell: &quot;touch &#x2F;tmp&#x2F;&#123;&#123; touch_flile &#125;&#125;&quot;</span><br></pre></td></tr></table></figure><p>以下结果是经过博主json格式转换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&#39;results&#39;: [&#123;</span><br><span class="line">&#39;task&#39;: &#123;</span><br><span class="line">&#39;name&#39;: &#39;Gathering Facts&#39;</span><br><span class="line">&#125;,</span><br><span class="line">&#39;hosts&#39;: &#123;</span><br><span class="line">&#39;192.168.188.6&#39;: &#123;</span><br><span class="line">&#39;invocation&#39;: &#123;</span><br><span class="line">&#39;module_args&#39;: &#123;</span><br><span class="line">&#39;filter&#39;: &#39;*&#39;,</span><br><span class="line">&#39;gather_subset&#39;: [&#39;all&#39;],</span><br><span class="line">&#39;fact_path&#39;: &#39;&#x2F;etc&#x2F;ansible&#x2F;facts.d&#39;,</span><br><span class="line">&#39;gather_timeout&#39;: 10</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#39;_ansible_parsed&#39;: True,</span><br><span class="line">&#39;_ansible_verbose_override&#39;: True,</span><br><span class="line">&#39;_ansible_no_log&#39;: False,</span><br><span class="line">&#39;changed&#39;: False</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">&#39;task&#39;: &#123;</span><br><span class="line">&#39;name&#39;: &#39;touch file&#39;</span><br><span class="line">&#125;,</span><br><span class="line">&#39;hosts&#39;: &#123;</span><br><span class="line">&#39;192.168.188.6&#39;: &#123;</span><br><span class="line">&#39;changed&#39;: True,</span><br><span class="line">&#39;end&#39;: &#39;2018-03-10 18:14:52.078526&#39;,</span><br><span class="line">&#39;stdout&#39;: &#39;&#39;,</span><br><span class="line">&#39;cmd&#39;: &#39;touch &#x2F;tmp&#x2F;123.txt&#39;,</span><br><span class="line">&#39;rc&#39;: 0,</span><br><span class="line">&#39;start&#39;: &#39;2018-03-10 18:14:52.064544&#39;,</span><br><span class="line">&#39;stderr&#39;: &#39;&#39;,</span><br><span class="line">&#39;delta&#39;: &#39;0:00:00.013982&#39;,</span><br><span class="line">&#39;invocation&#39;: &#123;</span><br><span class="line">&#39;module_args&#39;: &#123;</span><br><span class="line">&#39;warn&#39;: True,</span><br><span class="line">&#39;executable&#39;: None,</span><br><span class="line">&#39;_uses_shell&#39;: True,</span><br><span class="line">&#39;_raw_params&#39;: &#39;touch &#x2F;tmp&#x2F;123.txt&#39;,</span><br><span class="line">&#39;removes&#39;: None,</span><br><span class="line">&#39;creates&#39;: None,</span><br><span class="line">&#39;chdir&#39;: None,</span><br><span class="line">&#39;stdin&#39;: None</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#39;warnings&#39;: [&#39;Consider using file module with state&#x3D;touch rather than running touch&#39;],</span><br><span class="line">&#39;_ansible_parsed&#39;: True,</span><br><span class="line">&#39;stdout_lines&#39;: [],</span><br><span class="line">&#39;stderr_lines&#39;: [],</span><br><span class="line">&#39;_ansible_no_log&#39;: False</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;],</span><br><span class="line">&#39;status&#39;: &#123;</span><br><span class="line">&#39;192.168.188.6&#39;: &#123;</span><br><span class="line">&#39;ok&#39;: 2,</span><br><span class="line">&#39;failures&#39;: 0,</span><br><span class="line">&#39;unreachable&#39;: 0,</span><br><span class="line">&#39;changed&#39;: 1,</span><br><span class="line">&#39;skipped&#39;: 0</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面测试Inventory</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">##########Hosts##########</span><br><span class="line">testserver1</span><br><span class="line">testserver2</span><br><span class="line">##########Groups##########</span><br><span class="line">all</span><br><span class="line">ungrouped</span><br><span class="line">group1</span><br><span class="line">group2</span><br><span class="line">group3</span><br><span class="line">group4</span><br><span class="line">##########all group hosts##########</span><br><span class="line">[testserver1, testserver2]</span><br></pre></td></tr></table></figure><p><a href="http://www.panzxl.com/archives/42" target="_blank" rel="noopener">原文地址</a></p>]]></content>
    
    <summary type="html">
    
      Ansible API调用测试
    
    </summary>
    
    
      <category term="Ansible" scheme="https://shuke163.github.io/categories/Ansible/"/>
    
    
      <category term="Ansible" scheme="https://shuke163.github.io/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Python RBAC</title>
    <link href="https://shuke163.github.io/2020/04/20/Python-RBAC/"/>
    <id>https://shuke163.github.io/2020/04/20/Python-RBAC/</id>
    <published>2020-04-20T11:59:08.000Z</published>
    <updated>2020-04-20T12:01:06.541Z</updated>
    
    <content type="html"><![CDATA[<h2 id="casbin"><a href="#casbin" class="headerlink" title="casbin"></a>casbin</h2><p><a href="https://github.com/casbin/pycasbin" target="_blank" rel="noopener">https://github.com/casbin/pycasbin</a></p>]]></content>
    
    <summary type="html">
    
      Python RBAC
    
    </summary>
    
    
      <category term="PYTHON" scheme="https://shuke163.github.io/categories/PYTHON/"/>
    
      <category term="RBAC" scheme="https://shuke163.github.io/categories/PYTHON/RBAC/"/>
    
    
      <category term="PYTHON" scheme="https://shuke163.github.io/tags/PYTHON/"/>
    
      <category term="RBAC" scheme="https://shuke163.github.io/tags/RBAC/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins file 构建示例</title>
    <link href="https://shuke163.github.io/2020/04/20/Jenkins-file-%E6%9E%84%E5%BB%BA%E7%A4%BA%E4%BE%8B/"/>
    <id>https://shuke163.github.io/2020/04/20/Jenkins-file-%E6%9E%84%E5%BB%BA%E7%A4%BA%E4%BE%8B/</id>
    <published>2020-04-20T11:57:27.000Z</published>
    <updated>2020-04-20T11:58:40.996Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jenkins-file-构建示例"><a href="#Jenkins-file-构建示例" class="headerlink" title="Jenkins file 构建示例"></a>Jenkins file 构建示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br></pre></td><td class="code"><pre><span class="line">&#39;pipeline &#123;</span><br><span class="line">    &#x2F;&#x2F;在任何可用的代理上执行Pipeline</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    agent &#123;</span><br><span class="line">        node &#123;</span><br><span class="line">            label &quot;PTtest&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    options &#123;</span><br><span class="line">        buildDiscarder(logRotator(numToKeepStr: &#39;5&#39;))</span><br><span class="line">        disableConcurrentBuilds()</span><br><span class="line">    &#125;</span><br><span class="line">    tools &#123;</span><br><span class="line">        jdk &#39;Oracle JDK 8&#39;</span><br><span class="line">        maven &#39;Maven 3&#39;</span><br><span class="line">    &#125;</span><br><span class="line">    environment &#123;</span><br><span class="line">        def serviceName  &#x3D; &quot;&quot;</span><br><span class="line">        &#x2F;&#x2F; hosts must be splited by dot</span><br><span class="line">        def warFilePath &#x3D; &#39;mywo-crud-provider&#x2F;target&#x2F;mywo-crud-provider.war&#39;</span><br><span class="line">        def hosts &#x3D; &quot;10.41.118.137&quot;</span><br><span class="line">        def deploy_user &#x3D; &quot;app-deploy&quot;</span><br><span class="line">        def artifactsPath &#x3D; &quot;devops-artifacts&quot;</span><br><span class="line">        def department &#x3D; &quot;meiwozufang&quot;</span><br><span class="line">        def artifactOssPath &#x3D; &quot;$&#123; department &#125;&#x2F;$&#123; env.JOB_NAME &#125;&quot;</span><br><span class="line">        def tempFolder &#x3D; &quot;$&#123; WORKSPACE &#125;&#x2F;$&#123; env.JOB_NAME &#125;&#x2F;$&#123; env.BUILD_NUMBER &#125;&quot;</span><br><span class="line">        def target_dir &#x3D; &quot;&#x2F;data&#x2F;services&#x2F;tomcat-mywo-crud-8090&quot;</span><br><span class="line">        def git_commit_id &#x3D; &quot;&quot;</span><br><span class="line">        def artifact &#x3D; &quot;&quot;</span><br><span class="line">        def jmeterHome &#x3D; &quot;&#x2F;home&#x2F;jenkins&#x2F;apache-jmeter-3.1&quot;</span><br><span class="line">        def antHome &#x3D; &quot;&#x2F;home&#x2F;jenkins&#x2F;apache-ant-1.9.9&quot;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(&#39;Preparation&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh &quot;rm -rf &#x2F;tmp&#x2F;$&#123; env.JOB_NAME &#125;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Checkout code&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &quot;starting fetchCode......&quot;</span><br><span class="line">                checkout scm</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;SonarQube analysis&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &quot;starting codeAnalyze......&quot;</span><br><span class="line">                script &#123;</span><br><span class="line">                    echo &quot;starting script......&quot;</span><br><span class="line">                    def sonarqubeScannerHome &#x3D; tool name: &#39;SonarQube Scanner&#39;</span><br><span class="line">                    withSonarQubeEnv(&#39;SonarQube-Public&#39;) &#123;</span><br><span class="line">                        sh &quot;$&#123;sonarqubeScannerHome&#125;&#x2F;bin&#x2F;sonar-scanner&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> &#x2F;&#x2F;       stage(&quot;SonarQube Quality Gate&quot;) &#123;</span><br><span class="line"> &#x2F;&#x2F;           when &#123;</span><br><span class="line"> &#x2F;&#x2F;               branch fuck</span><br><span class="line"> &#x2F;&#x2F;           &#125;</span><br><span class="line"> &#x2F;&#x2F;           steps &#123;</span><br><span class="line"> &#x2F;&#x2F;               echo &quot;starting waitForQualityGate......&quot;</span><br><span class="line"> &#x2F;&#x2F;               script &#123;</span><br><span class="line"> &#x2F;&#x2F;                   echo &quot;starting script......&quot;</span><br><span class="line"> &#x2F;&#x2F;                    timeout(time: 1, unit: &#39;HOURS&#39;) &#123;</span><br><span class="line"> &#x2F;&#x2F;                      def qg &#x3D; waitForQualityGate()</span><br><span class="line"> &#x2F;&#x2F;                      if (qg.status !&#x3D; &#39;OK&#39;) &#123;</span><br><span class="line"> &#x2F;&#x2F;                         error &quot;Pipeline aborted due to quality gate failure: $&#123;qg.status&#125;&quot;</span><br><span class="line"> &#x2F;&#x2F;                      &#125;</span><br><span class="line"> &#x2F;&#x2F;                    &#125;</span><br><span class="line"> &#x2F;&#x2F;               &#125;</span><br><span class="line"> &#x2F;&#x2F;           &#125;</span><br><span class="line"> &#x2F;&#x2F;       &#125;</span><br><span class="line"></span><br><span class="line">        stage(&#39;Compile branch master&#39;) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                branch &#39;master&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                withMaven(globalMavenSettingsConfig: &#39;bfa90212-2742-4611-aa71-8e0ec76d0c28&#39;, jdk: &#39;Oracle JDK 8&#39;, maven: &#39;Maven 3&#39;, mavenSettingsConfig: &#39;02e95d2b-6bb6-457d-943f-13c63095e500&#39;) &#123;</span><br><span class="line">                    sh &quot;mvn -Dmaven.test.skip&#x3D;true  clean package -U -DskipTests&#x3D;True&quot;</span><br><span class="line">                    sh &quot;echo this is master branch.&quot;</span><br><span class="line">                &#125;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Compile branch test&#39;) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                branch &#39;test&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                withMaven(globalMavenSettingsConfig: &#39;bfa90212-2742-4611-aa71-8e0ec76d0c28&#39;, jdk: &#39;Oracle JDK 8&#39;, maven: &#39;Maven 3&#39;, mavenSettingsConfig: &#39;02e95d2b-6bb6-457d-943f-13c63095e500&#39;) &#123;</span><br><span class="line">                    sh &quot;mvn -Dmaven.test.skip&#x3D;true  clean package -U -DskipTests&#x3D;True&quot;</span><br><span class="line">                    sh &quot;echo this is test branch.&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Package &amp; Upload to OSS&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh &quot;mkdir -p $&#123; tempFolder &#125;&quot;</span><br><span class="line">                script &#123;</span><br><span class="line">                    sh &quot;echo Upload to OSS.&quot;</span><br><span class="line">                    git_commit_id &#x3D; sh(returnStdout: true, script: &#39;git rev-parse --short HEAD&#39;).trim() &#x2F;&#x2F;需要获取shell返回值操作</span><br><span class="line">                    serviceName &#x3D; sh(returnStdout: true, script: &quot;basename $&#123; warFilePath &#125; | cut -d . -f 1&quot;).trim()</span><br><span class="line">                    sh &quot;mv $&#123; warFilePath &#125; $&#123; tempFolder &#125;&#x2F;ROOT.war&quot;</span><br><span class="line">                    artifact &#x3D; &quot;$&#123; serviceName &#125;_$&#123; env.BUILD_NUMBER &#125;-$&#123; env.BRANCH_NAME &#125;-$&#123; git_commit_id &#125;.tar.gz&quot;</span><br><span class="line">                    sh &quot;mkdir -p $&#123; artifactsPath &#125; &amp;&amp; tar czf $&#123; artifactsPath &#125;&#x2F;$&#123; artifact &#125; -C $&#123; tempFolder &#125; ROOT.war&quot;</span><br><span class="line">                    sh &quot;upload-flash -f $&#123; artifactsPath &#125;&#x2F;$&#123; artifact &#125; -t $&#123; artifactOssPath &#125;&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Deploy Package&#39;) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                branch &#39;test&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                script &#123;</span><br><span class="line">                    echo &quot;starting deploy......&quot;</span><br><span class="line">                    &#x2F;&#x2F; 运维人员维护私有仓库，保存ansible-playbook的配置文件</span><br><span class="line">                    git([url: &#39;git@git.shuke.com:shuke&#x2F;ansiblefiles.git&#39;, branch: &#39;master&#39;, credentialsId: &#39;7bc6cda9-a250-4d99-962c-e2ede002db06&#39;])</span><br><span class="line">                    withDockerRegistry([credentialsId: &#39;82a6a986-3f85-49f9-a926-0edf499fd1e3&#39;, url: &#39;https:&#x2F;&#x2F;dockerhub.shuke.com:5000&#39;]) &#123;</span><br><span class="line">                        withDockerContainer([image: &#39;dockerhub.shuke.com:5000&#x2F;test&#x2F;ansible_deploy:1.0.4&#39;]) &#123;</span><br><span class="line">                            sh &quot;ansible-playbook -i hosts --extra-vars &#39;warFilePath&#x3D;$&#123; tempFolder &#125;&#x2F;ROOT.war target_dir&#x3D;$&#123; target_dir &#125;&#39; -vv deploy_war.yml -l $&#123; hosts &#125;&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Integration Test&#39;) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                branch &#39;test&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            parallel &#123;</span><br><span class="line">                stage(&#39;API Test&#39;) &#123;</span><br><span class="line">                    steps &#123;</span><br><span class="line">                        echo &quot;starting API......&quot;  </span><br><span class="line">                        echo &quot;starting fetchAPI......&quot;</span><br><span class="line">                        dir(&#39;API&#39;) &#123;</span><br><span class="line">                            echo &quot;starting APIScript......&quot;</span><br><span class="line">                            git([url: &#39;git@git.shuke.com:api_test&#x2F;RentHouse.git&#39;, branch: &#39;master&#39;, credentialsId: &#39;7726e85b-f455-40d1-b12c-447ecac70f23&#39;])</span><br><span class="line">                            script &#123;</span><br><span class="line">                                try &#123;</span><br><span class="line">                                    withDockerRegistry([credentialsId: &#39;82a6a986-3f85-49f9-a926-0edf499fd1e3&#39;, url: &#39;https:&#x2F;&#x2F;dockerhub.shuke.com:5000&#39;]) &#123;</span><br><span class="line">                                        withDockerContainer([image: &#39;dockerhub.shuke.com:5000&#x2F;test&#x2F;robotframework:1.0.1&#39;]) &#123;</span><br><span class="line">                                            sh &quot;pybot RentHouse_API_Test&#x2F;test&quot;</span><br><span class="line">                                        &#125; </span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;catch (exc) &#123;</span><br><span class="line">                                   echo &#39;Something failed, I should sound the klaxons!&#39;</span><br><span class="line">                                   emailContent &#x3D;  &quot;API执行过程中报错了！！&quot;</span><br><span class="line">                                &#125;finally&#123;</span><br><span class="line">                                  sh &quot;cp -r .&#x2F;output.xml &#x2F;home&#x2F;jenkins&#x2F;public&#x2F;outputRentHouse_API_Prduction.xml&quot;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">&#x2F;&#x2F;                stage(&#39;UI&#39;) &#123;</span><br><span class="line">&#x2F;&#x2F;                    steps &#123;</span><br><span class="line">&#x2F;&#x2F;                      echo &quot;starting UI......&quot;</span><br><span class="line">&#x2F;&#x2F;                    &#x2F;&#x2F;   测试闪银UI</span><br><span class="line">&#x2F;&#x2F;                        dir(&#39;UI&#39;) &#123;</span><br><span class="line">&#x2F;&#x2F;                            git([url: &#39;git@git.shuke.com:ui_test&#x2F;Wecash_RentalHouse.git&#39;, branch: &#39;master&#39;, credentialsId: &#39;7726e85b-f455-40d1-b12c-447ecac70f23&#39;])</span><br><span class="line">&#x2F;&#x2F;                            script &#123;</span><br><span class="line">&#x2F;&#x2F;                                echo &quot;starting UIScript......&quot;</span><br><span class="line">&#x2F;&#x2F;                                try &#123;</span><br><span class="line">&#x2F;&#x2F;                                   &#x2F;&#x2F;sh &quot;cd &#x2F;gg&quot;</span><br><span class="line">&#x2F;&#x2F;                                   echo &quot;starting UIScript......&quot;</span><br><span class="line">&#x2F;&#x2F;                                   &#x2F;&#x2F; 执行速度太慢，先注释代码</span><br><span class="line">&#x2F;&#x2F;                                   withDockerRegistry([credentialsId: &#39;82a6a986-3f85-49f9-a926-0edf499fd1e3&#39;, url: &#39;https:&#x2F;&#x2F;dockerhub.shuke.com:5000&#39;]) &#123;</span><br><span class="line">&#x2F;&#x2F;                                        withDockerContainer([image: &#39;dockerhub.shuke.com:5000&#x2F;test&#x2F;python-chromedriver:2.7-alpine3.7-selenium&#39;]) &#123;</span><br><span class="line">&#x2F;&#x2F;                                            sh &quot;python TestSuite&#x2F;Runner.py All All business-renthouse&quot;</span><br><span class="line">&#x2F;&#x2F;                                        &#125;</span><br><span class="line">&#x2F;&#x2F;                                    &#125;</span><br><span class="line">&#x2F;&#x2F;                                    sh &quot;&#x2F;usr&#x2F;bin&#x2F;python TestSuite&#x2F;Runner.py All All business-renthouse&quot;</span><br><span class="line">&#x2F;&#x2F;                                &#125;catch (exc) &#123;</span><br><span class="line">&#x2F;&#x2F;                                   echo &#39;Something failed, I should sound the klaxons!&#39;</span><br><span class="line">&#x2F;&#x2F;                                   emailContent &#x3D; &quot;UI执行过程中报错了！！&quot;</span><br><span class="line">&#x2F;&#x2F;                                &#125;</span><br><span class="line">&#x2F;&#x2F;                            &#125;</span><br><span class="line">&#x2F;&#x2F;                        &#125;</span><br><span class="line">&#x2F;&#x2F;                    &#125;</span><br><span class="line">&#x2F;&#x2F;                &#125;</span><br><span class="line">                stage(&#39;PT&#39;) &#123;</span><br><span class="line">                    steps &#123;</span><br><span class="line">                        echo &quot;starting PT......&quot;</span><br><span class="line">                        dir(&#39;PT&#39;) &#123;</span><br><span class="line">                            git credentialsId: &#39;7726e85b-f455-40d1-b12c-447ecac70f23&#39;, url: &#39;git@git.shuke.com:p_test&#x2F;MeiWo.git&#39;</span><br><span class="line">                        &#125;</span><br><span class="line">                        dir(&#39;Tools&#39;) &#123;</span><br><span class="line">                            script &#123;</span><br><span class="line">                                echo &quot;starting PTScript......&quot;</span><br><span class="line">                                git([url: &#39;git@git.shuke.com:gonghui&#x2F;script.git&#39;, branch: &#39;master&#39;, credentialsId: &#39;7726e85b-f455-40d1-b12c-447ecac70f23&#39;])</span><br><span class="line">                                try &#123;</span><br><span class="line">                                    withEnv([&quot;JAVA_HOME&#x3D;$&#123;tool &#39;Oracle JDK 8&#39;&#125;&quot;]) &#123;</span><br><span class="line">                                        sh &quot;$&#123;antHome&#125;&#x2F;bin&#x2F;ant -f $&#123; WORKSPACE &#125;&#x2F;Tools&#x2F;PerformFilesWithPipline&#x2F;build.xml -Dname&#x3D;MeiWo -Denv&#x3D;Test -DJOB_NAME&#x3D;$&#123;JOB_NAME&#125; -DWORKSPACE&#x3D;$&#123;WORKSPACE&#125; -DjmeterHome&#x3D;$&#123;jmeterHome&#125; run&quot;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    echo &quot;starting PTAnalyze......&quot;</span><br><span class="line">                                    sh &quot;python $&#123; WORKSPACE &#125;&#x2F;Tools&#x2F;PerformFilesWithPipline&#x2F;jmeterQYWeiXinWithTimeoutArgu.py $&#123; WORKSPACE &#125;&#x2F;PT&#x2F;results&#x2F; MeiWo 2 5 500 4000&quot;</span><br><span class="line">                                    sh &quot;cp -r $&#123; WORKSPACE &#125;&#x2F;PT&#x2F;results&#x2F;ParseOri.html &#x2F;home&#x2F;jenkins&#x2F;public&#x2F;&quot;</span><br><span class="line">                                &#125;catch (exc) &#123;</span><br><span class="line">                                    echo &#39;PT执行报错了!!&#39;</span><br><span class="line">                                    emailContent &#x3D; &quot;PT执行过程中报错了！！&quot;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;  </span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;conformReport&amp;noticify&#39;) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                branch &#39;test&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                 echo &quot;starting email......&quot;</span><br><span class="line">                 </span><br><span class="line">                dir(&#39;conformresult&#39;) &#123;</span><br><span class="line">                    script&#123;</span><br><span class="line">                        git([url: &#39;git@git.shuke.com:gonghui&#x2F;script.git&#39;, branch: &#39;master&#39;, credentialsId: &#39;7726e85b-f455-40d1-b12c-447ecac70f23&#39;])</span><br><span class="line">                        withDockerRegistry([credentialsId: &#39;82a6a986-3f85-49f9-a926-0edf499fd1e3&#39;, url: &#39;https:&#x2F;&#x2F;dockerhub.shuke.com:5000&#39;]) &#123;</span><br><span class="line">                            withDockerContainer([image: &#39;dockerhub.shuke.com:5000&#x2F;test&#x2F;python3.6.5:1.0.0&#39;,args: &#39;-v &#x2F;data&#x2F;docker&#x2F;jenkins-slave-prod&#x2F;public:&#x2F;home&#x2F;jenkins&#x2F;public&#39;]) &#123;</span><br><span class="line">                                sh &quot;python3 parseScript&#x2F;conformReport.py &#x2F;home&#x2F;jenkins&#x2F;public $&#123; email_list &#125; $&#123;JOB_NAME&#125;-Build&#x2F;&#x2F;$&#123;BUILD_ID&#125;-&quot;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    post &#123;</span><br><span class="line">        always &#123;</span><br><span class="line">            echo &#39;always!&#39;</span><br><span class="line">            deleteDir()</span><br><span class="line">        &#125;</span><br><span class="line">        success &#123;</span><br><span class="line">            emailext body: &quot;Pipeline Success: Please Go to deploy if you pushed master just now&quot;,</span><br><span class="line">                recipientProviders: [[$class: &#39;DevelopersRecipientProvider&#39;], [$class: &#39;RequesterRecipientProvider&#39;]],</span><br><span class="line">                subject: &quot;&#39;$&#123;JOB_NAME&#125;&#39; ($&#123;BUILD_NUMBER&#125;)times SUCCESS&quot;,</span><br><span class="line">                to: &#39;&#39;</span><br><span class="line">            echo &#39;success!&#39;</span><br><span class="line">        &#125;</span><br><span class="line">        failure &#123;</span><br><span class="line">            emailext body: &quot;Pipeline error: Please go to $&#123;BUILD_URL&#125; and verify the build \n $&#123; emailContent &#125;&quot;,</span><br><span class="line">                recipientProviders: [[$class: &#39;DevelopersRecipientProvider&#39;], [$class: &#39;RequesterRecipientProvider&#39;]],</span><br><span class="line">                subject: &quot;&#39;$&#123;JOB_NAME&#125;&#39; ($&#123;BUILD_NUMBER&#125;)times FAILED&quot;,</span><br><span class="line">                to: &#39;&#39;</span><br><span class="line">            echo &#39;failure!&#39;</span><br><span class="line">        &#125;</span><br><span class="line">        unstable &#123;</span><br><span class="line">            echo &#39;unstable!&#39;</span><br><span class="line">        &#125;</span><br><span class="line">        changed &#123;</span><br><span class="line">            echo &#39;changed!&#39;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Jenkins file 构建示例
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>MySQL相关面试</title>
    <link href="https://shuke163.github.io/2020/04/20/MySQL%E7%9B%B8%E5%85%B3%E9%9D%A2%E8%AF%95/"/>
    <id>https://shuke163.github.io/2020/04/20/MySQL%E7%9B%B8%E5%85%B3%E9%9D%A2%E8%AF%95/</id>
    <published>2020-04-20T11:54:02.000Z</published>
    <updated>2020-04-20T11:55:25.562Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL相关面试"><a href="#MySQL相关面试" class="headerlink" title="MySQL相关面试"></a>MySQL相关面试</h2><p>一、mysql部分</p><p>二、django部分</p><p>三、Python部分</p><p>四、RESTful API设计指南</p><p>五、git</p><p>六、项目部分</p><p>一、MySQL</p><pre><code>1、mysql如何做分页      mysql数据库做分页用limit关键字，它后面跟两个参数startIndex和pageSize2、mysql引擎有哪些，各自的特点是什么？     innodb和myisam两个引擎，两者区别是 innodb支持事物，myisam不支持 innodb支持外键，myisam不支持 innodb不支持全文索引，myisam支持全文索引  innodb提供提交、回滚、崩溃恢复能力的事物的安全能力，实现并发控制 myisam提供较高的插入和查询记录的效率，主要用于插入和查询3、数据库怎么建立索引     </code></pre><p>1<br>create index account_index on <code>table name</code>(<code>字段名</code>(length)<br>       4、一张表多个字段，怎么创建组合索引</p><p>1<br>create index account_index on <code>table name</code>(<code>字段名</code>，’字段名’)<br>       5、如何应对数据的高并发，大量的数据计算</p><pre><code>      1.创建索引      2.数据库读写分离，两个数据库，一个作为写，一个作为读      3. 外键去掉      4.django中orm表性能相关的         select_related：一对多使用，查询主动做连表         prefetch_related：多对多或者一对多的时候使用，不做连表，做多次查询  6、数据库内连表、左连表、右连表        内连接是根据某个条件连接两个表共有的数据        左连接是根据某个条件以及左边的表连接数据，右边的表没有数据的话则为null        右连接是根据某个条件以及右边的表连接数据，左边的表没有数据的话则为null   7、视图和表的区别         视图是已经编译好的sql语句，是基于sql语句的结果集的可视化的表，而表不是         视图是窗口，表示内容         视图没有实际的物理记录，而表有         视图的建立和删除只影响视图本身，不影响对应的表   8、关系型数据库的特点        数据集中控制        数据独立性高        数据共享性好        数据冗余度小        数据结构化        统一的数据保护能力   9、mysql数据库都有哪些索引        普通索引：普通索引仅有一个功能：加速查找        唯一索引：唯一索引两个功能：加速查找和唯一约束（可含null）        外键索引：外键索引两个功能：加速查找和唯一约束（不可为null）        联合索引：联合索引是将n个列组合成一个索引，应用场景：同时使用n列来进行查询 10、存储过程         存储过程不允许执行return语句，但是可以通过out参数返回多个值，存储过程一般是作为一个独立的部分来执行，存储过程是一个预编译的SQL语句。 11、sql优化：       select句中避免使用 &apos;*&apos;       减少访问数据库的次数       删除重复记录       用where子句替代having子句       减少对表的查询       explain  12、char和vachar区别：       char是固定长度，存储需要空间12个字节，处理速度比vachar快，费内存空间       vachar是不固定长度，需要存储空间13个字节，节约存储空间13、Mechached与redis       mechached：只支持字符串，不能持久化，数据仅存在内存中，宕机或重启数据将全部失效                             不能进行分布式扩展，文件无法异步法。                             优点：mechached进程运行之后，会预申请一块较大的内存空间，自己进行管理。        redis：支持服务器端的数据类型，redis与memcached相比来说，拥有更多的数据结构和并发支持更丰富的数据操作，可持久化。                    五大类型数据：string、hash、list、set和有序集合，redis是单进程单线程的。                    缺点：数据库的容量受到物理内存的限制。 14、sql注入          sql注入是比较常见的攻击方式之一，针对编程员编程的疏忽，通过sql语句，实现账号无法登陆，甚至篡改数据库。          防止：凡涉及到执行sql中有变量时，切记不要用拼接字符串的方法15、什么是触发器           触发器是一种特殊的存储过程，主要是通过事件来触发而被执行的，他可以强化约束，来维护数据库的完整性和一致性，可以跟踪数据内的操作从而不允许未经许可的                 更新和变化，可以联级运算。          只有表支持触发器，视图不支持触发器 16、游标是什么？          是对查询出来的结果集作为一个单元来有效的处理，游标可以定在该单元中的特定行，从结果集的当前行检索一行或多行，可以对结果集当前行做修改，          一般不使用游标，但是需要逐条处理数据的时候，游标显得十分重要  17、 数据库支持多有标准的SQL数据类型，重要分为三类             数值类型（tinyint，int，bigint，浮点数，bit）             字符串类型（char和vachar，enum，text，set）             日期类型（date，datetime，timestamp）   18、mysql慢查询            慢查询对于跟踪有问题的查询很有用，可以分析出当前程序里哪些sql语句比较耗费资源            慢查询定义：                指mysql记录所有执行超过long_query_time参数设定的时间值的sql语句，慢查询日志就是记录这些sql的日志。                mysql在windows系统中的配置文件一般是my.ini找到mysqld                log-slow-queries = F:\MySQL\log\mysqlslowquery.log  为慢查询日志存放的位置，一般要有可写权限                long_query_time = 2  2表示查询超过两秒才记录    19、memcached命中率            命中：可以直接通过缓存获取到需要的数据            不命中：无法直接通过缓存获取到想要的数据，需要再次查询数据库或者执行其他的操作，原因可能是由于缓存中根本不存在，或者缓存已经过期            缓存的命中率越高则表示使用缓存的收益越高，应额用的性能越好，抗病发能力越强            运行state命令可以查看memcached服务的状态信息，其中cmd—get表示总的get次数，get—hits表示命中次数，命中率=get—hits / cmd—get    20、Oracle和MySQL该如何选择，为什么？             他们都有各自的优点和缺点。考虑到时间因素，我倾向于MySQL             选择MySQL而不选Oracle的原因             MySQL开源             MySQL轻便快捷             MySQL对命令行和图形界面的支持都很好             MySQL支持通过Query Browser进行管理     21、什么情况下适合建立索引？            1.为经常出现在关键字order by、group by、distinct后面的字段，建立索引            2.在union等集合操作的结果集字段上，建立索引，其建立索引的目的同上            3.为经常用作查询选择的字段，建立索引            4.在经常用作表连接的属性上，建立索引     22、数据库底层是用什么结构实现的，你大致画一下：               底层用B+数实现，结构图参考：                                                    http://blog.csdn.net/cjfeii/article/details/10858721                http://blog.csdn.net/tonyxf121/article/details/8393545      23、sql语句应该考虑哪些安全性？               1.防止sql注入，对特殊字符进行转义，过滤或者使用预编译的sql语句绑定变量              2.最小权限原则，特别是不要用root账户，为不同的类型的动作或者组建使用不同的账户              3.当sql运行出错时，不要把数据库返回的错误信息全部显示给用户，以防止泄漏服务器和数据库相关信息      24、数据库事物有哪几种？               隔离性、持续性、一致性、原子性      25、MySQ数据表在什么情况下容易损坏？                服务器突然断电导致数据文件损坏                强制关机，没有先关闭mysq服务器等       26、drop，delete与truncate的区别                drop直接删除表                truncate删除表中数据，再插入时自增长id又从1开始                 delete删除表中数据，可以加where子句        27、数据库范式                  1.第一范式：就是无重复的列                  2.第二范式：就是非主属性非部分依赖于主关键字                  3.第三范式：就是属性不依赖于其他非主属性（消除冗余）         28、MySQL锁类型                   根据锁的类型分：可以分为共享锁、排他锁、意向共享锁和意向排他锁                   根据锁的粒度分：可以分为行锁、表锁                   对于mysql而言，事务机制更多是靠底层的存储引擎来实现的，因此，mysql层面只有表锁，                   而支持事物的innodb存储引起则实现了行锁（在行相应的索引记录上的锁）                   说明：对于更新操作（读不上锁），只有走索引才可能上行锁                   MVCC（多版本并发控制）并发控制机制下，任何操作都不会阻塞读取操作，                   读取操作也不会阻塞任何操作，只因为读不上锁                    共享锁：由读表操作加上的锁，加锁后其他用户只能获取该表或行的共享锁，不能获取排他锁，                                  也就是说只能读不能写                    排他锁：由写表操作加上的锁，加锁后其他用户不能获取该表或该行的任何锁，典型mysql事物中的更新操作                    意向共享锁（IS）：事物打算给数据行加行共享锁，事物在给一个数据行加共享锁前必须先取得该表的IS锁                    意向排他锁（IX）：事物打算给数据行加行排他锁，事物在给一个数据行家排他锁前必须先取得该表的IX锁          29、如何解决MYSQL数据库中文乱码问题？                   1.在数据库安装的时候指定字符集                   2.如果在按完了以后可以更改配置文件                   3.建立数据库时候：指定字符集类型                   4.建表的时候也指定字符集               30、数据库应用系统设计                  1.规划                    2.需求分析                  3.概念模型设计                  4.逻辑设计                  5.物理设计                  6. 程序编制及调试                  7.运行及维护                 ps：数据库常见面试问题总结                    https://yq.aliyun.com/wenji/     </code></pre>]]></content>
    
    <summary type="html">
    
      MySQL相关面试
    
    </summary>
    
    
      <category term="MySQL" scheme="https://shuke163.github.io/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://shuke163.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>算法和REST-API</title>
    <link href="https://shuke163.github.io/2020/04/20/%E7%AE%97%E6%B3%95%E5%92%8CREST-API/"/>
    <id>https://shuke163.github.io/2020/04/20/%E7%AE%97%E6%B3%95%E5%92%8CREST-API/</id>
    <published>2020-04-20T11:52:56.000Z</published>
    <updated>2020-04-20T11:55:23.965Z</updated>
    
    <content type="html"><![CDATA[<h2 id="算法和REST-API"><a href="#算法和REST-API" class="headerlink" title="算法和REST API"></a>算法和REST API</h2><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><p>（冒泡排序，选择排序，插入排序）<br>  冒泡：首先，列表每两个相邻的数，如果前面的比后边的大，<br>  那么交换这两个数，代码关键点：趟和无序区，<br>  时间复杂度为：O(n2)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line">def dublue_sort(li):</span><br><span class="line">for i in range(len(li)-1):</span><br><span class="line">exchange&#x3D; False</span><br><span class="line">for j in range(len(li)-i -1):</span><br><span class="line">if li[j] &gt; li[j+1]:</span><br><span class="line">li[j],li[j+1] &#x3D; li[j+1],li[j]</span><br><span class="line">exchange &#x3D; True</span><br><span class="line">if not exchange:</span><br><span class="line">return</span><br><span class="line">return li</span><br><span class="line">li&#x3D;list(range(100))</span><br><span class="line">random.shuffle(li)</span><br><span class="line">print(li)</span><br><span class="line">print(dublue_sort(li))</span><br></pre></td></tr></table></figure><p>选择：一趟遍历记录最小的数，放到第一个位置，再一趟遍历记录剩余列表中最小的数，<br>继续放置，代码关键点：无序区和最小数的位置，时间复杂度为：O(n2)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def select_sort(li):</span><br><span class="line">     for i in range(len(li)-1): #i是趟</span><br><span class="line">         min_loc&#x3D;i</span><br><span class="line">         #找i位置到最后位置范围内最小的数</span><br><span class="line">         for j in range(i,len(li)):</span><br><span class="line">             if li[j] &lt; li[min_loc]:</span><br><span class="line">                 min_loc &#x3D; j</span><br><span class="line">         #和无序区第一个数作交换</span><br><span class="line">                 li[min_loc],li[i] &#x3D; li[i],li[min_loc]</span><br><span class="line">     return li</span><br><span class="line">li&#x3D;list(range(100))</span><br><span class="line">random.shuffle(li)</span><br><span class="line">print(select_sort(li))</span><br></pre></td></tr></table></figure><p>插入：列表被分为有序区和无序区两个部分。最初有序区只有一个元素，<br>每次从无序区选择一个元素，插入到有序区的位置，直到无序区变空，<br>      代码关键点：摸到的牌和手里的牌，时间复杂度为：O(n2)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">def insert_sort(li):</span><br><span class="line">for i in range(1,len(li)):  #i 代表每次摸到的牌的下标</span><br><span class="line">tmp&#x3D;li[i]</span><br><span class="line">j &#x3D; i-1  # j代表手里最后一张牌的下标</span><br><span class="line">while True:</span><br><span class="line">if j &lt; 0 or tmp &gt;&#x3D; li[j]:</span><br><span class="line">break</span><br><span class="line">li[ j + 1] &#x3D; li [j]</span><br><span class="line">j -&#x3D;1</span><br><span class="line">li[j+1] &#x3D; tmp</span><br><span class="line">li&#x3D;list(range(100))</span><br><span class="line">print(insert_sort(li))</span><br></pre></td></tr></table></figure><p>二分：列表查找：从列表中查找指定元素，输入：列表、待查找元素，输出：元素下标或未查找到元素。<br>二分查找，从有序列表的候选区data[0:n]开始，通过对待查找的值与候选区中间值的比较，<br>可以使候选区减少一半。时间复杂为：O(logn)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def bin_search(data,val):</span><br><span class="line">    low&#x3D;0</span><br><span class="line">    high&#x3D;len(data)-1</span><br><span class="line">    while low &lt;&#x3D; high :</span><br><span class="line">        mid&#x3D; (low+high) &#x2F;&#x2F;2</span><br><span class="line">        if data[mid] &#x3D;&#x3D; val:</span><br><span class="line">            return mid</span><br><span class="line">        elif data[mid] &lt; high :</span><br><span class="line">            low &#x3D; mid + 1</span><br><span class="line">        else:</span><br><span class="line">            high &#x3D; mid - 1</span><br><span class="line">    return None</span><br><span class="line">print(bin_search([1,2,3,4,5,6,7,8],4))</span><br></pre></td></tr></table></figure><h3 id="RESTful-API设计指南"><a href="#RESTful-API设计指南" class="headerlink" title="RESTful API设计指南"></a>RESTful API设计指南</h3><pre><code>    参考地址：      http://www.ruanyifeng.com/blog/2014/05/restful_api.html1、协议             API与用户的通信协议，总是使用HTTPs协议2、域名      应该尽量将API部署在专用域名之下          https://api.example.com      如果确定API很简单，不会有进一步扩展，可以考虑放在主域名下                      https://example.org/api/3、版本      应该将API的版本号放入URL         https://api.example.com/v1/        另一种做法是：将版本号放在HTTP头信息中，4、路径        https://api.example.com/v1/zoos  https://api.example.com/v1/animals  https://api.example.com/v1/employees</code></pre><p>5、动词<br>  对于资源的具体操作类型，由HTTP动词表示<br>        GET（SELECT）：从服务器取出资源（一项或多项）。<br>        POST（CREATE）：在服务器新建一个资源。<br>        PUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）。<br>        PATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）。<br>        DELETE（DELETE）：从服务器删除资源。<br>还有两个不常用的HTTP动词<br>       GET /zoos：列出所有动物园<br>       POST /zoos：新建一个动物园<br>       GET /zoos/ID：获取某个指定动物园的信息<br>       PUT /zoos/ID：更新某个指定动物园的信息（提供该动物园的全部信息）<br>       PATCH /zoos/ID：更新某个指定动物园的信息（提供该动物园的部分信息）<br>       DELETE /zoos/ID：删除某个动物园<br>       GET /zoos/ID/animals：列出某个指定动物园的所有动物<br>       DELETE /zoos/ID/animals/ID：删除某个指定动物园的指定动物</p><p>6、过滤信息（Filtering）<br>    如果记录数量很多，服务器不可能都将它们返回给用户，API应该提供参数，过滤返回结果<br>        ?limit=10：指定返回记录的数量<br>        ?offset=10：指定返回记录的开始位置。<br>        ?page=2&amp;per_page=100：指定第几页，以及每页的记录数。<br>        ?sortby=name&amp;order=asc：指定返回结果按照哪个属性排序，以及排序顺序。<br>        ?animal_type_id=1：指定筛选条件    </p><p>7、状态码（Status Code）<br>      200 OK - [GET]：服务器成功返回用户请求的数据，该操作是幂等的（Idempotent）。<br>      201 CREATED - [POST/PUT/PATCH]：用户新建或修改数据成功。<br>      202 Accepted - [<em>]：表示一个请求已经进入后台排队（异步任务）<br>      204 NO CONTENT - [DELETE]：用户删除数据成功。<br>      400 INVALID REQUEST - [POST/PUT/PATCH]：用户发出的请求有错误，服务器没有进行新建或修改数据的操作，该操作是幂等的。<br>      401 Unauthorized - [</em>]：表示用户没有权限（令牌、用户名、密码错误）。<br>      403 Forbidden - [<em>] 表示用户得到授权（与401错误相对），但是访问是被禁止的。<br>      404 NOT FOUND - [</em>]：用户发出的请求针对的是不存在的记录，服务器没有进行操作，该操作是幂等的。<br>      406 Not Acceptable - [GET]：用户请求的格式不可得（比如用户请求JSON格式，但是只有XML格式）。<br>      410 Gone -[GET]：用户请求的资源被永久删除，且不会再得到的。<br>      422 Unprocesable entity - [POST/PUT/PATCH] 当创建一个对象时，发生一个验证错误。<br>      500 INTERNAL SERVER ERROR - [*]：服务器发生错误，用户将无法判断发出的请求是否成功。        </p>]]></content>
    
    <summary type="html">
    
      算法和REST-API
    
    </summary>
    
    
      <category term="PYTHON" scheme="https://shuke163.github.io/categories/PYTHON/"/>
    
    
      <category term="PYTHON" scheme="https://shuke163.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>Python面试题一</title>
    <link href="https://shuke163.github.io/2020/04/20/Python%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B8%80/"/>
    <id>https://shuke163.github.io/2020/04/20/Python%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B8%80/</id>
    <published>2020-04-20T11:51:52.000Z</published>
    <updated>2020-04-20T11:55:22.370Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Python面试题一"><a href="#Python面试题一" class="headerlink" title="Python面试题一"></a>Python面试题一</h2><h3 id="二-django"><a href="#二-django" class="headerlink" title="二. django"></a>二. django</h3><pre><code>  1、中间件       中间件一般做认证或批量请求处理，django中的中间件，其实是一个类，在请求和结束后，django会根据自己的规则在合适的时机执行中间件中相应的方法，             如请求过来 执行process_request, view，process_response方法 2、Django、Tornado、Flask各自的优势      Django：Django无socket，django的目的是简便，快速开发，并遵循MVC设计，多个组件可以很方便的以“插件”形式服务于整个框架，                      django有许多功能强大的第三方插件。django具有很强的可扩展性。      Tornado：它是非阻塞式服务器，而且速度相当快，得力于其 非阻塞的方式和对epoll的运用，Future对象，缺点：没有session，需要自定制      Flask：是一个微型的web框架，配合SQLALchemy来使用，jinja2模板， werkzeug接口                    3、 django版本，Python版本，linux版本                  django：1.11           Python：3.5           linux：6.8  4、django的template的注释是什么样子的        单行：        多行注释：{%comment%}  5、django怎么弄并发的        nginx+uwsig为django提供高并发，nginx的并发能力超过，单台并发能力过完，在纯静态的web服务中更是突出其优越的地方，由于底层使用epoll异步IO模型进行处理。 6、tornodo的ioloop知道是什么吗？      事件循环 7、select_related和prefetch_related，Q和F        select_related：一对多使用，查询主动做连表        prefetch_related：多对多或者一对多的时候使用，不做连表，做多次查询        Q：用于构造复杂查询条件        F：更新时用于获取原来的值，专门取对象中某一列进行操作 8、什么是ORM？       ORM，即Object-Relational Mapping（对象关系映射），它的作用是在关系型数据库和业务实体对象之间做一个映射       ORM优缺点：           优点：摆脱复杂的SQL操作，适应快速开发，让数据结果变得简单，数据库迁移成本更低           缺点：性能较差，不适用于大型应用，复杂的SQL操作还需要通过SQL语句实现 9、CORS跨域资源共享        首先会发送&quot;预检&quot;opption&quot;，请求，如果&quot;预检&quot;成功，则发送真实数据。10、Django的Form主要具有以下功能？        生成HTMl标签，验证用户数据 is_vaild，HTML Form提交保留上次提交数据，初始化页面显示内容11、CBV和FBV        CBV在指定的类上面加上装饰器或在此方法上面添加装饰器 @method_decorator,并继承view12、cookie及session         cookie：是保留在客户端上面的一组键值对，cookie不是很安全，别人可以分析存放在本地的cookie         session：是保存在服务器上面的一组键值对，依赖与cookie，安全指数比cookie高 13、django的请求生命周期           请求来了先到uwsgi，把请求做一部分分装给django框架，然后经过所有的中间件，路由，视图，视图处理再返回给中间件，中间件在返回给uwsgi，在返回给用户。 14、uwsgi和wsgi    wsgi：是web服务器网关接口，是pyhton应用程序或框架和web服务器之间的一种接口，其广泛使用的是django框架。    uwsgi：是一个web服务器，它实现了wsgi协议，Nginx中HttpUwsgiModule的作用是与Uwsgi服务器进行交换</code></pre><p>  15、解释下django - debug -toolbar的使用</p><pre><code>使用django开发站点时，可以使用django-debug-toolbar来进行调试，在settings.py中添加 &apos;debug—toolbar.midleware.Debug ToolbarMiddleware&apos;到项目的MIDDLEWARE_CLASSES内。</code></pre><p>三、Python部分<br>        1、 <strong>new</strong>.<strong>init</strong>区别，如何实现单例模式，有什么优点</p><pre><code>    __new__是一个静态方法，__init__是一个实例方法    __new__返回一个创建的实例，__init__什么都不返回    __new__返回一个cls的实例时后面的__init__才能被调用    当创建一个新实例时调用__new__，初始化一个实例时调用__init__2、深浅拷贝    浅拷贝只是增加了一个指针指向一个存在的地址，而深拷贝是增加一个指针并且开辟了新的内存，这个增加的指针指向这个新的内存，    采用浅拷贝的情况，释放内存，会释放同一内存，深拷贝就不会出现释放同一内存的错误3、HTTP/IP相关协议，分别位于哪层      http协议是超文本传输协议，http协议是基于TCP/IP通信协议来传递数据      http协议工作与c/s架构上，浏览器作为http的客户端通过URL向http服务端即web服务器发送所用请求。web服务器收到所有请求后，向客户端发送响应信息，      http特点是短连接，无状态        地址栏键输入URL，按下回车之后经历了什么？        1.浏览器向DNS服务器请求解析该URL中的域名所对应的IP地址        2.解析出IP地址后，根据IP地址和默认端口80，和服务器建立TCP连接        3.浏览器发出读取文件的http请求，该请求报文作为TCP三次握手的第三个报文的数据发送给服务器        4.服务器对浏览器请求做出响应，并把对应的html文件发送给浏览器        5.释放TCP连接        6.浏览器将该HMTL渲染并显示内容4、TCP/UDP区别       TCP协议是面向连接，保证高可靠性（数据无丢失，数据无失序，数据无错误，数据无重复达到）传输层协议       UDP：数据丢失，无秩序的传输层协议（qq基于udp协议）5、webscoket      websocket是基于http协议的，可持续化连接       轮询：浏览器每隔几秒就发送一次请求，询问服务器是否有新消息       长轮询：客户端发起连接后，如果没有消息，就一直不返回response给客户端，直到有消息返回，返回完之后，客户端再次发起连接6、RabbitMQ:      服务器端有Erlang语言来编写，支持多种客户端，只会ajax，用于分布式系统中存储转发消息，在易用性、扩展性、高可用性的方面不俗。      connection是RabbitMQ的socket连接，它封装了socket部分相关协议逻辑      connectionFactroy为connection的制造工厂      channel是我们与RabbitMQ打交道的最重要的一个接口，大部分的业务操作是在chaanel这个接口中完成，包括定义Queue、定义Exchange、       绑定Queue与Exchange,发布消息等7、装饰器     调用装饰器其实是一个闭包函数，为其他函数添加附加功能，不修改被修改的源代码和不修改被修饰的方式，装饰器的返回值也是一个函数对象。     比如：插入日志、性能测试、事物处理、缓存、权限验证等，有了装饰器，就可以抽离出大量与函数功能本身无关的雷同代码并继续重用。8、闭包   1.必须有一个内嵌函数   2.内嵌函数必须引用外部函数的变量（该函数包含对外作用域而不是全局作用域名字的引用）   3.外部函数的返回值必须是内嵌函数9、迭代器与生成器     迭代可迭代对象对应_iter_（方法）和迭代器对应_next_（方法）的一个过程     生成器：包括含有yield这个关键字，生成器也是迭代器，调动next把函数变成迭代器。10、classmethod，staticmethod，property         类方法：将类的函数转换成类方法，函数上装饰@classmethod会将函数的自动传值参数改成cls         静态方法：此方法相当于给类扩展一个功能，将类内的函数实例化，给类或对象使用，此时类内的函数就是普通函数，不管是类还是实例化的对象都可以使用         实例化：类的实例化就会产生一个实例（对象），可以理解为类（）把虚拟的东西实例化，得到具体存在的值11、常用的状态码                   200--服务器成功返回网页        204--请求收到,但返回信息为空        304--客户端已经执行了GET,但文件未变化        400--错误请求，如语法错误        403--无权限访问        404--请求的页面不存在        500--服务器产生内部错误12、多进程，多线程，协程，GIL        GIL:全局解释器锁，是锁在cpython解释器上，导致同一时刻，同一进程只能有一个线程被执行        多进程：多进程模块multiprocessing来实现，cpu密集型，IO计算型可以用多进程        多线程：多线程模块threading来实现，IO密集型，多线程可以提高效率        协程：依赖于geenlet，对于多线程应用。cpu通过切片的方式来切换线程间的执行，遇到IO操作自动切换，线程切换时需要耗时，                                 而协成好处没有切换的消耗，没有锁定概念。        进程：是资源管理单位，进行是相互独立的，实现并发和并发        线程：是最小的执行单位，线程的出现为了降低上下文切换的消耗，提供系统的并发性13、IO多路复用/异步非阻塞         IO多路复用：通过一种机制，可以监听多个描述符 select/poll/epoll         select：连接数受限，查找配对速度慢，数据由内核拷贝到用户态         poll：改善了连接数，但是还是查找配对速度慢，数据由内核拷贝到用户态         epoll：epoll是linux下多路复用IO接口，是select/poll的增强版，它能显著提高程序在大量并发连接中只有少量活跃的情况下的系统CPU利用率        异步非阻塞：异步体现在回调上，回调就是有消息返回时告知一声儿进程进行处理。非阻塞就是不等待，不需要进程等待下去，                              继续执行其他操作，不管其他进程的状态。14、PEP8规范，规范的好处是什么？        1.缩进：4个空实现缩进，尽量不使用Tab        2.行：没行最大长度不超过79，换行可以使用反斜杠        3.命名规范：        4.注释规范：15、range-and-xrange       都在循环时使用，xrange内存性能更好，xrange用法与range完全相同，range一个生成list对象，xrange是生成器16、with上下文机制原理         _enter_和_exit_，上下文管理协议，即with语句，为了让一个对象兼容with语句，必须在这个对象类中声明_enter_和_exit_方法，         使用with语句的目的就是把代码块放入with中执行，with结束后，自动完成清理工作，无须收到干预17、经典类、新式类        经典类遵循：深度优先，python2中        新式类遵循：广度优先，Python3中 18、有没有一个工具可以帮助查找Python的bug和进行静态的代码分析？         PyChecker是一个Python代码的静态分析工具，它可以帮助查找Python代码的bug，会对代码的复杂度和格式提出警告，                Pylint是另外一个工具可以进行codingstandard检查    19、 Python是如何进行内存管理的           1.对象引用计数：                引用计数增加的情况：                     来保持追踪内存中的对象，所有对象都用引用计数，一个对象分配一个新名称                     将其放入一个容器中（列表，字典，元祖）                 引用计数减少的情况：                      使用del语句对对象别名显示的销毁                      引用超出作用域或被重新赋值                      sys.getrefcount()函数可以获得对象的当前引用计数             2.标记-清除机制             3.分代技术  20、什么是python？使用python有什么好处？          python是一种编程语言，它有对象、模块、线程、异常处理和自动内存管理。它简洁，简单、方便、容易扩展、有许多自带的数据结果，而且它开源  21、什么是pickling和unpickling？         Pickle模块读入任何python对象，将它们转换成字符串，然后使用dump函数将其转储到一个文件中——这个过程叫做pickling         反之从存储的字符串文件中提取原始python对象的过程，叫做unpickling  22、python是如何被解释的？         Python是一种解释性语言，它的源代码可以直接运行，Python解释器会将源代码转换成中间语言，之后再翻译成机器码再执行  23、数组和元祖之间的区别是什么？         数组和元祖之间的区别：数组内容可以被修改，而元祖内容是只读的，不可被修改的，另外元祖可以被哈希，比如作为字典的key  24、参数按值传递和引用传递是怎么实现的？         python中的一切都是类，所有的变量都是一个对象的引用。引用的值是由函数确定的，因此无法被改变，但是如果一个对象是可以被修改的，你可以改动对象  25、Python都有哪些自带的数据结构？         Python自带的数据结构分为可变和不可变的：可变的有：数组、集合、字典，不可变的是：字符串、元祖、整数  26、什么是python的命名空间？         在python中，所有的名字都存在于一个空间中，它们在改空间中存在和被操作——这就是命名空间，它就好像一个盒子，在每个变量名字都对应装着一个对象，                  当查询变量的时候，会从该盒子里面寻找相应的对象  27、python中的unittest是什么？         在python中，unittest是python中的单元测试框架，它拥有支持共享搭建、自动测试、在测试中暂停代码、将不同测试迭代成一组  28、*args与**kwargs         *args代表位置参数，它会接收任意多个参数并把这些参数作为元祖传递给函数。**kwargs代表的关键字参数，返回的是字典，位置参数一定要放在关键字前面  29、在Python中什么是slicing？         slicing是一种在有序的对象类型中（数组、元祖、字符串）节选某一段的语法  30、中的docstring是什么？        Python中文档字符串被称为docstring，它在Python中的作用是为函数、模块和类注释生成文档  31、os与sys区别：          os是模块负责程序与操作系统的交互，提供了访问操作系统底层的接口          sys模块是负责程序与python解释器的交互，提供了一系列的函数和变量，用于操控Python时运行的环境  32、实现一个单例模式                    _new_（）在 _init_（）之前被调用，用于生成实例对象。利用这个方法和类的属性的特点可以实现设计模式的单例模式。           单例模式是指创建唯一对象，单例模式设计的类只能实例，实例化1个对象           class Singleton(object):                __instance=None                def __init__(self):                    pass                def __new__(cls, *args, **kwargs):                    if Singleton.__instance is None:                        Singleton.__instance=object.__new__(cls,*args,**kwargs)                    return Singleton.__instance</code></pre>]]></content>
    
    <summary type="html">
    
      Python面试题一
    
    </summary>
    
    
      <category term="PYTHON" scheme="https://shuke163.github.io/categories/PYTHON/"/>
    
    
      <category term="PYTHON" scheme="https://shuke163.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>python 315道面试题</title>
    <link href="https://shuke163.github.io/2020/04/20/python-315%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>https://shuke163.github.io/2020/04/20/python-315%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/</id>
    <published>2020-04-20T11:51:07.000Z</published>
    <updated>2020-04-20T11:55:36.301Z</updated>
    
    <content type="html"><![CDATA[<h2 id="python面试题"><a href="#python面试题" class="headerlink" title="python面试题"></a>python面试题</h2><h3 id="第一部分-基础篇-80题"><a href="#第一部分-基础篇-80题" class="headerlink" title="第一部分(基础篇)(80题)"></a>第一部分(基础篇)(80题)</h3><p>为什么学习Python？</p><p>通过什么途径学习的Python？</p><p>Python和Java、PHP、C、C#、C++等其他语言的对比？</p><p>简述解释型和编译型编程语言？</p><p>Python解释器种类以及特点？</p><p>位和字节的关系？</p><p>b、B、KB、MB、GB 的关系？</p><p>请至少列举5个 PEP8 规范（越多越好）。</p><p>通过代码实现如下转换：<br>二进制转换成十进制：v = “0b1111011” <br>十进制转换成二进制：v = 18 <br>八进制转换成十进制：v = “011” <br>十进制转换成八进制：v = 30 <br>十六进制转换成十进制：v = “0x12” <br>十进制转换成十六进制：v = 87</p><p>请编写一个函数实现将IP地址转换成一个整数。</p><p>如 10.3.9.12 转换规则为：<br>        10            00001010<br>          3            00000011 <br>         9            00001001<br>         12            00001100 <br>再将以上二进制拼接起来计算十进制结果：00001010 00000011 00001001 00001100 = ？<br>python递归的最大层数？</p><p>求结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">    v1 &#x3D; 1 or 3 </span><br><span class="line">    v2 &#x3D; 1 and 3 </span><br><span class="line">    v3 &#x3D; 0 and 2 and 1</span><br><span class="line">     v4 &#x3D; 0 and 2 or 1</span><br><span class="line">     v5 &#x3D; 0 and 2 or 1 or 4</span><br><span class="line">     v6 &#x3D; 0 or Flase and 1</span><br><span class="line">&#96;&#96;&#96;   </span><br><span class="line">ascii、unicode、utf-8、gbk 区别？</span><br><span class="line"></span><br><span class="line">字节码和机器码的区别？</span><br><span class="line"></span><br><span class="line">三元运算规则以及应用场景？</span><br><span class="line"></span><br><span class="line">列举 Python2和Python3的区别？</span><br><span class="line"></span><br><span class="line">用一行代码实现数值交换：</span><br><span class="line">       a &#x3D; 1</span><br><span class="line">       b &#x3D; 2</span><br><span class="line"></span><br><span class="line">Python3和Python2中 int 和 long的区别？</span><br><span class="line"></span><br><span class="line">xrange和range的区别？</span><br><span class="line"></span><br><span class="line">文件操作时：xreadlines和readlines的区别？</span><br><span class="line"></span><br><span class="line">列举布尔值为False的常见值？</span><br><span class="line"></span><br><span class="line">字符串、列表、元组、字典每个常用的5个方法？</span><br><span class="line"></span><br><span class="line">lambda表达式格式以及应用场景？</span><br><span class="line"></span><br><span class="line">pass的作用？</span><br><span class="line"></span><br><span class="line">*arg和**kwarg作用</span><br><span class="line"></span><br><span class="line">is和&#x3D;&#x3D;的区别</span><br><span class="line"></span><br><span class="line">简述Python的深浅拷贝以及应用场景？</span><br><span class="line"></span><br><span class="line">Python垃圾回收机制？</span><br><span class="line"></span><br><span class="line">Python的可变类型和不可变类型？</span><br><span class="line"></span><br><span class="line">求结果：</span><br><span class="line">    v &#x3D; dict.fromkeys([&#39;k1&#39;,&#39;k2&#39;],[])  </span><br><span class="line">   v[‘k1’].append(666)</span><br><span class="line">    print(v) </span><br><span class="line">   v[‘k1’] &#x3D; 777</span><br><span class="line">    print(v)</span><br><span class="line">求结果：</span><br><span class="line"></span><br><span class="line">列举常见的内置函数？</span><br><span class="line"></span><br><span class="line">filter、map、reduce的作用？</span><br><span class="line"></span><br><span class="line">一行代码实现9*9乘法表</span><br><span class="line"></span><br><span class="line">如何安装第三方模块？以及用过哪些第三方模块？</span><br><span class="line"></span><br><span class="line">至少列举8个常用模块都有那些？</span><br><span class="line"></span><br><span class="line">re的match和search区别？</span><br><span class="line"></span><br><span class="line">什么是正则的贪婪匹配？</span><br><span class="line"></span><br><span class="line">求结果：  a. [ i % 2 for i in range(10) ]  b. ( i % 2 for i in range(10) )</span><br><span class="line"></span><br><span class="line">求结果：  a. 1 or 2  b. 1 and 2  c. 1 &lt; (2&#x3D;&#x3D;2)  d. 1 &lt; 2 &#x3D;&#x3D; 2</span><br><span class="line"></span><br><span class="line">def func(a,b&#x3D;[]) 这种写法有什么坑？</span><br><span class="line"></span><br><span class="line">如何实现 “1,2,3” 变成 [‘1’,’2’,’3’] ?</span><br><span class="line"></span><br><span class="line">如何实现[‘1’,’2’,’3’]变成[1,2,3] ?</span><br><span class="line">比较： a &#x3D; [1,2,3] 和 b &#x3D; [(1),(2),(3) ] 以及 b &#x3D; [(1,),(2,),(3,) ] 的区别？</span><br><span class="line"></span><br><span class="line">如何用一行代码生成[1,4,9,16,25,36,49,64,81,100] ?</span><br><span class="line"></span><br><span class="line">一行代码实现删除列表中重复的值 ?</span><br><span class="line"></span><br><span class="line">如何在函数中设置一个全局变量 ?</span><br><span class="line"></span><br><span class="line">logging模块的作用？以及应用场景？</span><br><span class="line"></span><br><span class="line">请用代码简答实现stack 。</span><br><span class="line"></span><br><span class="line">常用字符串格式化哪几种？</span><br><span class="line"></span><br><span class="line">简述 生成器、迭代器、可迭代对象 以及应用场景？</span><br><span class="line"></span><br><span class="line">用Python实现一个二分查找的函数。</span><br><span class="line"></span><br><span class="line">谈谈你对闭包的理解？</span><br><span class="line"></span><br><span class="line">os和sys模块的作用？</span><br><span class="line"></span><br><span class="line">如何生成一个随机数？</span><br><span class="line"></span><br><span class="line">如何使用python删除一个文件？</span><br><span class="line"></span><br><span class="line">谈谈你对面向对象的理解？</span><br><span class="line"></span><br><span class="line">Python面向对象中的继承有什么特点？</span><br><span class="line"></span><br><span class="line">面向对象深度优先和广度优先是什么？</span><br><span class="line"></span><br><span class="line">面向对象中super的作用？</span><br><span class="line"></span><br><span class="line">是否使用过functools中的函数？其作用是什么？</span><br><span class="line"></span><br><span class="line">列举面向对象中带爽下划线的特殊方法，如：__new__、__init__</span><br><span class="line"></span><br><span class="line">如何判断是函数还是方法？</span><br><span class="line"></span><br><span class="line">静态方法和类方法区别？</span><br><span class="line"></span><br><span class="line">列举面向对象中的特殊成员以及应用场景</span><br><span class="line"></span><br><span class="line">1、2、3、4、5 能组成多少个互不相同且无重复的三位数</span><br><span class="line"></span><br><span class="line">什么是反射？以及应用场景？</span><br><span class="line"></span><br><span class="line">metaclass作用？以及应用场景？</span><br><span class="line"></span><br><span class="line">用尽量多的方法实现单例模式。</span><br><span class="line"></span><br><span class="line">装饰器的写法以及应用场景。</span><br><span class="line"></span><br><span class="line">异常处理写法以及如何主动跑出异常（应用场景）</span><br><span class="line"></span><br><span class="line">什么是面向对象的mro</span><br><span class="line"></span><br><span class="line">isinstance作用以及应用场景？</span><br><span class="line"></span><br><span class="line">写代码并实现：</span><br></pre></td></tr></table></figure><p>Given an array of integers, return indices of the two numbers such that they add up to a specific target.You may assume that each input would<br>have exactly one solution, and you may not use the same element twice.<br>Example: <br>          Given nums = [2, 7, 11, 15], target = 9,<br> Because nums[0] + nums[1] = 2 + 7 = 9, <br>           return [0, 1]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br></pre></td><td class="code"><pre><span class="line">json序列化时，可以处理的数据类型有哪些？如何定制支持datetime类型？</span><br><span class="line"></span><br><span class="line">json序列化时，默认遇到中文会转换成unicode，如果想要保留中文怎么办？</span><br><span class="line"></span><br><span class="line">什么是断言？应用场景？</span><br><span class="line"></span><br><span class="line">有用过with statement吗？它的好处是什么？</span><br><span class="line"></span><br><span class="line">使用代码实现查看列举目录下的所有文件。</span><br><span class="line"></span><br><span class="line">简述 yield和yield from关键字。</span><br><span class="line"></span><br><span class="line">### 第二部分(网络编程和并发)(34题)</span><br><span class="line">简述 OSI 七层协议。</span><br><span class="line"></span><br><span class="line">什么是C&#x2F;S和B&#x2F;S架构？</span><br><span class="line"></span><br><span class="line">简述 三次握手、四次挥手的流程。</span><br><span class="line"></span><br><span class="line">什么是arp协议？</span><br><span class="line"></span><br><span class="line">TCP和UDP的区别？</span><br><span class="line"></span><br><span class="line">什么是局域网和广域网？</span><br><span class="line"></span><br><span class="line">为何基于tcp协议的通信比基于udp协议的通信更可靠？</span><br><span class="line"></span><br><span class="line">什么是socket？简述基于tcp协议的套接字通信流程。</span><br><span class="line"></span><br><span class="line">什么是粘包？ socket 中造成粘包的原因是什么？ 哪些情况会发生粘包现象？</span><br><span class="line"></span><br><span class="line">IO多路复用的作用？</span><br><span class="line"></span><br><span class="line">什么是防火墙以及作用？</span><br><span class="line"></span><br><span class="line">select、poll、epoll 模型的区别？</span><br><span class="line"></span><br><span class="line">简述 进程、线程、协程的区别 以及应用场景？</span><br><span class="line"></span><br><span class="line">GIL锁是什么鬼？</span><br><span class="line"></span><br><span class="line">Python中如何使用线程池和进程池？</span><br><span class="line"></span><br><span class="line">threading.local的作用？</span><br><span class="line"></span><br><span class="line">进程之间如何进行通信？</span><br><span class="line"></span><br><span class="line">什么是并发和并行？</span><br><span class="line"></span><br><span class="line">进程锁和线程锁的作用？</span><br><span class="line"></span><br><span class="line">解释什么是异步非阻塞？</span><br><span class="line"></span><br><span class="line">路由器和交换机的区别？</span><br><span class="line"></span><br><span class="line">什么是域名解析？</span><br><span class="line"></span><br><span class="line">如何修改本地hosts文件？</span><br><span class="line"></span><br><span class="line">生产者消费者模型应用场景及优势？</span><br><span class="line"></span><br><span class="line">什么是cdn？</span><br><span class="line"></span><br><span class="line">LVS是什么及作用？</span><br><span class="line"></span><br><span class="line">Nginx是什么及作用？</span><br><span class="line"></span><br><span class="line">keepalived是什么及作用?</span><br><span class="line"></span><br><span class="line">haproxy是什么以及作用？</span><br><span class="line"></span><br><span class="line">什么是负载均衡？</span><br><span class="line"></span><br><span class="line">什么是rpc及应用场景？</span><br><span class="line"></span><br><span class="line">简述 asynio模块的作用和应用场景。</span><br><span class="line"></span><br><span class="line">简述 gevent模块的作用和应用场景。</span><br><span class="line"></span><br><span class="line">twisted框架的使用和应用？</span><br><span class="line"></span><br><span class="line">### 第三部分(数据库和缓存)(46题)</span><br><span class="line"></span><br><span class="line">列举常见的关系型数据库和非关系型都有那些？</span><br><span class="line"></span><br><span class="line">MySQL常见数据库引擎及比较？</span><br><span class="line"></span><br><span class="line">简述数据三大范式？</span><br><span class="line"></span><br><span class="line">什么是事务？MySQL如何支持事务？</span><br><span class="line"></span><br><span class="line">简述数据库设计中一对多和多对多的应用场景？</span><br><span class="line"></span><br><span class="line">如何基于数据库实现商城商品计数器？</span><br><span class="line"></span><br><span class="line">常见SQL（必备）</span><br><span class="line">详见武沛齐博客：https:&#x2F;&#x2F;www.cnblogs.com&#x2F;wupeiqi&#x2F;articles&#x2F;5729934.html</span><br><span class="line"></span><br><span class="line">简述触发器、函数、视图、存储过程？</span><br><span class="line"></span><br><span class="line">MySQL索引种类</span><br><span class="line"></span><br><span class="line">索引在什么情况下遵循最左前缀的规则？</span><br><span class="line"></span><br><span class="line">主键和外键的区别？</span><br><span class="line"></span><br><span class="line">MySQL常见的函数？</span><br><span class="line"></span><br><span class="line">列举 创建索引但是无法命中索引的8种情况。</span><br><span class="line"></span><br><span class="line">如何开启慢日志查询？</span><br><span class="line"></span><br><span class="line">数据库导入导出命令（结构+数据）？</span><br><span class="line"></span><br><span class="line">数据库优化方案？</span><br><span class="line"></span><br><span class="line">char和varchar的区别？</span><br><span class="line"></span><br><span class="line">简述MySQL的执行计划？</span><br><span class="line"></span><br><span class="line">在对name做了唯一索引前提下，简述以下区别：  </span><br><span class="line">        select * from tb where name &#x3D; ‘Oldboy-Wupeiqi’   </span><br><span class="line">        select * from tb where name &#x3D; ‘Oldboy-Wupeiqi’ limit 1</span><br><span class="line"></span><br><span class="line">1000w条数据，使用limit offset 分页时，为什么越往后翻越慢？如何解决？</span><br><span class="line"></span><br><span class="line">什么是索引合并？</span><br><span class="line"></span><br><span class="line">什么是覆盖索引？</span><br><span class="line"></span><br><span class="line">简述数据库读写分离？</span><br><span class="line"></span><br><span class="line">简述数据库分库分表？（水平、垂直）</span><br><span class="line"></span><br><span class="line">redis和memcached比较？</span><br><span class="line"></span><br><span class="line">redis中数据库默认是多少个db 及作用？</span><br><span class="line"></span><br><span class="line">python操作redis的模块？</span><br><span class="line"></span><br><span class="line">如果redis中的某个列表中的数据量非常大，如果实现循环显示每一个值？</span><br><span class="line"></span><br><span class="line">redis如何实现主从复制？以及数据同步机制？</span><br><span class="line"></span><br><span class="line">redis中的sentinel的作用？</span><br><span class="line"></span><br><span class="line">如何实现redis集群？</span><br><span class="line"></span><br><span class="line">redis中默认有多少个哈希槽？</span><br><span class="line"></span><br><span class="line">简述redis的有哪几种持久化策略及比较？</span><br><span class="line"></span><br><span class="line">列举redis支持的过期策略。</span><br><span class="line"></span><br><span class="line">MySQL 里有 2000w 数据，redis 中只存 20w 的数据，如何保证 redis 中都是热点数据？ </span><br><span class="line"></span><br><span class="line">写代码，基于redis的列表实现 先进先出、后进先出队列、优先级队列。</span><br><span class="line"></span><br><span class="line">如何基于redis实现消息队列？</span><br><span class="line"></span><br><span class="line">如何基于redis实现发布和订阅？以及发布订阅和消息队列的区别？</span><br><span class="line"></span><br><span class="line">什么是codis及作用？</span><br><span class="line"></span><br><span class="line">什么是twemproxy及作用？</span><br><span class="line"></span><br><span class="line">写代码实现redis事务操作。</span><br><span class="line"></span><br><span class="line">redis中的watch的命令的作用？</span><br><span class="line"></span><br><span class="line">基于redis如何实现商城商品数量计数器？</span><br><span class="line"></span><br><span class="line">简述redis分布式锁和redlock的实现机制。</span><br><span class="line"></span><br><span class="line">什么是一致性哈希？Python中是否有相应模块？</span><br><span class="line"></span><br><span class="line">如何高效的找到redis中所有以oldboy开头的key？</span><br><span class="line"></span><br><span class="line">### 第四部分(前端&#x2F;框架&#x2F;其他)(155题)</span><br><span class="line"></span><br><span class="line">谈谈你对http协议的认识。</span><br><span class="line"></span><br><span class="line">谈谈你对websocket协议的认识。</span><br><span class="line"></span><br><span class="line">什么是magic string ？</span><br><span class="line"></span><br><span class="line">如何创建响应式布局？</span><br><span class="line"></span><br><span class="line">你曾经使用过哪些前端框架？</span><br><span class="line"></span><br><span class="line">什么是ajax请求？并使用jQuery和XMLHttpRequest对象实现一个ajax请求。</span><br><span class="line"></span><br><span class="line">如何在前端实现轮训？</span><br><span class="line"></span><br><span class="line">如何在前端实现长轮训？</span><br><span class="line"></span><br><span class="line">vuex的作用？</span><br><span class="line"></span><br><span class="line">vue中的路由的拦截器的作用？</span><br><span class="line"></span><br><span class="line">axios的作用？</span><br><span class="line"></span><br><span class="line">列举vue的常见指令。</span><br><span class="line"></span><br><span class="line">简述jsonp及实现原理？</span><br><span class="line"></span><br><span class="line">是什么cors ？</span><br><span class="line"></span><br><span class="line">列举Http请求中常见的请求方式？</span><br><span class="line"></span><br><span class="line">列举Http请求中的状态码？</span><br><span class="line"></span><br><span class="line">列举Http请求中常见的请求头？</span><br><span class="line"></span><br><span class="line">看图写结果：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">看图写结果：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">看图写结果：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">看图写结果：</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">看图写结果：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">看图写结果：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">django、flask、tornado框架的比较？</span><br><span class="line"></span><br><span class="line">什么是wsgi？</span><br><span class="line"></span><br><span class="line">django请求的生命周期？</span><br><span class="line"></span><br><span class="line">列举django的内置组件？</span><br><span class="line"></span><br><span class="line">列举django中间件的5个方法？以及django中间件的应用场景？</span><br><span class="line"></span><br><span class="line">简述什么是FBV和CBV？</span><br><span class="line"></span><br><span class="line">django的request对象是在什么时候创建的？</span><br><span class="line"></span><br><span class="line">如何给CBV的程序添加装饰器？</span><br><span class="line"></span><br><span class="line">列举django orm 中所有的方法（QuerySet对象的所有方法）</span><br><span class="line"></span><br><span class="line">only和defer的区别？</span><br><span class="line"></span><br><span class="line">select_related和prefetch_related的区别？</span><br><span class="line"></span><br><span class="line">filter和exclude的区别？</span><br><span class="line"></span><br><span class="line">列举django orm中三种能写sql语句的方法。</span><br><span class="line"></span><br><span class="line">django orm 中如何设置读写分离？</span><br><span class="line"></span><br><span class="line">F和Q的作用?</span><br><span class="line"></span><br><span class="line">values和values_list的区别？</span><br><span class="line"></span><br><span class="line">如何使用django orm批量创建数据？</span><br><span class="line"></span><br><span class="line">django的Form和ModeForm的作用？</span><br><span class="line"></span><br><span class="line">django的Form组件中，如果字段中包含choices参数，请使用两种方式实现数据源实时更新。</span><br><span class="line"></span><br><span class="line">django的Model中的ForeignKey字段中的on_delete参数有什么作用？</span><br><span class="line"></span><br><span class="line">django中csrf的实现机制？</span><br><span class="line"></span><br><span class="line">django如何实现websocket？</span><br><span class="line"></span><br><span class="line">基于django使用ajax发送post请求时，都可以使用哪种方法携带csrf token？</span><br><span class="line"></span><br><span class="line">django中如何实现orm表中添加数据时创建一条日志记录。</span><br><span class="line"></span><br><span class="line">django缓存如何设置？</span><br><span class="line"></span><br><span class="line">django的缓存能使用redis吗？如果可以的话，如何配置？</span><br><span class="line"></span><br><span class="line">django路由系统中name的作用？</span><br><span class="line"></span><br><span class="line">django的模板中filter和simple_tag的区别？</span><br><span class="line"></span><br><span class="line">django-debug-toolbar的作用？</span><br><span class="line"></span><br><span class="line">django中如何实现单元测试？</span><br><span class="line"></span><br><span class="line">解释orm中 db first 和 code first的含义？</span><br><span class="line"></span><br><span class="line">django中如何根据数据库表生成model中的类？</span><br><span class="line"></span><br><span class="line">使用orm和原生sql的优缺点？</span><br><span class="line"></span><br><span class="line">简述MVC和MTV</span><br><span class="line"></span><br><span class="line">django的contenttype组件的作用？</span><br><span class="line"></span><br><span class="line">谈谈你对restfull 规范的认识？</span><br><span class="line"></span><br><span class="line">接口的幂等性是什么意思？</span><br><span class="line"></span><br><span class="line">什么是RPC？</span><br><span class="line"></span><br><span class="line">Http和Https的区别？</span><br><span class="line"></span><br><span class="line">为什么要使用django rest framework框架？</span><br><span class="line"></span><br><span class="line">django rest framework框架中都有那些组件？</span><br><span class="line"></span><br><span class="line">django rest framework框架中的视图都可以继承哪些类？</span><br><span class="line"></span><br><span class="line">简述 django rest framework框架的认证流程。</span><br><span class="line"></span><br><span class="line">django rest framework如何实现的用户访问频率控制？</span><br><span class="line"></span><br><span class="line">Flask框架的优势？</span><br><span class="line"></span><br><span class="line">Flask框架依赖组件？</span><br><span class="line"></span><br><span class="line">Flask蓝图的作用？</span><br><span class="line"></span><br><span class="line">列举使用过的Flask第三方组件？</span><br><span class="line"></span><br><span class="line">简述Flask上下文管理流程?</span><br><span class="line"></span><br><span class="line">Flask中的g的作用？</span><br><span class="line"></span><br><span class="line">Flask中上下文管理主要涉及到了那些相关的类？并描述类主要作用？</span><br><span class="line"></span><br><span class="line">为什么要Flask把Local对象中的的值stack 维护成一个列表？</span><br><span class="line"></span><br><span class="line">Flask中多app应用是怎么完成？</span><br><span class="line"></span><br><span class="line">在Flask中实现WebSocket需要什么组件？</span><br><span class="line"></span><br><span class="line">wtforms组件的作用？</span><br><span class="line"></span><br><span class="line">Flask框架默认session处理机制？</span><br><span class="line"></span><br><span class="line">解释Flask框架中的Local对象和threading.local对象的区别？</span><br><span class="line"></span><br><span class="line">Flask中 blinker 是什么？</span><br><span class="line"></span><br><span class="line">SQLAlchemy中的 session和scoped_session 的区别？</span><br><span class="line"></span><br><span class="line">SQLAlchemy如何执行原生SQL？</span><br><span class="line"></span><br><span class="line">ORM的实现原理？</span><br><span class="line"></span><br><span class="line">DBUtils模块的作用？</span><br><span class="line"></span><br><span class="line">以下SQLAlchemy的字段是否正确？如果不正确请更正：</span><br></pre></td></tr></table></figure><p>from datetime import datetime<br> from sqlalchemy.ext.declarative<br>import declarative_base<br> from sqlalchemy import Column, Integer, String, DateTime<br>  <br>Base = declarative_base()  <br>class UserInfo(Base): <br>    <strong>tablename</strong> = ‘userinfo’ <br>    id = Column(Integer, primary_key=True, autoincrement=True) <br>    name = Column(String(64), unique=True) <br>    ctime = Column(DateTime, default=datetime.now())</p><p>```<br>SQLAchemy中如何为表设置引擎和字符编码？</p><p>SQLAchemy中如何设置联合唯一索引？</p><p>简述Tornado框架的特点。</p><p>简述Tornado框架中Future对象的作用？</p><p>Tornado框架中如何编写WebSocket程序？</p><p>Tornado中静态文件是如何处理的？ 如：</p><p>Tornado操作MySQL使用的模块？</p><p>Tornado操作redis使用的模块？</p><p>简述Tornado框架的适用场景？</p><p>git常见命令作用：</p><p>简述以下git中stash命令作用以及相关其他命令。</p><p>git 中 merge 和 rebase命令 的区别。</p><p>公司如何基于git做的协同开发？</p><p>如何基于git实现代码review？</p><p>git如何实现v1.0 、v2.0 等版本的管理？</p><p>什么是gitlab？</p><p>github和gitlab的区别？</p><p>如何为github上牛逼的开源项目贡献代码？</p><p>git中 .gitignore文件的作用?</p><p>什么是敏捷开发？</p><p>简述 jenkins 工具的作用?</p><p>公司如何实现代码发布？</p><p>简述 RabbitMQ、Kafka、ZeroMQ的区别？</p><p>RabbitMQ如何在消费者获取任务后未处理完前就挂掉时，保证数据不丢失？</p><p>RabbitMQ如何对消息做持久化？</p><p>RabbitMQ如何控制消息被消费的顺序？</p><p>以下RabbitMQ的exchange type分别代表什么意思？如：fanout、direct、topic。</p><p>简述 celery 是什么以及应用场景？</p><p>简述celery运行机制。</p><p>celery如何实现定时任务？</p><p>简述 celery多任务结构目录？</p><p>celery中装饰器 @app.task 和 @shared_task的区别？</p><p>简述 requests模块的作用及基本使用？</p><p>简述 beautifulsoup模块的作用及基本使用？</p><p>简述 seleninu模块的作用及基本使用?</p><p>scrapy框架中各组件的工作流程？</p><p>在scrapy框架中如何设置代理（两种方法）？</p><p>scrapy框架中如何实现大文件的下载？</p><p>scrapy中如何实现限速？</p><p>scrapy中如何实现暂定爬虫？</p><p>scrapy中如何进行自定制命令？</p><p>scrapy中如何实现的记录爬虫的深度？</p><p>scrapy中的pipelines工作原理？</p><p>scrapy的pipelines如何丢弃一个item对象？</p><p>简述scrapy中爬虫中间件和下载中间件的作用？</p><p>scrapy-redis组件的作用？</p><p>scrapy-redis组件中如何实现的任务的去重？</p><p>scrapy-redis的调度器如何实现任务的深度优先和广度优先？</p><p>简述 vitualenv 及应用场景?</p><p>简述 pipreqs 及应用场景？</p><p>在Python中使用过什么代码检查工具？</p><p>简述 saltstack、ansible、fabric、puppet工具的作用？</p><p>B Tree和B+ Tree的区别？</p><p>请列举常见排序并通过代码实现任意三种。</p><p>请列举常见查找并通过代码实现任意三种。</p><p>请列举你熟悉的设计模式？</p><p>有没有刷过leetcode？</p><p>列举熟悉的的Linux命令。</p><p>公司线上服务器是什么系统？</p><p>解释 PV、UV 的含义？</p><p>解释 QPS的含义？</p><p>uwsgi和wsgi的区别？</p><p>supervisor的作用？</p><p>什么是反向代理？</p><p>简述SSH的整个过程。</p><p>有问题都去那些找解决方案？</p><p>是否有关注什么技术类的公众号？</p><p>最近在研究什么新技术？</p><p>是否了解过领域驱动模型？</p><p>统计：80 + 34 + 46 + 155 = 315题</p><p>暂时就先这样吧。我想能看到这里的同学，无外乎两种人：来拷贝题的人 和 来拷贝题的人。</p><p>但，在拷贝走的时候，你要想清楚一件事，把题拷走之后有个蛋用，搞明白答案对你来说才是最重要的。</p><p>好了，就酱紫。</p><p>老铁，这要是都不赞，说不过去吧！！！</p><p><a href="https://www.cnblogs.com/wupeiqi/p/9078770.html" target="_blank" rel="noopener">原文链接</a>  </p>]]></content>
    
    <summary type="html">
    
      python 315道面试题
    
    </summary>
    
    
      <category term="PYTHON" scheme="https://shuke163.github.io/categories/PYTHON/"/>
    
    
      <category term="PYTHON" scheme="https://shuke163.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins-python-api</title>
    <link href="https://shuke163.github.io/2020/04/20/Jenkins-python-api/"/>
    <id>https://shuke163.github.io/2020/04/20/Jenkins-python-api/</id>
    <published>2020-04-20T11:49:56.000Z</published>
    <updated>2020-04-20T11:50:27.192Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Jenkins-python-api"><a href="#Jenkins-python-api" class="headerlink" title="Jenkins-python-api"></a>Jenkins-python-api</h1><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Jenkins作为最流行的自动化流程的核心工具，我们使用它自带的web-ui完全可以满足日常的构建及发布工作，但是如果需要和其他系统做集成就必须二次开发或者通过API方式进行交互了。</p><h2 id="Jenkins介绍及相关"><a href="#Jenkins介绍及相关" class="headerlink" title="Jenkins介绍及相关"></a>Jenkins介绍及相关</h2><p><a href="https://www.w3cschool.cn/jenkins/jenkins-5h3228n2.html" target="_blank" rel="noopener">参考资料</a></p><h2 id="python版本的API调用"><a href="#python版本的API调用" class="headerlink" title="python版本的API调用"></a>python版本的API调用</h2><h3 id="目前python版本的API主要有两个第三方包"><a href="#目前python版本的API主要有两个第三方包" class="headerlink" title="目前python版本的API主要有两个第三方包"></a>目前python版本的API主要有两个第三方包</h3><ol><li>JenkinsApi</li></ol><ul><li><a href="https://github.com/pycontribs/jenkinsapi" target="_blank" rel="noopener">github</a></li><li><a href="https://jenkinsapi.readthedocs.io/en/latest/api.html" target="_blank" rel="noopener">文档</a></li></ul><ol start="2"><li>Python Jenkins</li></ol><ul><li><a href="https://github.com/openstack/python-jenkins" target="_blank" rel="noopener">github</a></li><li><a href="http://python-jenkins.readthedocs.io/en/latest/api.html" target="_blank" rel="noopener">文档</a></li></ul><h2 id="API示例"><a href="#API示例" class="headerlink" title="API示例"></a>API示例</h2><h3 id="JenkinsAPi模块"><a href="#JenkinsAPi模块" class="headerlink" title="JenkinsAPi模块"></a>JenkinsAPi模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># __author__ &#x3D; &quot;shuke&quot;</span><br><span class="line"># Date: 2018&#x2F;1&#x2F;17</span><br><span class="line"></span><br><span class="line">from jenkinsapi.jenkins import Jenkins</span><br><span class="line">from jenkinsapi.build import Build</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_server_instance():</span><br><span class="line">    jenkins_url &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;&#39;</span><br><span class="line">    server &#x3D; Jenkins(jenkins_url, username&#x3D;&#39;admin&#39;, password&#x3D;&#39;admin123&#39;)</span><br><span class="line">    return server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server &#x3D; get_server_instance()</span><br><span class="line"></span><br><span class="line"># 1. 版本</span><br><span class="line">print(server.version)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">2.101</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 2. 所有的job列表</span><br><span class="line">print(server.keys())</span><br><span class="line">print(server.get_jobs_list())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">[&#39;ansible-playbook&#39;, &#39;my-github&#39;]</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 3. 全局信息查看</span><br><span class="line">server.pprint()</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&#123;&#39;_class&#39;: &#39;hudson.model.Hudson&#39;,</span><br><span class="line"> &#39;jobs&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;,</span><br><span class="line">           &#39;color&#39;: &#39;blue&#39;,</span><br><span class="line">           &#39;name&#39;: &#39;ansible-playbook&#39;,</span><br><span class="line">           &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;&#39;&#125;,</span><br><span class="line">          &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;,</span><br><span class="line">           &#39;color&#39;: &#39;disabled&#39;,</span><br><span class="line">           &#39;name&#39;: &#39;my-github&#39;,</span><br><span class="line">           &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;my-github&#x2F;&#39;&#125;]&#125;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 3. 指定job的config.xml配置</span><br><span class="line">print(&quot;my-github job config:\n&quot;, server[&#39;my-github&#39;].get_config())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">my-github job config:</span><br><span class="line"> &lt;?xml version&#x3D;&#39;1.0&#39; encoding&#x3D;&#39;UTF-8&#39;?&gt;</span><br><span class="line">&lt;project&gt;</span><br><span class="line">  &lt;actions&#x2F;&gt;</span><br><span class="line">  &lt;description&gt;&lt;&#x2F;description&gt;</span><br><span class="line">  &lt;keepDependencies&gt;false&lt;&#x2F;keepDependencies&gt;</span><br><span class="line">  &lt;properties&gt;</span><br><span class="line">    &lt;com.coravy.hudson.plugins.github.GithubProjectProperty plugin&#x3D;&quot;github@1.28.1&quot;&gt;</span><br><span class="line">      &lt;projectUrl&gt;https:&#x2F;&#x2F;github.com&#x2F;shuke163&#x2F;CustAdmin.git&#x2F;&lt;&#x2F;projectUrl&gt;</span><br><span class="line">      &lt;displayName&gt;Admin&lt;&#x2F;displayName&gt;</span><br><span class="line">    &lt;&#x2F;com.coravy.hudson.plugins.github.GithubProjectProperty&gt;</span><br><span class="line">    &lt;jenkins.model.BuildDiscarderProperty&gt;</span><br><span class="line">      &lt;strategy class&#x3D;&quot;hudson.tasks.LogRotator&quot;&gt;</span><br><span class="line">        &lt;daysToKeep&gt;-1&lt;&#x2F;daysToKeep&gt;</span><br><span class="line">        &lt;numToKeep&gt;5&lt;&#x2F;numToKeep&gt;</span><br><span class="line">        &lt;artifactDaysToKeep&gt;-1&lt;&#x2F;artifactDaysToKeep&gt;</span><br><span class="line">        &lt;artifactNumToKeep&gt;-1&lt;&#x2F;artifactNumToKeep&gt;</span><br><span class="line">      &lt;&#x2F;strategy&gt;</span><br><span class="line">    &lt;&#x2F;jenkins.model.BuildDiscarderProperty&gt;</span><br><span class="line">    &lt;hudson.model.ParametersDefinitionProperty&gt;</span><br><span class="line">      &lt;parameterDefinitions&gt;</span><br><span class="line">        &lt;hudson.model.ChoiceParameterDefinition&gt;</span><br><span class="line">          &lt;name&gt;ip&lt;&#x2F;name&gt;</span><br><span class="line">          &lt;description&gt;ip&lt;&#x2F;description&gt;</span><br><span class="line">          &lt;choices class&#x3D;&quot;java.util.Arrays$ArrayList&quot;&gt;</span><br><span class="line">            &lt;a class&#x3D;&quot;string-array&quot;&gt;</span><br><span class="line">              &lt;string&gt;127.0.0.1&lt;&#x2F;string&gt;</span><br><span class="line">            &lt;&#x2F;a&gt;</span><br><span class="line">          &lt;&#x2F;choices&gt;</span><br><span class="line">        &lt;&#x2F;hudson.model.ChoiceParameterDefinition&gt;</span><br><span class="line">      &lt;&#x2F;parameterDefinitions&gt;</span><br><span class="line">    &lt;&#x2F;hudson.model.ParametersDefinitionProperty&gt;</span><br><span class="line">  &lt;&#x2F;properties&gt;</span><br><span class="line">  &lt;scm class&#x3D;&quot;hudson.scm.NullSCM&quot;&#x2F;&gt;</span><br><span class="line">  &lt;canRoam&gt;true&lt;&#x2F;canRoam&gt;</span><br><span class="line">  &lt;disabled&gt;true&lt;&#x2F;disabled&gt;</span><br><span class="line">  &lt;blockBuildWhenDownstreamBuilding&gt;false&lt;&#x2F;blockBuildWhenDownstreamBuilding&gt;</span><br><span class="line">  &lt;blockBuildWhenUpstreamBuilding&gt;false&lt;&#x2F;blockBuildWhenUpstreamBuilding&gt;</span><br><span class="line">  &lt;triggers&#x2F;&gt;</span><br><span class="line">  &lt;concurrentBuild&gt;false&lt;&#x2F;concurrentBuild&gt;</span><br><span class="line">  &lt;builders&gt;</span><br><span class="line">    &lt;hudson.tasks.Shell&gt;</span><br><span class="line">      &lt;command&gt;echo $ip&lt;&#x2F;command&gt;</span><br><span class="line">    &lt;&#x2F;hudson.tasks.Shell&gt;</span><br><span class="line">  &lt;&#x2F;builders&gt;</span><br><span class="line">  &lt;publishers&#x2F;&gt;</span><br><span class="line">  &lt;buildWrappers&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;project&gt;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 4. 得到的是一个包含所有jobs的生成器对象</span><br><span class="line">print(server.get_jobs())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">[&#39;ansible-playbook&#39;, &#39;my-github&#39;]</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 5. 所有的job描述</span><br><span class="line">for job_name, job_instance in server.get_jobs():</span><br><span class="line">    print(&#39;Job Name:%s&#39; % (job_instance.name))</span><br><span class="line">    print(&#39;Job Description:%s&#39; % (job_instance.get_description()))</span><br><span class="line">    print(&#39;Is Job running:%s&#39; % (job_instance.is_running()))</span><br><span class="line">    print(&#39;Is Job enabled:%s&#39; % (job_instance.is_enabled()))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">Job Name:ansible-playbook</span><br><span class="line">Job Description:ansible playbook</span><br><span class="line">Is Job running:False</span><br><span class="line">Is Job enabled:True</span><br><span class="line">Job Name:my-github</span><br><span class="line">Job Description:</span><br><span class="line">Is Job running:False</span><br><span class="line">Is Job enabled:True</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 6. Disable&#x2F;Enable a Jenkins Job</span><br><span class="line">job_name &#x3D; &#39;my-github&#39;</span><br><span class="line">if (server.has_job(job_name)):</span><br><span class="line">    job_instance &#x3D; server.get_job(job_name)</span><br><span class="line">    job_instance.disable()</span><br><span class="line">    print(&#39;Name:%s,Is Job Enabled ?:%s&#39; % (job_name, job_instance.is_enabled()))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">Name:my-github,Is Job Enabled ?:False</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 7. CURD Job</span><br><span class="line">server.create_job()</span><br><span class="line">server.delete_job(&#39;ansible-playbook&#39;)</span><br><span class="line">server.copy_job(&#39;my-job&#39;, &#39;new-my-job&#39;)</span><br><span class="line">server.rename_job(&#39;my-github&#39;, &#39;new-my-github&#39;)</span><br><span class="line"></span><br><span class="line"># 8. Get Plugin details</span><br><span class="line">for plugin in server.get_plugins().values():</span><br><span class="line">    print(&quot;Short Name:%s&quot; % (plugin.shortName))</span><br><span class="line">    print(&quot;Long Name:%s&quot; % (plugin.longName))</span><br><span class="line">    print(&quot;Version:%s&quot; % (plugin.version))</span><br><span class="line">    print(&quot;URL:%s&quot; % (plugin.url))</span><br><span class="line">    print(&quot;Active:%s&quot; % (plugin.active))</span><br><span class="line">    print(&quot;Enabled:%s&quot; % (plugin.enabled))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">Short Name:jsch</span><br><span class="line">Long Name:Jenkins JSch dependency plugin</span><br><span class="line">Version:0.1.54.1</span><br><span class="line">URL:http:&#x2F;&#x2F;wiki.jenkins-ci.org&#x2F;display&#x2F;JENKINS&#x2F;JSch+plugin</span><br><span class="line">Active:True</span><br><span class="line">Enabled:True</span><br><span class="line">Short Name:ws-cleanup</span><br><span class="line">Long Name:Jenkins Workspace Cleanup Plugin</span><br><span class="line">Version:0.34</span><br><span class="line">URL:http:&#x2F;&#x2F;wiki.jenkins-ci.org&#x2F;display&#x2F;JENKINS&#x2F;Workspace+Cleanup+Plugin</span><br><span class="line">Active:True</span><br><span class="line">Enabled:True</span><br><span class="line">......</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 9. 从已完成的构建中获取版本信息</span><br><span class="line">def getSCMInfroFromLatestGoodBuild(url, jobName, username&#x3D;&#39;admin&#39;, password&#x3D;&#39;admin123&#39;):</span><br><span class="line">    J &#x3D; Jenkins(url, username, password)</span><br><span class="line">    job &#x3D; J[jobName]</span><br><span class="line">    lgb &#x3D; job.get_last_good_build()</span><br><span class="line">    return lgb.get_revision()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">version &#x3D; getSCMInfroFromLatestGoodBuild(&quot;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;&quot;, &#39;ansible-playbook&#39;)</span><br><span class="line">print(version)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">21c2b6ff6c842a86969f36f75424e17ae27eae68</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 10. 其他</span><br><span class="line">print(server.__dict__)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&#123;&#39;username&#39;: &#39;admin&#39;, &#39;password&#39;: &#39;admin123&#39;, &#39;requester&#39;: &lt;jenkinsapi.utils.requester.Requester object at 0x103423710&gt;, &#39;lazy&#39;: False, &#39;jobs_container&#39;: None, &#39;_data&#39;: &#123;&#39;_class&#39;: &#39;hudson.model.Hudson&#39;, &#39;jobs&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;, &#39;name&#39;: &#39;ansible-playbook&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;&#39;, &#39;color&#39;: &#39;blue&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;, &#39;name&#39;: &#39;my-github&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;my-github&#x2F;&#39;, &#39;color&#39;: &#39;disabled&#39;&#125;]&#125;, &#39;baseurl&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#39;&#125;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line">jobs &#x3D; server.__dict__[&#39;_data&#39;][&#39;jobs&#39;]</span><br><span class="line">print(server.resolve_job_folders(jobs))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">[&#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;, &#39;name&#39;: &#39;ansible-playbook&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;&#39;, &#39;color&#39;: &#39;blue&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;, &#39;name&#39;: &#39;my-github&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;my-github&#x2F;&#39;, &#39;color&#39;: &#39;disabled&#39;&#125;]</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># baseurl</span><br><span class="line">print(server.baseurl)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># username</span><br><span class="line">print(server.username)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">admin</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># password</span><br><span class="line">print(server.password)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">admin123</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 判断job是否存在</span><br><span class="line">print(server.has_job(&#39;prod-java&#39;))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">False</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line">print(server.get_queue())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;queue</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 查看试图</span><br><span class="line">print(server.views.keys())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">[&#39;My View&#39;, &#39;all&#39;, &#39;myview&#39;]</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 删除试图</span><br><span class="line">server.delete_view_by_url(&#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;view&#x2F;testview&#x2F;&#39;)</span><br><span class="line"></span><br><span class="line"># 获取最后一次构建</span><br><span class="line">print(server[&#39;ansible-playbook&#39;].get_last_good_build())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">ansible-playbook #27</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># BUILD构建相关</span><br><span class="line"># 1. 构建(方式一)</span><br><span class="line">params &#x3D; &#123;&#39;Branch&#39;: &#39;oriin&#x2F;master&#39;, &#39;host&#39;: &#39;192.168.1.100&#39;&#125;</span><br><span class="line">ret &#x3D; server.build_job(&#39;ansible-playbook&#39;, params)</span><br><span class="line">print(ret)</span><br><span class="line"></span><br><span class="line"># 方式二</span><br><span class="line">job &#x3D; server[&#39;ansible-playbook&#39;]</span><br><span class="line">run_job &#x3D; job.invoke(build_params&#x3D;params)</span><br><span class="line">number &#x3D; run_job.__dict__[&#39;_data&#39;][&#39;executable&#39;][&#39;number&#39;]</span><br><span class="line">build_url &#x3D; run_job.__dict__[&#39;_data&#39;][&#39;executable&#39;][&#39;url&#39;]</span><br><span class="line">print(&quot;第%d次构建: %s&quot; % (number, build_url))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">第40次构建: http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;40&#x2F;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 结果查询</span><br><span class="line"># 1. 方式一</span><br><span class="line">job &#x3D; server.get_job(&#39;ansible-playbook&#39;)</span><br><span class="line">print(job.__dict__[&#39;_data&#39;][&#39;builds&#39;])</span><br><span class="line">url &#x3D; job.__dict__[&#39;_data&#39;][&#39;lastBuild&#39;][&#39;url&#39;]</span><br><span class="line">number &#x3D; job.__dict__[&#39;_data&#39;][&#39;lastBuild&#39;][&#39;number&#39;]</span><br><span class="line">obj &#x3D; Build(url, number, job)</span><br><span class="line"></span><br><span class="line"># 2. 方式二</span><br><span class="line">job &#x3D; server[&#39;ansible-playbook&#39;]</span><br><span class="line">url &#x3D; job.__dict__[&#39;_data&#39;][&#39;lastBuild&#39;][&#39;url&#39;]</span><br><span class="line">number &#x3D; job.__dict__[&#39;_data&#39;][&#39;lastBuild&#39;][&#39;number&#39;]</span><br><span class="line">obj &#x3D; Build(url, number, job)</span><br><span class="line"></span><br><span class="line"># 全局信息</span><br><span class="line">print(obj.pprint())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;,</span><br><span class="line"> &#39;actions&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.ParametersAction&#39;,</span><br><span class="line">              &#39;parameters&#39;: [&#123;&#39;_class&#39;: &#39;net.uaznia.lukanus.hudson.plugins.gitparameter.GitParameterValue&#39;,</span><br><span class="line">                              &#39;name&#39;: &#39;Branch&#39;,</span><br><span class="line">                              &#39;value&#39;: &#39;oriin&#x2F;master&#39;&#125;,</span><br><span class="line">                             &#123;&#39;_class&#39;: &#39;hudson.model.StringParameterValue&#39;,</span><br><span class="line">                              &#39;name&#39;: &#39;host&#39;,</span><br><span class="line">                              &#39;value&#39;: &#39;192.168.1.100&#39;&#125;]&#125;,</span><br><span class="line">             &#123;&#39;_class&#39;: &#39;hudson.model.CauseAction&#39;,</span><br><span class="line">              &#39;causes&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.Cause$UserIdCause&#39;,</span><br><span class="line">                          &#39;shortDescription&#39;: &#39;Started by user 管理员&#39;,</span><br><span class="line">                          &#39;userId&#39;: &#39;admin&#39;,</span><br><span class="line">                          &#39;userName&#39;: &#39;管理员&#39;&#125;]&#125;,</span><br><span class="line">             &#123;&#125;,</span><br><span class="line">             ......</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.get_result_url())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;40&#x2F;testReport&#x2F;api&#x2F;python</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.is_running())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">False</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.stop())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">True</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.is_good())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">True</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.get_number())</span><br><span class="line">print(obj.buildno)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">40</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.get_status())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">SUCCESS</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.get_revision())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">21c2b6ff6c842a86969f36f75424e17ae27eae68</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.get_revision_branch())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">[&#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;name&#39;: &#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;&#125;]</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.get_console())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">Started by user ç®¡çå</span><br><span class="line">[EnvInject] - Loading node environment variables.</span><br><span class="line">Building in workspace &#x2F;Users&#x2F;zhao&#x2F;data&#x2F;workspace&#x2F;workspace&#x2F;ansible-playbook</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git rev-parse --is-inside-work-tree # timeout&#x3D;10</span><br><span class="line">Fetching changes from the remote Git repository</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git config remote.origin.url git@git.icbc.net:ansible-roles&#x2F;zff.ansible.git # timeout&#x3D;10</span><br><span class="line">Fetching upstream changes from git@git.icbc.net:ansible-roles&#x2F;zff.ansible.git</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git --version # timeout&#x3D;10</span><br><span class="line">using GIT_SSH to set credentials deploy key</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git fetch --tags --progress git@git.icbc.net:ansible-roles&#x2F;zff.ansible.git +refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git rev-parse refs&#x2F;remotes&#x2F;origin&#x2F;master^&#123;commit&#125; # timeout&#x3D;10</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git rev-parse refs&#x2F;remotes&#x2F;origin&#x2F;origin&#x2F;master^&#123;commit&#125; # timeout&#x3D;10</span><br><span class="line">Checking out Revision 21c2b6ff6c842a86969f36f75424e17ae27eae68 (refs&#x2F;remotes&#x2F;origin&#x2F;master)</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git config core.sparsecheckout # timeout&#x3D;10</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git checkout -f 21c2b6ff6c842a86969f36f75424e17ae27eae68</span><br><span class="line">Commit message: &quot;update tomcat root mode&quot;</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git rev-list --no-walk 21c2b6ff6c842a86969f36f75424e17ae27eae68 # timeout&#x3D;10</span><br><span class="line">[ansible-playbook] $ &#x2F;bin&#x2F;sh -xe &#x2F;Users&#x2F;Shared&#x2F;Jenkins&#x2F;tmp&#x2F;jenkins280834745018509074.sh</span><br><span class="line">+ echo 192.168.1.100</span><br><span class="line">192.168.1.100</span><br><span class="line">+ echo test</span><br><span class="line">test</span><br><span class="line">+ echo http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;40&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;40&#x2F;</span><br><span class="line">+ echo 40</span><br><span class="line">40</span><br><span class="line">+ echo jenkins-ansible-playbook-40</span><br><span class="line">jenkins-ansible-playbook-40</span><br><span class="line">Recording fingerprints</span><br><span class="line">Finished: SUCCESS</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line">print(obj.get_causes())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">[&#123;&#39;_class&#39;: &#39;hudson.model.Cause$UserIdCause&#39;, &#39;shortDescription&#39;: &#39;Started by user 管理员&#39;, &#39;userId&#39;: &#39;admin&#39;, &#39;userName&#39;: &#39;管理员&#39;&#125;]</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.get_params())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&#123;&#39;Branch&#39;: &#39;oriin&#x2F;master&#39;, &#39;host&#39;: &#39;192.168.1.100&#39;&#125;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.get_env_vars())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&#123;&#39;BUILD_CAUSE&#39;: &#39;MANUALTRIGGER&#39;, &#39;BUILD_CAUSE_MANUALTRIGGER&#39;: &#39;true&#39;, &#39;BUILD_DISPLAY_NAME&#39;: &#39;#40&#39;, &#39;BUILD_ID&#39;: &#39;40&#39;, &#39;BUILD_NUMBER&#39;: &#39;40&#39;, &#39;BUILD_TAG&#39;: &#39;jenkins-ansible-playbook-40&#39;, &#39;BUILD_URL&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;40&#x2F;&#39;, &#39;Branch&#39;: &#39;oriin&#x2F;master&#39;, &#39;EXECUTOR_NUMBER&#39;: &#39;1&#39;, &#39;HUDSON_HOME&#39;: &#39;&#x2F;Users&#x2F;zhao&#x2F;data&#x2F;workspace&#39;, &#39;HUDSON_SERVER_COOKIE&#39;: &#39;5634a2d507063d61&#39;, &#39;HUDSON_URL&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;&#39;, &#39;JENKINS_HOME&#39;: &#39;&#x2F;Users&#x2F;zhao&#x2F;data&#x2F;workspace&#39;, &#39;JENKINS_SERVER_COOKIE&#39;: &#39;5634a2d507063d61&#39;, &#39;JENKINS_URL&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;&#39;, &#39;JOB_BASE_NAME&#39;: &#39;ansible-playbook&#39;, &#39;JOB_NAME&#39;: &#39;ansible-playbook&#39;, &#39;JOB_URL&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;&#39;, &#39;NODE_LABELS&#39;: &#39;master&#39;, &#39;NODE_NAME&#39;: &#39;master&#39;, &#39;ROOT_BUILD_CAUSE&#39;: &#39;MANUALTRIGGER&#39;, &#39;ROOT_BUILD_CAUSE_MANUALTRIGGER&#39;: &#39;true&#39;, &#39;RUN_CHANGES_DISPLAY_URL&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;40&#x2F;display&#x2F;redirect?page&#x3D;changes&#39;, &#39;RUN_DISPLAY_URL&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;40&#x2F;display&#x2F;redirect&#39;, &#39;TEST_ARGS&#39;: &#39;test&#39;, &#39;host&#39;: &#39;192.168.1.100&#39;&#125;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.job)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">ansible-playbook</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(obj.get_data(&#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;40&#x2F;api&#x2F;python&#x2F;?pretty&#x3D;true&#39;))</span><br><span class="line">&#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;actions&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.ParametersAction&#39;, &#39;parameters&#39;: [&#123;&#39;_class&#39;: &#39;net.uaznia.lukanus.hudson.plugins.gitparameter.GitParameterValue&#39;, &#39;name&#39;: &#39;Branch&#39;, &#39;value&#39;: &#39;oriin&#x2F;master&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.StringParameterValue&#39;, &#39;name&#39;: &#39;host&#39;, &#39;value&#39;: &#39;192.168.1.100&#39;&#125;]&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.CauseAction&#39;, &#39;causes&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.Cause$UserIdCause&#39;, &#39;shortDescription&#39;: &#39;Started by user 管理员&#39;, &#39;userId&#39;: &#39;admin&#39;, &#39;userName&#39;: &#39;管理员&#39;&#125;]&#125;, &#123;&#125;, &#123;&#39;_class&#39;: &#39;hudson.plugins.git.util.BuildData&#39;, &#39;buildsByBranchName&#39;: &#123;&#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;: &#123;&#39;_class&#39;: &#39;hudson.plugins.git.util.Build&#39;, &#39;buildNumber&#39;: 40, &#39;buildResult&#39;: None, &#39;marked&#39;: &#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;branch&#39;: [&#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;name&#39;: &#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;&#125;]&#125;, &#39;revision&#39;: &#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;branch&#39;: [&#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;name&#39;: &#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;&#125;]&#125;&#125;&#125;, &#39;lastBuiltRevision&#39;: &#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;branch&#39;: [&#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;name&#39;: &#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;&#125;]&#125;, &#39;remoteUrls&#39;: [&#39;git@git.idbc.net:ansible-roles&#x2F;zff.ansible.git&#39;], &#39;scmName&#39;: &#39;&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.plugins.git.GitTagAction&#39;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;], &#39;artifacts&#39;: [], &#39;building&#39;: False, &#39;description&#39;: None, &#39;displayName&#39;: &#39;#40&#39;, &#39;duration&#39;: 735, &#39;estimatedDuration&#39;: 897, &#39;executor&#39;: None, &#39;fullDisplayName&#39;: &#39;ansible-playbook #40&#39;, &#39;id&#39;: &#39;40&#39;, &#39;keepLog&#39;: False, &#39;number&#39;: 40, &#39;queueId&#39;: 21, &#39;result&#39;: &#39;SUCCESS&#39;, &#39;timestamp&#39;: 1516172959444, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;40&#x2F;&#39;, &#39;builtOn&#39;: &#39;&#39;, &#39;changeSet&#39;: &#123;&#39;_class&#39;: &#39;hudson.plugins.git.GitChangeSetList&#39;, &#39;items&#39;: [], &#39;kind&#39;: &#39;git&#39;&#125;, &#39;culprits&#39;: []&#125;</span><br></pre></td></tr></table></figure><h4 id="Some-API"><a href="#Some-API" class="headerlink" title="Some API"></a>Some API</h4><p>This module is a collection of helpful, high-level functions for automating common tasks. Many of these functions were designed to be exposed to the command-line, hence they have simple string arguments.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">from jenkinsapi import api as API</span><br><span class="line">server &#x3D; get_server_instance()</span><br><span class="line">jobs &#x3D; server.get_jobs_list()</span><br><span class="line"></span><br><span class="line"># 1. 等待所有job执行完成</span><br><span class="line">ret &#x3D; API.block_until_complete(&#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;&#39;, jobs, username&#x3D;&#39;admin&#39;, password&#x3D;&#39;admin123&#39;, ssl_verify&#x3D;False)</span><br><span class="line">print(ret)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">Waiting for jobs &quot;ansible-playbook&quot; to complete. Will wait another 12000s</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 2. job 构建的完整名称</span><br><span class="line">ret &#x3D; API.get_build(&#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;&#39;, &#39;ansible-playbook&#39;, 66, username&#x3D;&#39;admin&#39;, password&#x3D;&#39;admin123&#39;,</span><br><span class="line">                    ssl_verify&#x3D;False)</span><br><span class="line">print(ret)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">ansible-playbook #66</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 3. 最后一次构建</span><br><span class="line">ret &#x3D; API.get_latest_build(&#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;&#39;, &#39;ansible-playbook&#39;, username&#x3D;&#39;admin&#39;, password&#x3D;&#39;admin123&#39;,</span><br><span class="line">                           ssl_verify&#x3D;False)</span><br><span class="line">print(ret)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">ansible-playbook #66</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 4. 最后一次完整构建</span><br><span class="line">ret &#x3D; API.get_latest_complete_build(&#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;&#39;, &#39;ansible-playbook&#39;, username&#x3D;&#39;admin&#39;, password&#x3D;&#39;admin123&#39;,</span><br><span class="line">                                    ssl_verify&#x3D;False)</span><br><span class="line">print(ret)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">ansible-playbook #66</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 5. 查询试图信息</span><br><span class="line">ret &#x3D; API.get_nested_view_from_url(&#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;view&#x2F;myview&#x2F;&#39;, username&#x3D;&#39;admin&#39;, password&#x3D;&#39;admin123&#39;,</span><br><span class="line">                                   ssl_verify&#x3D;False)</span><br><span class="line">print(ret.get_config_xml_url())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;view&#x2F;myview&#x2F;config.xml</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(ret.get_job_dict())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&#123;&#39;ansible-playbook&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;&#39;, &#39;my-github&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;my-github&#x2F;&#39;&#125;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(ret.pprint())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&#123;&#39;_class&#39;: &#39;hudson.model.ListView&#39;,</span><br><span class="line"> &#39;description&#39;: &#39;测试试图&#39;,</span><br><span class="line"> &#39;jobs&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;,</span><br><span class="line">           &#39;color&#39;: &#39;blue&#39;,</span><br><span class="line">           &#39;name&#39;: &#39;ansible-playbook&#39;,</span><br><span class="line">           &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;&#39;&#125;,</span><br><span class="line">          &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;,</span><br><span class="line">           &#39;color&#39;: &#39;disabled&#39;,</span><br><span class="line">           &#39;name&#39;: &#39;my-github&#39;,</span><br><span class="line">           &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;my-github&#x2F;&#39;&#125;],</span><br><span class="line"> &#39;name&#39;: &#39;myview&#39;,</span><br><span class="line"> &#39;property&#39;: [],</span><br><span class="line"> &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;view&#x2F;myview&#x2F;&#39;&#125;</span><br><span class="line">None</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(ret.get_config())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;hudson.model.ListView&gt;</span><br><span class="line">  &lt;name&gt;myview&lt;&#x2F;name&gt;</span><br><span class="line">  &lt;description&gt;测试试图&lt;&#x2F;description&gt;</span><br><span class="line">  &lt;filterExecutors&gt;false&lt;&#x2F;filterExecutors&gt;</span><br><span class="line">  &lt;filterQueue&gt;false&lt;&#x2F;filterQueue&gt;</span><br><span class="line">  &lt;properties class&#x3D;&quot;hudson.model.View$PropertyList&quot;&#x2F;&gt;</span><br><span class="line">  &lt;jobNames&gt;</span><br><span class="line">    &lt;comparator class&#x3D;&quot;hudson.util.CaseInsensitiveComparator&quot;&#x2F;&gt;</span><br><span class="line">    &lt;string&gt;ansible-playbook&lt;&#x2F;string&gt;</span><br><span class="line">    &lt;string&gt;my-github&lt;&#x2F;string&gt;</span><br><span class="line">  &lt;&#x2F;jobNames&gt;</span><br><span class="line">  &lt;jobFilters&#x2F;&gt;</span><br><span class="line">  &lt;columns&gt;</span><br><span class="line">    &lt;hudson.views.StatusColumn&#x2F;&gt;</span><br><span class="line">    &lt;hudson.views.WeatherColumn&#x2F;&gt;</span><br><span class="line">    &lt;hudson.views.JobColumn&#x2F;&gt;</span><br><span class="line">    &lt;hudson.views.LastSuccessColumn&#x2F;&gt;</span><br><span class="line">    &lt;hudson.views.LastDurationColumn&#x2F;&gt;</span><br><span class="line">    &lt;hudson.views.BuildButtonColumn&#x2F;&gt;</span><br><span class="line">    &lt;hudson.plugins.git.GitBranchSpecifierColumn plugin&#x3D;&quot;git@3.7.0&quot;&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;columns&gt;</span><br><span class="line">  &lt;recurse&gt;false&lt;&#x2F;recurse&gt;</span><br><span class="line">&lt;&#x2F;hudson.model.ListView&gt;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 6. 类似与get_nested_view_from_url函数</span><br><span class="line">ret &#x3D; API.get_view_from_url(&#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;view&#x2F;myview&#x2F;&#39;, username&#x3D;&#39;admin&#39;, password&#x3D;&#39;admin123&#39;,</span><br><span class="line">                            ssl_verify&#x3D;False)</span><br><span class="line">print(ret.get_job_dict())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&#123;&#39;ansible-playbook&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;&#39;, &#39;my-github&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;my-github&#x2F;&#39;&#125;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(ret.get_config_xml_url())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;view&#x2F;myview&#x2F;config.xml</span><br><span class="line">&#39;&#39;&#39;</span><br></pre></td></tr></table></figure><h3 id="Python-Jenkins模块"><a href="#Python-Jenkins模块" class="headerlink" title="Python Jenkins模块"></a>Python Jenkins模块</h3><h4 id="Working-with-Jenkins-Jobs"><a href="#Working-with-Jenkins-Jobs" class="headerlink" title="Working with Jenkins Jobs"></a>Working with Jenkins Jobs</h4><p>This is an example showing how to create, configure and delete Jenkins jobs.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line">#! &#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># __author__ &#x3D; &quot;shuke&quot;</span><br><span class="line"># Date: 2018&#x2F;1&#x2F;17</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import jenkins</span><br><span class="line"></span><br><span class="line">server &#x3D; jenkins.Jenkins(&#39;http:&#x2F;&#x2F;127.0.0.1:8080&#39;, username&#x3D;&quot;admin&quot;, password&#x3D;&quot;admin123&quot;)</span><br><span class="line">params &#x3D; &#123;&#39;Branch&#39;: &#39;oriin&#x2F;master&#39;, &#39;host&#39;: &#39;192.168.1.110&#39;&#125;</span><br><span class="line"></span><br><span class="line"># server对象</span><br><span class="line"># Jenkins的job数量</span><br><span class="line">print(server.jobs_count())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">2</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># Jenkins-web-ui</span><br><span class="line">print(server.server)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 所有的job信息</span><br><span class="line">all_jobs_li &#x3D; server.get_all_jobs()</span><br><span class="line">for item in all_jobs_li:</span><br><span class="line">    print(&#39;name: %s&#39; % item[&#39;name&#39;], &#39;URL: &#39;, item[&#39;url&#39;])</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">name: ansible-playbook URL:  http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;</span><br><span class="line">name: my-github URL:  http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;my-github&#x2F;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 账户信息描述</span><br><span class="line">print(server.get_whoami())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&#123;&#39;_class&#39;: &#39;hudson.model.User&#39;, &#39;absoluteUrl&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;user&#x2F;admin&#39;, &#39;description&#39;: &#39;本地测试&#39;, &#39;fullName&#39;: &#39;管理员&#39;, &#39;id&#39;: &#39;admin&#39;, &#39;property&#39;: [&#123;&#39;_class&#39;: &#39;jenkins.security.ApiTokenProperty&#39;&#125;, &#123;&#39;_class&#39;: &#39;com.cloudbees.plugins.credentials.UserCredentialsProvider$UserCredentialsProperty&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.tasks.Mailer$UserProperty&#39;, &#39;address&#39;: &#39;admin@163.com&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.plugins.emailext.watching.EmailExtWatchAction$UserProperty&#39;, &#39;triggers&#39;: []&#125;, &#123;&#39;_class&#39;: &#39;jenkins.security.LastGrantedAuthoritiesProperty&#39;&#125;, &#123;&#39;_class&#39;: &#39;org.jenkinsci.plugins.displayurlapi.user.PreferredProviderUserProperty&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.PaneStatusProperties&#39;&#125;, &#123;&#39;_class&#39;: &#39;org.jenkinsci.main.modules.cli.auth.ssh.UserPropertyImpl&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.security.HudsonPrivateSecurityRealm$Details&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.MyViewsProperty&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.search.UserSearchProperty&#39;, &#39;insensitiveSearch&#39;: True&#125;, &#123;&#39;_class&#39;: &#39;hudson.plugins.favorite.user.FavoriteUserProperty&#39;&#125;]&#125;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># auth</span><br><span class="line">print(server.auth)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">b&#39;Basic YWRtaW46YWRtaW4xMjM&#x3D;&#39;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># DEBUG Job信息</span><br><span class="line">print(server.debug_job_info(&#39;ansible-playbook&#39;))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">_class hudson.model.FreeStyleProject</span><br><span class="line">actions [&#123;&#39;_class&#39;: &#39;hudson.model.ParametersDefinitionProperty&#39;, &#39;parameterDefinitions&#39;: [&#123;&#39;_class&#39;: &#39;net.uaznia.lukanus.hudson.plugins.gitparameter.GitParameterDefinition&#39;, &#39;defaultParameterValue&#39;: None, &#39;description&#39;: &#39;分支&#39;, &#39;name&#39;: &#39;Branch&#39;, &#39;type&#39;: &#39;PT_BRANCH&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.StringParameterDefinition&#39;, &#39;defaultParameterValue&#39;: &#123;&#39;_class&#39;: &#39;hudson.model.StringParameterValue&#39;, &#39;value&#39;: &#39;127.0.0.1,127.0.0.2,127.0.0.1&#39;&#125;, &#39;description&#39;: &#39;本机&#39;, &#39;name&#39;: &#39;host&#39;, &#39;type&#39;: &#39;StringParameterDefinition&#39;&#125;]&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#39;_class&#39;: &#39;com.cloudbees.plugins.credentials.ViewCredentialsAction&#39;&#125;]</span><br><span class="line">description ansible playbook</span><br><span class="line">displayName ansible-playbook</span><br><span class="line">displayNameOrNull None</span><br><span class="line">fullDisplayName ansible-playbook</span><br><span class="line">fullName ansible-playbook</span><br><span class="line">name ansible-playbook</span><br><span class="line">url http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;</span><br><span class="line">buildable True</span><br><span class="line">......</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line">####### CURD Job #######</span><br><span class="line"></span><br><span class="line"># Job是否存在</span><br><span class="line">print(server.job_exists(&#39;my-api&#39;))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">True or None</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 获取所有的Job</span><br><span class="line">print(server.get_jobs())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">[&#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;, &#39;name&#39;: &#39;ansible-playbook&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;&#39;, &#39;color&#39;: &#39;aborted&#39;, &#39;fullname&#39;: &#39;ansible-playbook&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;, &#39;name&#39;: &#39;my-api&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;my-api&#x2F;&#39;, &#39;color&#39;: &#39;notbuilt&#39;, &#39;fullname&#39;: &#39;my-api&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;, &#39;name&#39;: &#39;my-github&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;my-github&#x2F;&#39;, &#39;color&#39;: &#39;disabled&#39;, &#39;fullname&#39;: &#39;my-github&#39;&#125;]</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 创建Job</span><br><span class="line">server.create_job(&#39;API&#39;, jenkins.RECONFIG_XML)</span><br><span class="line"></span><br><span class="line"># 删除Job</span><br><span class="line">server.delete_job(&#39;my-api&#39;)</span><br><span class="line"></span><br><span class="line"># 复制job</span><br><span class="line">server.copy_job(&#39;my-github&#39;, &#39;copy-my-github&#39;)</span><br><span class="line"></span><br><span class="line"># enable job</span><br><span class="line">server.enable_job(&#39;copy-my-github&#39;)</span><br><span class="line"></span><br><span class="line"># 禁用Job</span><br><span class="line">server.disable_job(&#39;copy-my-github&#39;)</span><br><span class="line"></span><br><span class="line"># 重新配置Job</span><br><span class="line">server.reconfig_job(&#39;copy-my-github&#39;, jenkins.RECONFIG_XML)</span><br><span class="line"></span><br><span class="line"># 重命名Job</span><br><span class="line">server.rename_job(&#39;API&#39;, &#39;my-api&#39;)</span><br><span class="line"></span><br><span class="line"># 触发Job运行</span><br><span class="line"># 触发Job(方式一)</span><br><span class="line">server.build_job_url(&#39;ansible-playbook&#39;, parameters&#x3D;params)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;buildWithParameters?Branch&#x3D;oriin%2Fmaster&amp;host&#x3D;192.168.1.110</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"># 触发Job(方式二)</span><br><span class="line">server.build_job(&#39;ansible-playbook&#39;, parameters&#x3D;params)</span><br><span class="line"></span><br><span class="line"># 查看指定构建编号的输出</span><br><span class="line">print(server.get_build_console_output(&#39;ansible-playbook&#39;, 41))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">Started by user 管理员</span><br><span class="line">[EnvInject] - Loading node environment variables.</span><br><span class="line">Building in workspace &#x2F;Users&#x2F;zhao&#x2F;data&#x2F;workspace&#x2F;workspace&#x2F;ansible-playbook</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git rev-parse --is-inside-work-tree # timeout&#x3D;10</span><br><span class="line">Fetching changes from the remote Git repository</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git config remote.origin.url git@git.icbc.net:ansible-roles&#x2F;zff.ansible.git # timeout&#x3D;10</span><br><span class="line">Fetching upstream changes from git@git.icbc.net:ansible-roles&#x2F;zff.ansible.git</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git --version # timeout&#x3D;10</span><br><span class="line">using GIT_SSH to set credentials deploy key</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git fetch --tags --progress git@git.icbc.net:ansible-roles&#x2F;zff.ansible.git +refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git rev-parse refs&#x2F;remotes&#x2F;origin&#x2F;master^&#123;commit&#125; # timeout&#x3D;10</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git rev-parse refs&#x2F;remotes&#x2F;origin&#x2F;origin&#x2F;master^&#123;commit&#125; # timeout&#x3D;10</span><br><span class="line">Checking out Revision 21c2b6ff6c842a86969f36f75424e17ae27eae68 (refs&#x2F;remotes&#x2F;origin&#x2F;master)</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git config core.sparsecheckout # timeout&#x3D;10</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git checkout -f 21c2b6ff6c842a86969f36f75424e17ae27eae68</span><br><span class="line">Commit message: &quot;update tomcat root mode&quot;</span><br><span class="line"> &gt; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;git rev-list --no-walk 21c2b6ff6c842a86969f36f75424e17ae27eae68 # timeout&#x3D;10</span><br><span class="line">[ansible-playbook] $ &#x2F;bin&#x2F;sh -xe &#x2F;Users&#x2F;Shared&#x2F;Jenkins&#x2F;tmp&#x2F;jenkins5080034200775659821.sh</span><br><span class="line">+ echo 192.168.1.110</span><br><span class="line">192.168.1.110</span><br><span class="line">+ echo test</span><br><span class="line">test</span><br><span class="line">+ echo http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;41&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;41&#x2F;</span><br><span class="line">+ echo 41</span><br><span class="line">41</span><br><span class="line">+ echo jenkins-ansible-playbook-41</span><br><span class="line">jenkins-ansible-playbook-41</span><br><span class="line">Finished: SUCCESS</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 下一次构建编号,步长为5</span><br><span class="line">next_bn &#x3D; server.get_job_info(&#39;ansible-playbook&#39;)[&#39;nextBuildNumber&#39;]</span><br><span class="line">server.set_next_build_number(&#39;ansible-playbook&#39;, next_bn + 5)</span><br><span class="line"></span><br><span class="line"># 指定编号的构建Job信息</span><br><span class="line">print(server.get_build_info(&#39;ansible-playbook&#39;, 48))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;actions&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.ParametersAction&#39;, &#39;parameters&#39;: [&#123;&#39;_class&#39;: &#39;net.uaznia.lukanus.hudson.plugins.gitparameter.GitParameterValue&#39;, &#39;name&#39;: &#39;Branch&#39;, &#39;value&#39;: &#39;oriin&#x2F;master&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.StringParameterValue&#39;, &#39;name&#39;: &#39;host&#39;, &#39;value&#39;: &#39;192.168.1.110&#39;&#125;]&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.CauseAction&#39;, &#39;causes&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.Cause$UserIdCause&#39;, &#39;shortDescription&#39;: &#39;Started by user 管理员&#39;, &#39;userId&#39;: &#39;admin&#39;, &#39;userName&#39;: &#39;管理员&#39;&#125;]&#125;, &#123;&#125;, &#123;&#39;_class&#39;: &#39;hudson.plugins.git.util.BuildData&#39;, &#39;buildsByBranchName&#39;: &#123;&#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;: &#123;&#39;_class&#39;: &#39;hudson.plugins.git.util.Build&#39;, &#39;buildNumber&#39;: 48, &#39;buildResult&#39;: None, &#39;marked&#39;: &#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;branch&#39;: [&#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;name&#39;: &#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;&#125;]&#125;, &#39;revision&#39;: &#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;branch&#39;: [&#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;name&#39;: &#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;&#125;]&#125;&#125;&#125;, &#39;lastBuiltRevision&#39;: &#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;branch&#39;: [&#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;name&#39;: &#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;&#125;]&#125;, &#39;remoteUrls&#39;: [&#39;git@git.icbc.net:ansible-roles&#x2F;zff.ansible.git&#39;], &#39;scmName&#39;: &#39;&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.plugins.git.GitTagAction&#39;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;], &#39;artifacts&#39;: [], &#39;building&#39;: False, &#39;description&#39;: None, &#39;displayName&#39;: &#39;#48&#39;, &#39;duration&#39;: 1861, &#39;estimatedDuration&#39;: 4305, &#39;executor&#39;: None, &#39;fullDisplayName&#39;: &#39;ansible-playbook #48&#39;, &#39;id&#39;: &#39;48&#39;, &#39;keepLog&#39;: False, &#39;number&#39;: 48, &#39;queueId&#39;: 24, &#39;result&#39;: &#39;SUCCESS&#39;, &#39;timestamp&#39;: 1516185645519, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;48&#x2F;&#39;, &#39;builtOn&#39;: &#39;&#39;, &#39;changeSet&#39;: &#123;&#39;_class&#39;: &#39;hudson.plugins.git.GitChangeSetList&#39;, &#39;items&#39;: [], &#39;kind&#39;: &#39;git&#39;&#125;, &#39;culprits&#39;: []&#125;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 获取正在运行的Job，一般结合build_job方法一起使用</span><br><span class="line">print(server.get_running_builds())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">[&#123;&#39;name&#39;: &#39;ansible-playbook&#39;, &#39;number&#39;: 57, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;57&#x2F;&#39;, &#39;node&#39;: &#39;(master)&#39;, &#39;executor&#39;: 1&#125;]</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 终止指定编号的Job</span><br><span class="line">server.stop_build(&#39;ansible-playbook&#39;, 62)</span><br><span class="line"></span><br><span class="line"># 获取Job名称</span><br><span class="line">print(server.get_job_name(&#39;ansible-playbook&#39;))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">ansible-playbook</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 断言Job是否存在</span><br><span class="line">print(server.assert_job_exists(&#39;ansible-playbook&#39;))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">存在则返回None，不存在则抛出错误信息</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 该Job所有的相关信息</span><br><span class="line">print(server.get_job_info(&#39;ansible-playbook&#39;))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;, &#39;actions&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.ParametersDefinitionProperty&#39;, &#39;parameterDefinitions&#39;: [&#123;&#39;_class&#39;: &#39;net.uaznia.lukanus.hudson.plugins.gitparameter.GitParameterDefinition&#39;, &#39;defaultParameterValue&#39;: None, &#39;description&#39;: &#39;分支&#39;, &#39;name&#39;: &#39;Branch&#39;, &#39;type&#39;: &#39;PT_BRANCH&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.StringParameterDefinition&#39;, &#39;defaultParameterValue&#39;: &#123;&#39;_class&#39;: &#39;hudson.model.StringParameterValue&#39;, &#39;value&#39;: &#39;127.0.0.1,127.0.0.2,127.0.0.1&#39;&#125;, &#39;description&#39;: &#39;本机&#39;, &#39;name&#39;: &#39;host&#39;, &#39;type&#39;: &#39;StringParameterDefinition&#39;&#125;]&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#39;_class&#39;: &#39;com.cloudbees.plugins.credentials.ViewCredentialsAction&#39;&#125;], &#39;description&#39;: &#39;ansible playbook&#39;, &#39;displayName&#39;: &#39;ansible-playbook&#39;, &#39;displayNameOrNull&#39;: None, &#39;fullDisplayName&#39;: &#39;ansible-playbook&#39;, &#39;fullName&#39;: &#39;ansible-playbook&#39;, &#39;name&#39;: &#39;ansible-playbook&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;&#39;, &#39;buildable&#39;: True, &#39;builds&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;number&#39;: 62, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;62&#x2F;&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;number&#39;: 61, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;61&#x2F;&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;number&#39;: 60, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;60&#x2F;&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;number&#39;: 59, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;59&#x2F;&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;number&#39;: 58, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;58&#x2F;&#39;&#125;], &#39;color&#39;: &#39;aborted&#39;, &#39;firstBuild&#39;: &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;number&#39;: 58, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;58&#x2F;&#39;&#125;, &#39;healthReport&#39;: [&#123;&#39;description&#39;: &#39;Build stability: No recent builds failed.&#39;, &#39;iconClassName&#39;: &#39;icon-health-80plus&#39;, &#39;iconUrl&#39;: &#39;health-80plus.png&#39;, &#39;score&#39;: 100&#125;], &#39;inQueue&#39;: False, &#39;keepDependencies&#39;: False, &#39;lastBuild&#39;: &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;number&#39;: 62, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;62&#x2F;&#39;&#125;, &#39;lastCompletedBuild&#39;: &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;number&#39;: 62, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;62&#x2F;&#39;&#125;, &#39;lastFailedBuild&#39;: None, &#39;lastStableBuild&#39;: &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;number&#39;: 61, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;61&#x2F;&#39;&#125;, &#39;lastSuccessfulBuild&#39;: &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;number&#39;: 61, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;61&#x2F;&#39;&#125;, &#39;lastUnstableBuild&#39;: None, &#39;lastUnsuccessfulBuild&#39;: &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;number&#39;: 62, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;62&#x2F;&#39;&#125;, &#39;nextBuildNumber&#39;: 63, &#39;property&#39;: [&#123;&#39;_class&#39;: &#39;jenkins.model.BuildDiscarderProperty&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.ParametersDefinitionProperty&#39;, &#39;parameterDefinitions&#39;: [&#123;&#39;_class&#39;: &#39;net.uaznia.lukanus.hudson.plugins.gitparameter.GitParameterDefinition&#39;, &#39;defaultParameterValue&#39;: None, &#39;description&#39;: &#39;分支&#39;, &#39;name&#39;: &#39;Branch&#39;, &#39;type&#39;: &#39;PT_BRANCH&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.StringParameterDefinition&#39;, &#39;defaultParameterValue&#39;: &#123;&#39;_class&#39;: &#39;hudson.model.StringParameterValue&#39;, &#39;name&#39;: &#39;host&#39;, &#39;value&#39;: &#39;127.0.0.1,127.0.0.2,127.0.0.1&#39;&#125;, &#39;description&#39;: &#39;本机&#39;, &#39;name&#39;: &#39;host&#39;, &#39;type&#39;: &#39;StringParameterDefinition&#39;&#125;]&#125;], &#39;queueItem&#39;: None, &#39;concurrentBuild&#39;: False, &#39;downstreamProjects&#39;: [], &#39;labelExpression&#39;: None, &#39;scm&#39;: &#123;&#39;_class&#39;: &#39;hudson.plugins.git.GitSCM&#39;&#125;, &#39;upstreamProjects&#39;: []&#125;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 查看该试图下所有的Job</span><br><span class="line">print(server.get_jobs(&#39;myview&#39;))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">[&#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;, &#39;name&#39;: &#39;ansible-playbook&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;&#39;, &#39;color&#39;: &#39;aborted&#39;, &#39;fullname&#39;: &#39;ansible-playbook&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;, &#39;name&#39;: &#39;my-api&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;my-api&#x2F;&#39;, &#39;color&#39;: &#39;notbuilt&#39;, &#39;fullname&#39;: &#39;my-api&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleProject&#39;, &#39;name&#39;: &#39;my-github&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;my-github&#x2F;&#39;, &#39;color&#39;: &#39;disabled&#39;, &#39;fullname&#39;: &#39;my-github&#39;&#125;]</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 正则匹配获取Job信息</span><br><span class="line"># print(server.get_job_info_regex(&#39;^my&#39;))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">Job相关信息</span><br><span class="line">....</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># 获取最后一次构建的Job信息</span><br><span class="line"># build a parameterized job</span><br><span class="line"># requires creating and configuring the ansible-playbook job to accept &#39;param1&#39; &amp; &#39;param2&#39;</span><br><span class="line">job_name &#x3D; &quot;ansible-playbook&quot;</span><br><span class="line">server.build_job(job_name, &#123;&#39;Branch&#39;: &#39;oriin&#x2F;master&#39;, &#39;host&#39;: &#39;192.168.1.110&#39;&#125;)</span><br><span class="line">last_build_number &#x3D; server.get_job_info(job_name)[&#39;lastCompletedBuild&#39;][&#39;number&#39;]</span><br><span class="line">build_info &#x3D; server.get_build_info(job_name, last_build_number)</span><br><span class="line">print(build_info)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&#123;&#39;_class&#39;: &#39;hudson.model.FreeStyleBuild&#39;, &#39;actions&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.ParametersAction&#39;, &#39;parameters&#39;: [&#123;&#39;_class&#39;: &#39;net.uaznia.lukanus.hudson.plugins.gitparameter.GitParameterValue&#39;, &#39;name&#39;: &#39;Branch&#39;, &#39;value&#39;: &#39;origin&#x2F;master&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.StringParameterValue&#39;, &#39;name&#39;: &#39;host&#39;, &#39;value&#39;: &#39;127.0.0.1,127.0.0.2,127.0.0.105&#39;&#125;]&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.CauseAction&#39;, &#39;causes&#39;: [&#123;&#39;_class&#39;: &#39;hudson.model.Cause$UserIdCause&#39;, &#39;shortDescription&#39;: &#39;Started by user 管理员&#39;, &#39;userId&#39;: &#39;admin&#39;, &#39;userName&#39;: &#39;管理员&#39;&#125;]&#125;, &#123;&#125;, &#123;&#39;_class&#39;: &#39;hudson.plugins.git.util.BuildData&#39;, &#39;buildsByBranchName&#39;: &#123;&#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;: &#123;&#39;_class&#39;: &#39;hudson.plugins.git.util.Build&#39;, &#39;buildNumber&#39;: 62, &#39;buildResult&#39;: None, &#39;marked&#39;: &#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;branch&#39;: [&#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;name&#39;: &#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;&#125;]&#125;, &#39;revision&#39;: &#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;branch&#39;: [&#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;name&#39;: &#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;&#125;]&#125;&#125;&#125;, &#39;lastBuiltRevision&#39;: &#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;branch&#39;: [&#123;&#39;SHA1&#39;: &#39;21c2b6ff6c842a86969f36f75424e17ae27eae68&#39;, &#39;name&#39;: &#39;refs&#x2F;remotes&#x2F;origin&#x2F;master&#39;&#125;]&#125;, &#39;remoteUrls&#39;: [&#39;git@git.icbc.net:ansible-roles&#x2F;zff.ansible.git&#39;], &#39;scmName&#39;: &#39;&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.plugins.git.GitTagAction&#39;&#125;, &#123;&#125;, &#123;&#39;_class&#39;: &#39;jenkins.model.InterruptedBuildAction&#39;&#125;, &#123;&#125;, &#123;&#125;, &#123;&#125;], &#39;artifacts&#39;: [], &#39;building&#39;: False, &#39;description&#39;: None, &#39;displayName&#39;: &#39;#62&#39;, &#39;duration&#39;: 7069, &#39;estimatedDuration&#39;: 7681, &#39;executor&#39;: None, &#39;fullDisplayName&#39;: &#39;ansible-playbook #62&#39;, &#39;id&#39;: &#39;62&#39;, &#39;keepLog&#39;: False, &#39;number&#39;: 62, &#39;queueId&#39;: 33, &#39;result&#39;: &#39;ABORTED&#39;, &#39;timestamp&#39;: 1516186369042, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;job&#x2F;ansible-playbook&#x2F;62&#x2F;&#39;, &#39;builtOn&#39;: &#39;&#39;, &#39;changeSet&#39;: &#123;&#39;_class&#39;: &#39;hudson.plugins.git.GitChangeSetList&#39;, &#39;items&#39;: [], &#39;kind&#39;: &#39;git&#39;&#125;, &#39;culprits&#39;: []&#125;</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># shutdown jenkins</span><br><span class="line">server.quiet_down()</span><br></pre></td></tr></table></figure><h4 id="Working-with-Jenkins-Views"><a href="#Working-with-Jenkins-Views" class="headerlink" title="Working with Jenkins Views"></a>Working with Jenkins Views</h4><p>This is an example showing how to create, configure and delete Jenkins views.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"># 试图相关</span><br><span class="line">print(server.get_views())</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">[&#123;&#39;_class&#39;: &#39;hudson.model.AllView&#39;, &#39;name&#39;: &#39;all&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;&#39;&#125;, &#123;&#39;_class&#39;: &#39;hudson.model.ListView&#39;, &#39;name&#39;: &#39;myview&#39;, &#39;url&#39;: &#39;http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;view&#x2F;myview&#x2F;&#39;&#125;]</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line"># CURD VIEW</span><br><span class="line">server.view_exists()</span><br><span class="line">server.create_view(&#39;EMPTY&#39;, jenkins.EMPTY_VIEW_CONFIG_XML)</span><br><span class="line">views &#x3D; server.get_views()</span><br><span class="line">server.delete_view(&#39;EMPTY&#39;)</span><br><span class="line">server.reconfig_view(&#39;newview&#39;,jenkins.EMPTY_VIEW_CONFIG_XML)</span><br><span class="line">server.get_view_name(&#39;EMPTY&#39;)</span><br><span class="line">view_config &#x3D; server.get_view_config(&#39;EMPTY&#39;)</span><br><span class="line"># 获取试图下所有的job</span><br><span class="line">print(server._get_view_jobs(&#39;myview&#39;))</span><br><span class="line"></span><br><span class="line"># 试图配置信息</span><br><span class="line">print(server.get_view_config(&#39;myview&#39;))</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;hudson.model.ListView&gt;</span><br><span class="line">  &lt;name&gt;myview&lt;&#x2F;name&gt;</span><br><span class="line">  &lt;description&gt;测试试图&lt;&#x2F;description&gt;</span><br><span class="line">  &lt;filterExecutors&gt;false&lt;&#x2F;filterExecutors&gt;</span><br><span class="line">  &lt;filterQueue&gt;false&lt;&#x2F;filterQueue&gt;</span><br><span class="line">  &lt;properties class&#x3D;&quot;hudson.model.View$PropertyList&quot;&#x2F;&gt;</span><br><span class="line">  &lt;jobNames&gt;</span><br><span class="line">    &lt;comparator class&#x3D;&quot;hudson.util.CaseInsensitiveComparator&quot;&#x2F;&gt;</span><br><span class="line">    &lt;string&gt;ansible-playbook&lt;&#x2F;string&gt;</span><br><span class="line">    &lt;string&gt;my-github&lt;&#x2F;string&gt;</span><br><span class="line">  &lt;&#x2F;jobNames&gt;</span><br><span class="line">  &lt;jobFilters&#x2F;&gt;</span><br><span class="line">  &lt;columns&gt;</span><br><span class="line">    &lt;hudson.views.StatusColumn&#x2F;&gt;</span><br><span class="line">    &lt;hudson.views.WeatherColumn&#x2F;&gt;</span><br><span class="line">    &lt;hudson.views.JobColumn&#x2F;&gt;</span><br><span class="line">    &lt;hudson.views.LastSuccessColumn&#x2F;&gt;</span><br><span class="line">    &lt;hudson.views.LastDurationColumn&#x2F;&gt;</span><br><span class="line">    &lt;hudson.views.BuildButtonColumn&#x2F;&gt;</span><br><span class="line">    &lt;hudson.plugins.git.GitBranchSpecifierColumn plugin&#x3D;&quot;git@3.7.0&quot;&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;columns&gt;</span><br><span class="line">  &lt;recurse&gt;false&lt;&#x2F;recurse&gt;</span><br><span class="line">&lt;&#x2F;hudson.model.ListView&gt;</span><br><span class="line">&#39;&#39;&#39;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>建议使用Python Jenkins模块，相对JenkinsApi而言，模块封装的更好。接口调用更方便，更容易上手,模块内容不是很多，可以自己研读源码进行二次开发，方便与其他系统集成，更好的落地DevOps方案的实施;</p>]]></content>
    
    <summary type="html">
    
      Jenkins-python-api
    
    </summary>
    
    
      <category term="DevOps" scheme="https://shuke163.github.io/categories/DevOps/"/>
    
    
      <category term="DevOps" scheme="https://shuke163.github.io/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins-file Example</title>
    <link href="https://shuke163.github.io/2020/04/20/Jenkins-file-Example/"/>
    <id>https://shuke163.github.io/2020/04/20/Jenkins-file-Example/</id>
    <published>2020-04-20T11:49:09.000Z</published>
    <updated>2020-04-20T11:49:35.373Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jenkins-file-example"><a href="#Jenkins-file-example" class="headerlink" title="Jenkins file example"></a>Jenkins file example</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">properties([buildDiscarder(logRotator(artifactNumToKeepStr: &#39;10&#39;, numToKeepStr: &#39;10&#39;))])</span><br><span class="line">node(&#39;build&#39;) &#123;</span><br><span class="line">    def serviceName  &#x3D; &quot;&quot;</span><br><span class="line">    def warFilePath &#x3D; [</span><br><span class="line">         &#39;external-api-web&#x2F;target&#x2F;external-api-web-1.0-SNAPSHOT.jar&#39;</span><br><span class="line">    ]</span><br><span class="line">    def artifactsPath &#x3D; &quot;devops-artifacts&quot;</span><br><span class="line">    def artifactOssPath &#x3D; &quot;bi&#x2F;$&#123; env.JOB_NAME &#125;&quot;</span><br><span class="line">    sh &quot;echo $&#123; env.JOB_NAME &#125;&quot;</span><br><span class="line">    def tempFolder &#x3D; &quot;&#x2F;tmp&#x2F;$&#123; env.JOB_NAME &#125;&quot;</span><br><span class="line">    def git_commit_id &#x3D; &quot;&quot;</span><br><span class="line">    def artifact &#x3D; &quot;&quot;</span><br><span class="line"></span><br><span class="line">    stage(&#39;Preparation&#39;) &#123;</span><br><span class="line">        deleteDir()</span><br><span class="line">        sh &quot;rm -rf $&#123; tempFolder &#125;&quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    try &#123;</span><br><span class="line">        stage(&#39;Clone from SCM&#39;) &#123;</span><br><span class="line">            &#x2F;&#x2F; checkout scm</span><br><span class="line">            checkout poll: false,</span><br><span class="line">                     scm: [$class: &#39;GitSCM&#39;,</span><br><span class="line">                           branches: [[name: &#39;master&#39;]],</span><br><span class="line">                                       doGenerateSubmoduleConfigurations: false,</span><br><span class="line">                                       submoduleCfg: [],</span><br><span class="line">                                       userRemoteConfigs: [[credentialsId: &#39;7bc6cda9-a250-4d99-962c-e2ede002db06&#39;,</span><br><span class="line">                                                            url: &#39;git@git.wecash.net:bi&#x2F;external-api.git&#39;]]]</span><br><span class="line">            git_commit_id &#x3D; sh(returnStdout: true, script: &#39;git rev-parse --short HEAD&#39;).trim() &#x2F;&#x2F;需要获取shell返回值操作</span><br><span class="line">            git_committer &#x3D; sh(returnStdout: true, script: &quot;git log -1 --format&#x3D;&#39;%ae&#39;&quot;).trim()</span><br><span class="line">            sh &quot;echo $&#123; git_committer &#125;&quot;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(&#39;Build&#39;) &#123;</span><br><span class="line">           withMaven(mavenSettingsConfig: &#39;02e95d2b-6bb6-457d-943f-13c63095e500&#39;,</span><br><span class="line">                  globalMavenSettingsConfig: &#39;bfa90212-2742-4611-aa71-8e0ec76d0c28&#39;,</span><br><span class="line">                  jdk: &#39;Oracle JDK 8&#39;, maven: &#39;Maven 3&#39;) &#123;</span><br><span class="line">                switch(env.BRANCH_NAME) &#123;</span><br><span class="line">                    case &quot;master&quot;:</span><br><span class="line">                        sh &quot;echo this is master branch.&quot;</span><br><span class="line">                        sh &quot;mvn clean install -Pprod -Dmaven.test.skip&#x3D;true&quot;</span><br><span class="line">                        break</span><br><span class="line">                    case &quot;dev&quot;:</span><br><span class="line">                        sh &quot;echo this is dev branch.&quot;</span><br><span class="line">                        sh &quot;mvn clean install -Pdev -Dmaven.test.skip&#x3D;true&quot;</span><br><span class="line">                        break</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(&#39;Run Tests&#39;) &#123;</span><br><span class="line">            sh &quot;echo &#39;No tests to do.&#39;&quot;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(&#39;Update to Aliyun OSS&#39;) &#123;</span><br><span class="line">            sh &quot;mkdir -p $&#123; tempFolder &#125;&quot;</span><br><span class="line">            sh &quot;echo $&#123; env.JOB_NAME &#125;&quot;</span><br><span class="line">            sh &quot; echo $&#123; artifactOssPath &#125;&quot;</span><br><span class="line">            for ( servicePath in warFilePath ) &#123;</span><br><span class="line">                serviceName &#x3D; sh(returnStdout: true, script: &quot;basename $&#123; servicePath &#125; | cut -d . -f 1&quot;).trim()</span><br><span class="line">                serviceFullName &#x3D; sh(returnStdout: true, script: &quot;basename $&#123; servicePath &#125;&quot;).trim()</span><br><span class="line">                sh &quot;mv $&#123; servicePath &#125; $&#123; tempFolder &#125;&#x2F;$&#123; serviceFullName &#125;&quot;</span><br><span class="line">                artifact &#x3D; &quot;$&#123; serviceName &#125;_$&#123; env.BUILD_NUMBER &#125;-$&#123; env.BRANCH_NAME &#125;-$&#123; git_commit_id &#125;.tar.gz&quot;</span><br><span class="line">                sh &quot;mkdir -p $&#123; artifactsPath &#125; &amp;&amp; tar czf $&#123; artifactsPath &#125;&#x2F;$&#123; artifact &#125; -C $&#123; tempFolder &#125; $&#123; serviceFullName &#125;&quot;</span><br><span class="line">                sh &quot;upload-flash -f $&#123; artifactsPath &#125;&#x2F;$&#123; artifact &#125; -t $&#123; artifactOssPath &#125;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(&#39;Archive artifacts&#39;) &#123;</span><br><span class="line">            archiveArtifacts allowEmptyArchive: true, artifacts: &quot;$&#123; artifactsPath &#125;&#x2F;*&quot;, fingerprint: true, onlyIfSuccessful: true</span><br><span class="line">            currentBuild.result &#x3D; &#39;SUCCESS&#39;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; catch (e) &#123;</span><br><span class="line">        currentBuild.result &#x3D; &quot;FAILED&quot;</span><br><span class="line">        throw e</span><br><span class="line">    &#125; finally &#123;</span><br><span class="line">&#x2F;&#x2F;        notifyBuild(currentBuild.result,git_committer)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def notifyBuild(String buildStatus &#x3D; &#39;STARTED&#39;,String GitCommitter) &#123;</span><br><span class="line">  &#x2F;&#x2F; build status of null means successful</span><br><span class="line">  buildStatus &#x3D;  buildStatus ?: &#39;SUCCESSFUL&#39;</span><br><span class="line"></span><br><span class="line">  def subject &#x3D; &quot;$&#123;buildStatus&#125;: Job &#39;$&#123;env.JOB_NAME&#125; [$&#123;env.BUILD_NUMBER&#125;]&#39;&quot;</span><br><span class="line">  def summary &#x3D; &quot;$&#123;subject&#125; ($&#123;env.BUILD_URL&#125;)&quot;</span><br><span class="line">  def details &#x3D; &quot;&quot;&quot;STARTED: Job &#39;$&#123;env.JOB_NAME&#125; [BUILD_NUMBER:$&#123;env.BUILD_NUMBER&#125;]&#39;</span><br><span class="line">                   Check console output at &quot;$&#123;env.BUILD_URL&#125;&quot;&gt;$&#123;env.JOB_NAME&#125; [$&#123;env.BUILD_NUMBER&#125;]&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; Send notifications</span><br><span class="line">  mail (</span><br><span class="line">      to: GitCommitter,</span><br><span class="line">      subject: subject,</span><br><span class="line">      body: details,</span><br><span class="line">      recipientProviders: [[$class: &#39;DevelopersRecipientProvider&#39;]]</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Jenkins-file Example
    
    </summary>
    
    
      <category term="DevOps" scheme="https://shuke163.github.io/categories/DevOps/"/>
    
    
      <category term="DevOps" scheme="https://shuke163.github.io/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins-python-deploy</title>
    <link href="https://shuke163.github.io/2020/04/20/Jenkins-python-deploy/"/>
    <id>https://shuke163.github.io/2020/04/20/Jenkins-python-deploy/</id>
    <published>2020-04-20T11:47:53.000Z</published>
    <updated>2020-04-20T11:48:34.099Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jenkins-python-deploy"><a href="#Jenkins-python-deploy" class="headerlink" title="Jenkins python deploy"></a>Jenkins python deploy</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">echo $WORKSPACE</span><br><span class="line">PROJECT_NAME&#x3D;$&#123;JOB_NAME#*-&#125;</span><br><span class="line">PLAYBOOK_PATH&#x3D;$&#123;WORKSPACE&#125;&#x2F;..&#x2F;brazil_ansible_playbook</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 部署</span><br><span class="line">cd $&#123;PLAYBOOK_PATH&#125;</span><br><span class="line">ansible-playbook -l $&#123;Host&#125; \</span><br><span class="line">-i $&#123;PLAYBOOK_PATH&#125;&#x2F;inventory&#x2F;brazil  \</span><br><span class="line">$&#123;PLAYBOOK_PATH&#125;&#x2F;python_deploy.yml \</span><br><span class="line">-e &quot;&#123;&#39;deploy_from&#39;: &#39;$&#123;WORKSPACE&#125;&#39;,&#39;deploy_dest&#39;:&#39;&#x2F;data&#x2F;services&#x2F;$&#123;PROJECT_NAME&#125;&#39;,&#39;project_name&#39;: &#39;$&#123;PROJECT_NAME&#125;&#39;, &#39;python_version&#39;: &#39;3.6&#39;,&#39;conda_env&#39;: &#39;$&#123;PROJECT_NAME&#125;&#39;,&#39;task_name&#39;: &#39;gunicorn&#39;, &#39;run_file&#39;: &#39;server.py&#39;&#125;&quot; --tags  update_code,envs_init</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># RESTART</span><br><span class="line">ansible -i $&#123;PLAYBOOK_PATH&#125;&#x2F;inventory&#x2F;brazil $&#123;Host&#125; -m shell -a &quot;supervisorctl restart $&#123;PROJECT_NAME&#125;&quot; -b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># STATUS</span><br><span class="line">ansible -i $&#123;PLAYBOOK_PATH&#125;&#x2F;inventory&#x2F;brazil $&#123;Host&#125; -m shell -a &quot;supervisorctl status $&#123;PROJECT_NAME&#125;&quot; -b</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Jenkins-python-deploy
    
    </summary>
    
    
      <category term="DevOps" scheme="https://shuke163.github.io/categories/DevOps/"/>
    
    
      <category term="DevOps" scheme="https://shuke163.github.io/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>Jenkinsfile 构建示例</title>
    <link href="https://shuke163.github.io/2020/04/20/Jenkinsfile-%E6%9E%84%E5%BB%BA%E7%A4%BA%E4%BE%8B/"/>
    <id>https://shuke163.github.io/2020/04/20/Jenkinsfile-%E6%9E%84%E5%BB%BA%E7%A4%BA%E4%BE%8B/</id>
    <published>2020-04-20T11:46:15.000Z</published>
    <updated>2020-04-20T11:48:35.705Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jenkinsfile-构建示例"><a href="#Jenkinsfile-构建示例" class="headerlink" title="Jenkinsfile 构建示例"></a>Jenkinsfile 构建示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br></pre></td><td class="code"><pre><span class="line">&#39;pipeline &#123;</span><br><span class="line">    &#x2F;&#x2F;在任何可用的代理上执行Pipeline</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    agent &#123;</span><br><span class="line">        node &#123;</span><br><span class="line">            label &quot;PTtest&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    options &#123;</span><br><span class="line">        buildDiscarder(logRotator(numToKeepStr: &#39;5&#39;))</span><br><span class="line">        disableConcurrentBuilds()</span><br><span class="line">    &#125;</span><br><span class="line">    tools &#123;</span><br><span class="line">        jdk &#39;Oracle JDK 8&#39;</span><br><span class="line">        maven &#39;Maven 3&#39;</span><br><span class="line">    &#125;</span><br><span class="line">    environment &#123;</span><br><span class="line">        def serviceName  &#x3D; &quot;&quot;</span><br><span class="line">        &#x2F;&#x2F; hosts must be splited by dot</span><br><span class="line">        def warFilePath &#x3D; &#39;mywo-crud-provider&#x2F;target&#x2F;mywo-crud-provider.war&#39;</span><br><span class="line">        def hosts &#x3D; &quot;10.41.118.137&quot;</span><br><span class="line">        def deploy_user &#x3D; &quot;app-deploy&quot;</span><br><span class="line">        def artifactsPath &#x3D; &quot;devops-artifacts&quot;</span><br><span class="line">        def department &#x3D; &quot;meiwozufang&quot;</span><br><span class="line">        def artifactOssPath &#x3D; &quot;$&#123; department &#125;&#x2F;$&#123; env.JOB_NAME &#125;&quot;</span><br><span class="line">        def tempFolder &#x3D; &quot;$&#123; WORKSPACE &#125;&#x2F;$&#123; env.JOB_NAME &#125;&#x2F;$&#123; env.BUILD_NUMBER &#125;&quot;</span><br><span class="line">        def target_dir &#x3D; &quot;&#x2F;data&#x2F;services&#x2F;tomcat-mywo-crud-8090&quot;</span><br><span class="line">        def git_commit_id &#x3D; &quot;&quot;</span><br><span class="line">        def artifact &#x3D; &quot;&quot;</span><br><span class="line">        def jmeterHome &#x3D; &quot;&#x2F;home&#x2F;jenkins&#x2F;apache-jmeter-3.1&quot;</span><br><span class="line">        def antHome &#x3D; &quot;&#x2F;home&#x2F;jenkins&#x2F;apache-ant-1.9.9&quot;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(&#39;Preparation&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh &quot;rm -rf &#x2F;tmp&#x2F;$&#123; env.JOB_NAME &#125;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Checkout code&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &quot;starting fetchCode......&quot;</span><br><span class="line">                checkout scm</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;SonarQube analysis&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo &quot;starting codeAnalyze......&quot;</span><br><span class="line">                script &#123;</span><br><span class="line">                    echo &quot;starting script......&quot;</span><br><span class="line">                    def sonarqubeScannerHome &#x3D; tool name: &#39;SonarQube Scanner&#39;</span><br><span class="line">                    withSonarQubeEnv(&#39;SonarQube-Public&#39;) &#123;</span><br><span class="line">                        sh &quot;$&#123;sonarqubeScannerHome&#125;&#x2F;bin&#x2F;sonar-scanner&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> &#x2F;&#x2F;       stage(&quot;SonarQube Quality Gate&quot;) &#123;</span><br><span class="line"> &#x2F;&#x2F;           when &#123;</span><br><span class="line"> &#x2F;&#x2F;               branch fuck</span><br><span class="line"> &#x2F;&#x2F;           &#125;</span><br><span class="line"> &#x2F;&#x2F;           steps &#123;</span><br><span class="line"> &#x2F;&#x2F;               echo &quot;starting waitForQualityGate......&quot;</span><br><span class="line"> &#x2F;&#x2F;               script &#123;</span><br><span class="line"> &#x2F;&#x2F;                   echo &quot;starting script......&quot;</span><br><span class="line"> &#x2F;&#x2F;                    timeout(time: 1, unit: &#39;HOURS&#39;) &#123;</span><br><span class="line"> &#x2F;&#x2F;                      def qg &#x3D; waitForQualityGate()</span><br><span class="line"> &#x2F;&#x2F;                      if (qg.status !&#x3D; &#39;OK&#39;) &#123;</span><br><span class="line"> &#x2F;&#x2F;                         error &quot;Pipeline aborted due to quality gate failure: $&#123;qg.status&#125;&quot;</span><br><span class="line"> &#x2F;&#x2F;                      &#125;</span><br><span class="line"> &#x2F;&#x2F;                    &#125;</span><br><span class="line"> &#x2F;&#x2F;               &#125;</span><br><span class="line"> &#x2F;&#x2F;           &#125;</span><br><span class="line"> &#x2F;&#x2F;       &#125;</span><br><span class="line"></span><br><span class="line">        stage(&#39;Compile branch master&#39;) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                branch &#39;master&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                withMaven(globalMavenSettingsConfig: &#39;bfa90212-2742-4611-aa71-8e0ec76d0c28&#39;, jdk: &#39;Oracle JDK 8&#39;, maven: &#39;Maven 3&#39;, mavenSettingsConfig: &#39;02e95d2b-6bb6-457d-943f-13c63095e500&#39;) &#123;</span><br><span class="line">                    sh &quot;mvn -Dmaven.test.skip&#x3D;true  clean package -U -DskipTests&#x3D;True&quot;</span><br><span class="line">                    sh &quot;echo this is master branch.&quot;</span><br><span class="line">                &#125;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Compile branch test&#39;) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                branch &#39;test&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                withMaven(globalMavenSettingsConfig: &#39;bfa90212-2742-4611-aa71-8e0ec76d0c28&#39;, jdk: &#39;Oracle JDK 8&#39;, maven: &#39;Maven 3&#39;, mavenSettingsConfig: &#39;02e95d2b-6bb6-457d-943f-13c63095e500&#39;) &#123;</span><br><span class="line">                    sh &quot;mvn -Dmaven.test.skip&#x3D;true  clean package -U -DskipTests&#x3D;True&quot;</span><br><span class="line">                    sh &quot;echo this is test branch.&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Package &amp; Upload to OSS&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                sh &quot;mkdir -p $&#123; tempFolder &#125;&quot;</span><br><span class="line">                script &#123;</span><br><span class="line">                    sh &quot;echo Upload to OSS.&quot;</span><br><span class="line">                    git_commit_id &#x3D; sh(returnStdout: true, script: &#39;git rev-parse --short HEAD&#39;).trim() &#x2F;&#x2F;需要获取shell返回值操作</span><br><span class="line">                    serviceName &#x3D; sh(returnStdout: true, script: &quot;basename $&#123; warFilePath &#125; | cut -d . -f 1&quot;).trim()</span><br><span class="line">                    sh &quot;mv $&#123; warFilePath &#125; $&#123; tempFolder &#125;&#x2F;ROOT.war&quot;</span><br><span class="line">                    artifact &#x3D; &quot;$&#123; serviceName &#125;_$&#123; env.BUILD_NUMBER &#125;-$&#123; env.BRANCH_NAME &#125;-$&#123; git_commit_id &#125;.tar.gz&quot;</span><br><span class="line">                    sh &quot;mkdir -p $&#123; artifactsPath &#125; &amp;&amp; tar czf $&#123; artifactsPath &#125;&#x2F;$&#123; artifact &#125; -C $&#123; tempFolder &#125; ROOT.war&quot;</span><br><span class="line">                    sh &quot;upload-flash -f $&#123; artifactsPath &#125;&#x2F;$&#123; artifact &#125; -t $&#123; artifactOssPath &#125;&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Deploy Package&#39;) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                branch &#39;test&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                script &#123;</span><br><span class="line">                    echo &quot;starting deploy......&quot;</span><br><span class="line">                    &#x2F;&#x2F; 运维人员维护私有仓库，保存ansible-playbook的配置文件</span><br><span class="line">                    git([url: &#39;git@git.shuke.com:shuke&#x2F;ansiblefiles.git&#39;, branch: &#39;master&#39;, credentialsId: &#39;7bc6cda9-a250-4d99-962c-e2ede002db06&#39;])</span><br><span class="line">                    withDockerRegistry([credentialsId: &#39;82a6a986-3f85-49f9-a926-0edf499fd1e3&#39;, url: &#39;https:&#x2F;&#x2F;dockerhub.shuke.com:5000&#39;]) &#123;</span><br><span class="line">                        withDockerContainer([image: &#39;dockerhub.shuke.com:5000&#x2F;test&#x2F;ansible_deploy:1.0.4&#39;]) &#123;</span><br><span class="line">                            sh &quot;ansible-playbook -i hosts --extra-vars &#39;warFilePath&#x3D;$&#123; tempFolder &#125;&#x2F;ROOT.war target_dir&#x3D;$&#123; target_dir &#125;&#39; -vv deploy_war.yml -l $&#123; hosts &#125;&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;Integration Test&#39;) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                branch &#39;test&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            parallel &#123;</span><br><span class="line">                stage(&#39;API Test&#39;) &#123;</span><br><span class="line">                    steps &#123;</span><br><span class="line">                        echo &quot;starting API......&quot;  </span><br><span class="line">                        echo &quot;starting fetchAPI......&quot;</span><br><span class="line">                        dir(&#39;API&#39;) &#123;</span><br><span class="line">                            echo &quot;starting APIScript......&quot;</span><br><span class="line">                            git([url: &#39;git@git.shuke.com:api_test&#x2F;RentHouse.git&#39;, branch: &#39;master&#39;, credentialsId: &#39;7726e85b-f455-40d1-b12c-447ecac70f23&#39;])</span><br><span class="line">                            script &#123;</span><br><span class="line">                                try &#123;</span><br><span class="line">                                    withDockerRegistry([credentialsId: &#39;82a6a986-3f85-49f9-a926-0edf499fd1e3&#39;, url: &#39;https:&#x2F;&#x2F;dockerhub.shuke.com:5000&#39;]) &#123;</span><br><span class="line">                                        withDockerContainer([image: &#39;dockerhub.shuke.com:5000&#x2F;test&#x2F;robotframework:1.0.1&#39;]) &#123;</span><br><span class="line">                                            sh &quot;pybot RentHouse_API_Test&#x2F;test&quot;</span><br><span class="line">                                        &#125; </span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;catch (exc) &#123;</span><br><span class="line">                                   echo &#39;Something failed, I should sound the klaxons!&#39;</span><br><span class="line">                                   emailContent &#x3D;  &quot;API执行过程中报错了！！&quot;</span><br><span class="line">                                &#125;finally&#123;</span><br><span class="line">                                  sh &quot;cp -r .&#x2F;output.xml &#x2F;home&#x2F;jenkins&#x2F;public&#x2F;outputRentHouse_API_Prduction.xml&quot;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">&#x2F;&#x2F;                stage(&#39;UI&#39;) &#123;</span><br><span class="line">&#x2F;&#x2F;                    steps &#123;</span><br><span class="line">&#x2F;&#x2F;                      echo &quot;starting UI......&quot;</span><br><span class="line">&#x2F;&#x2F;                    &#x2F;&#x2F;   测试闪银UI</span><br><span class="line">&#x2F;&#x2F;                        dir(&#39;UI&#39;) &#123;</span><br><span class="line">&#x2F;&#x2F;                            git([url: &#39;git@git.shuke.com:ui_test&#x2F;Wecash_RentalHouse.git&#39;, branch: &#39;master&#39;, credentialsId: &#39;7726e85b-f455-40d1-b12c-447ecac70f23&#39;])</span><br><span class="line">&#x2F;&#x2F;                            script &#123;</span><br><span class="line">&#x2F;&#x2F;                                echo &quot;starting UIScript......&quot;</span><br><span class="line">&#x2F;&#x2F;                                try &#123;</span><br><span class="line">&#x2F;&#x2F;                                   &#x2F;&#x2F;sh &quot;cd &#x2F;gg&quot;</span><br><span class="line">&#x2F;&#x2F;                                   echo &quot;starting UIScript......&quot;</span><br><span class="line">&#x2F;&#x2F;                                   &#x2F;&#x2F; 执行速度太慢，先注释代码</span><br><span class="line">&#x2F;&#x2F;                                   withDockerRegistry([credentialsId: &#39;82a6a986-3f85-49f9-a926-0edf499fd1e3&#39;, url: &#39;https:&#x2F;&#x2F;dockerhub.shuke.com:5000&#39;]) &#123;</span><br><span class="line">&#x2F;&#x2F;                                        withDockerContainer([image: &#39;dockerhub.shuke.com:5000&#x2F;test&#x2F;python-chromedriver:2.7-alpine3.7-selenium&#39;]) &#123;</span><br><span class="line">&#x2F;&#x2F;                                            sh &quot;python TestSuite&#x2F;Runner.py All All business-renthouse&quot;</span><br><span class="line">&#x2F;&#x2F;                                        &#125;</span><br><span class="line">&#x2F;&#x2F;                                    &#125;</span><br><span class="line">&#x2F;&#x2F;                                    sh &quot;&#x2F;usr&#x2F;bin&#x2F;python TestSuite&#x2F;Runner.py All All business-renthouse&quot;</span><br><span class="line">&#x2F;&#x2F;                                &#125;catch (exc) &#123;</span><br><span class="line">&#x2F;&#x2F;                                   echo &#39;Something failed, I should sound the klaxons!&#39;</span><br><span class="line">&#x2F;&#x2F;                                   emailContent &#x3D; &quot;UI执行过程中报错了！！&quot;</span><br><span class="line">&#x2F;&#x2F;                                &#125;</span><br><span class="line">&#x2F;&#x2F;                            &#125;</span><br><span class="line">&#x2F;&#x2F;                        &#125;</span><br><span class="line">&#x2F;&#x2F;                    &#125;</span><br><span class="line">&#x2F;&#x2F;                &#125;</span><br><span class="line">                stage(&#39;PT&#39;) &#123;</span><br><span class="line">                    steps &#123;</span><br><span class="line">                        echo &quot;starting PT......&quot;</span><br><span class="line">                        dir(&#39;PT&#39;) &#123;</span><br><span class="line">                            git credentialsId: &#39;7726e85b-f455-40d1-b12c-447ecac70f23&#39;, url: &#39;git@git.shuke.com:p_test&#x2F;MeiWo.git&#39;</span><br><span class="line">                        &#125;</span><br><span class="line">                        dir(&#39;Tools&#39;) &#123;</span><br><span class="line">                            script &#123;</span><br><span class="line">                                echo &quot;starting PTScript......&quot;</span><br><span class="line">                                git([url: &#39;git@git.shuke.com:gonghui&#x2F;script.git&#39;, branch: &#39;master&#39;, credentialsId: &#39;7726e85b-f455-40d1-b12c-447ecac70f23&#39;])</span><br><span class="line">                                try &#123;</span><br><span class="line">                                    withEnv([&quot;JAVA_HOME&#x3D;$&#123;tool &#39;Oracle JDK 8&#39;&#125;&quot;]) &#123;</span><br><span class="line">                                        sh &quot;$&#123;antHome&#125;&#x2F;bin&#x2F;ant -f $&#123; WORKSPACE &#125;&#x2F;Tools&#x2F;PerformFilesWithPipline&#x2F;build.xml -Dname&#x3D;MeiWo -Denv&#x3D;Test -DJOB_NAME&#x3D;$&#123;JOB_NAME&#125; -DWORKSPACE&#x3D;$&#123;WORKSPACE&#125; -DjmeterHome&#x3D;$&#123;jmeterHome&#125; run&quot;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    echo &quot;starting PTAnalyze......&quot;</span><br><span class="line">                                    sh &quot;python $&#123; WORKSPACE &#125;&#x2F;Tools&#x2F;PerformFilesWithPipline&#x2F;jmeterQYWeiXinWithTimeoutArgu.py $&#123; WORKSPACE &#125;&#x2F;PT&#x2F;results&#x2F; MeiWo 2 5 500 4000&quot;</span><br><span class="line">                                    sh &quot;cp -r $&#123; WORKSPACE &#125;&#x2F;PT&#x2F;results&#x2F;ParseOri.html &#x2F;home&#x2F;jenkins&#x2F;public&#x2F;&quot;</span><br><span class="line">                                &#125;catch (exc) &#123;</span><br><span class="line">                                    echo &#39;PT执行报错了!!&#39;</span><br><span class="line">                                    emailContent &#x3D; &quot;PT执行过程中报错了！！&quot;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;  </span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(&#39;conformReport&amp;noticify&#39;) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                branch &#39;test&#39;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                 echo &quot;starting email......&quot;</span><br><span class="line">                 </span><br><span class="line">                dir(&#39;conformresult&#39;) &#123;</span><br><span class="line">                    script&#123;</span><br><span class="line">                        git([url: &#39;git@git.shuke.com:gonghui&#x2F;script.git&#39;, branch: &#39;master&#39;, credentialsId: &#39;7726e85b-f455-40d1-b12c-447ecac70f23&#39;])</span><br><span class="line">                        withDockerRegistry([credentialsId: &#39;82a6a986-3f85-49f9-a926-0edf499fd1e3&#39;, url: &#39;https:&#x2F;&#x2F;dockerhub.shuke.com:5000&#39;]) &#123;</span><br><span class="line">                            withDockerContainer([image: &#39;dockerhub.shuke.com:5000&#x2F;test&#x2F;python3.6.5:1.0.0&#39;,args: &#39;-v &#x2F;data&#x2F;docker&#x2F;jenkins-slave-prod&#x2F;public:&#x2F;home&#x2F;jenkins&#x2F;public&#39;]) &#123;</span><br><span class="line">                                sh &quot;python3 parseScript&#x2F;conformReport.py &#x2F;home&#x2F;jenkins&#x2F;public $&#123; email_list &#125; $&#123;JOB_NAME&#125;-Build&#x2F;&#x2F;$&#123;BUILD_ID&#125;-&quot;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    post &#123;</span><br><span class="line">        always &#123;</span><br><span class="line">            echo &#39;always!&#39;</span><br><span class="line">            deleteDir()</span><br><span class="line">        &#125;</span><br><span class="line">        success &#123;</span><br><span class="line">            emailext body: &quot;Pipeline Success: Please Go to deploy if you pushed master just now&quot;,</span><br><span class="line">                recipientProviders: [[$class: &#39;DevelopersRecipientProvider&#39;], [$class: &#39;RequesterRecipientProvider&#39;]],</span><br><span class="line">                subject: &quot;&#39;$&#123;JOB_NAME&#125;&#39; ($&#123;BUILD_NUMBER&#125;)times SUCCESS&quot;,</span><br><span class="line">                to: &#39;&#39;</span><br><span class="line">            echo &#39;success!&#39;</span><br><span class="line">        &#125;</span><br><span class="line">        failure &#123;</span><br><span class="line">            emailext body: &quot;Pipeline error: Please go to $&#123;BUILD_URL&#125; and verify the build \n $&#123; emailContent &#125;&quot;,</span><br><span class="line">                recipientProviders: [[$class: &#39;DevelopersRecipientProvider&#39;], [$class: &#39;RequesterRecipientProvider&#39;]],</span><br><span class="line">                subject: &quot;&#39;$&#123;JOB_NAME&#125;&#39; ($&#123;BUILD_NUMBER&#125;)times FAILED&quot;,</span><br><span class="line">                to: &#39;&#39;</span><br><span class="line">            echo &#39;failure!&#39;</span><br><span class="line">        &#125;</span><br><span class="line">        unstable &#123;</span><br><span class="line">            echo &#39;unstable!&#39;</span><br><span class="line">        &#125;</span><br><span class="line">        changed &#123;</span><br><span class="line">            echo &#39;changed!&#39;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Jenkinsfile 构建示例
    
    </summary>
    
    
      <category term="DevOps" scheme="https://shuke163.github.io/categories/DevOps/"/>
    
    
      <category term="DevOps" scheme="https://shuke163.github.io/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>GitLab 自动触发 Jenkins 构建</title>
    <link href="https://shuke163.github.io/2020/04/20/GitLab-%E8%87%AA%E5%8A%A8%E8%A7%A6%E5%8F%91-Jenkins-%E6%9E%84%E5%BB%BA/"/>
    <id>https://shuke163.github.io/2020/04/20/GitLab-%E8%87%AA%E5%8A%A8%E8%A7%A6%E5%8F%91-Jenkins-%E6%9E%84%E5%BB%BA/</id>
    <published>2020-04-20T11:43:18.000Z</published>
    <updated>2020-04-20T11:44:32.184Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GitLab-自动触发-Jenkins-构建"><a href="#GitLab-自动触发-Jenkins-构建" class="headerlink" title="GitLab 自动触发 Jenkins 构建"></a>GitLab 自动触发 Jenkins 构建</h2><p><a href="https://www.wolfcstech.com/2018/03/26/gitlab_trigger_jenkins_build/" target="_blank" rel="noopener">GitLab 自动触发 Jenkins 构建</a></p>]]></content>
    
    <summary type="html">
    
      GitLab 自动触发 Jenkins 构建
    
    </summary>
    
    
      <category term="Git" scheme="https://shuke163.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://shuke163.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>k8s知识图谱</title>
    <link href="https://shuke163.github.io/2020/04/20/k8s%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    <id>https://shuke163.github.io/2020/04/20/k8s%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/</id>
    <published>2020-04-20T09:20:56.000Z</published>
    <updated>2020-04-20T11:19:24.349Z</updated>
    
    <content type="html"><![CDATA[<p><img src="k8s%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/k8s%E5%9B%BE%E8%B0%B1.webp" alt="k8s知识图谱"></p>]]></content>
    
    <summary type="html">
    
      k8s知识图谱
    
    </summary>
    
    
      <category term="k8s" scheme="https://shuke163.github.io/categories/k8s/"/>
    
    
      <category term="k8s" scheme="https://shuke163.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>kafka专题</title>
    <link href="https://shuke163.github.io/2020/04/20/kafka%E4%B8%93%E9%A2%98/"/>
    <id>https://shuke163.github.io/2020/04/20/kafka%E4%B8%93%E9%A2%98/</id>
    <published>2020-04-20T08:35:51.000Z</published>
    <updated>2020-04-20T09:02:36.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kafka专题"><a href="#kafka专题" class="headerlink" title="kafka专题"></a>kafka专题</h1><blockquote><p><a href="https://www.cnblogs.com/BYRans/p/6054930.html" target="_blank" rel="noopener">Kafka简介</a></p></blockquote><h2 id="消息系统介绍"><a href="#消息系统介绍" class="headerlink" title="消息系统介绍"></a>消息系统介绍</h2><p>一个消息系统负责将数据从一个应用传递到另外一个应用，应用只需关注于数据，无需关注数据在两个或多个应用间是如何传递的。分布式消息传递基于可靠的消息队列，在客户端应用和消息系统之间异步传递消息。有两种主要的消息传递模式：点对点传递模式、发布-订阅模式。大部分的消息系统选用发布-订阅模式。</p><h2 id="点对点消息系统"><a href="#点对点消息系统" class="headerlink" title="点对点消息系统"></a>点对点消息系统</h2><p>在点对点消息系统中，消息持久化到一个队列中。此时，将有一个或多个消费者消费队列中的数据。但是一条消息只能被消费一次。当一个消费者消费了队列中的某条数据之后，该条数据则从消息队列中删除。该模式即使有多个消费者同时消费数据，也能保证数据处理的顺序.</p><h2 id="发布-订阅消息系统"><a href="#发布-订阅消息系统" class="headerlink" title="发布-订阅消息系统"></a>发布-订阅消息系统</h2><p>在发布-订阅消息系统中，消息被持久化到一个topic中。与点对点消息系统不同的是，消费者可以订阅一个或多个topic，消费者可以消费该topic中所有的数据，同一条数据可以被多个消费者消费，数据被消费后不会立马删除。在发布-订阅消息系统中，消息的生产者称为发布者，消费者称为订阅者。该模式的示例图如下：</p><h2 id="Kafka概述"><a href="#Kafka概述" class="headerlink" title="Kafka概述"></a>Kafka概述</h2><p>Apache Kafka是一个分布式的发布-订阅消息系统，能够支撑海量数据的数据传递。在离线和实时的消息处理业务系统中，Kafka都有广泛的应用。Kafka将消息持久化到磁盘中，并对消息创建了备份保证了数据的安全。Kafka在保证了较高的处理速度的同时，又能保证数据处理的低延迟和数据的零丢失。</p><p>Kafka的优势在于：</p><p>可靠性：Kafka是一个具有分区机制、副本机制和容错机制的分布式消息系统<br>可扩展性：Kafka消息系统支持集群规模的热扩展<br>高性能：Kafka在数据发布和订阅过程中都能保证数据的高吞吐量。即便在TB级数据存储的情况下，仍然能保证稳定的性能。</p><h2 id="Kafka-专用术语"><a href="#Kafka-专用术语" class="headerlink" title="Kafka 专用术语"></a>Kafka 专用术语</h2><p>一个topic配置了3个partition。Partition1有两个offset：0和1。Partition2有4个offset。Partition3有1个offset。副本的id和副本所在的机器的id恰好相同。</p><p>如果一个topic的副本数为3，那么Kafka将在集群中为每个partition创建3个相同的副本。集群中的每个broker存储一个或多个partition。多个producer和consumer可同时生产和消费数据。</p><p>各个术语的详细介绍如下:</p><ul><li>Topic：在Kafka中，使用一个类别属性来划分数据的所属类，划分数据的这个类称为topic。如果把Kafka看做为一个数据库，topic可以理解为数据库中的一张表，topic的名字即为表名。</li><li>Partition：topic中的数据分割为一个或多个partition。每个topic至少有一个partition。每个partition中的数据使用多个segment文件存储。partition中的数据是有序的，partition间的数据丢失了数据的顺序。如果topic有多个partition，消费数据时就不能保证数据的顺序。在需要严格保证消息的消费顺序的场景下，需要将partition数目设为1。</li><li>Partition offset：每条消息都有一个当前Partition下唯一的64字节的offset，它指明了这条消息的起始位置。</li><li>Replicas of partition：副本是一个分区的备份。副本不会被消费者消费，副本只用于防止数据丢失，即消费者不从为follower的partition中消费数据，而是从为leader的partition中读取数据。</li><li>Broker：<ul><li>Kafka 集群包含一个或多个服务器，服务器节点称为broker。</li><li>broker存储topic的数据。如果某topic有N个partition，集群有N个broker，那么每个broker存储该topic的一个partition。</li><li>如果某topic有N个partition，集群有(N+M)个broker，那么其中有N个broker存储该topic的一个partition，剩下的M个broker不存储该topic的partition数据。</li><li>如果某topic有N个partition，集群中broker数目少于N个，那么一个broker存储该topic的一个或多个partition。在实际生产环境中，尽量避免这种情况的发生，这种情况容易导致Kafka集群数据不均衡。</li></ul></li><li>Producer：生产者即数据的发布者，该角色将消息发布到Kafka的topic中。broker接收到生产者发送的消息后，broker将该消息追加到当前用于追加数据的segment文件中。生产者发送的消息，存储到一个partition中，生产者也可以指定数据存储的partition。</li><li>Consumer：消费者可以从broker中读取数据。消费者可以消费多个topic中的数据。</li><li>Leader：每个partition有多个副本，其中有且仅有一个作为Leader，Leader是当前负责数据的读写的partition。</li><li>Follower：Follower跟随Leader，所有写请求都通过Leader路由，数据变更会广播给所有Follower，Follower与Leader保持数据同步。如果Leader失效，则从Follower中选举出一个新的Leader。当Follower与Leader挂掉、卡住或者同步太慢，leader会把这个follower从“in sync replicas”（ISR）列表中删除，重新创建一个Follower。</li></ul><h2 id="Kafka架构"><a href="#Kafka架构" class="headerlink" title="Kafka架构"></a>Kafka架构</h2><ul><li>Broker：Kafka的broker是无状态的，broker使用Zookeeper维护集群的状态。Leader的选举也由Zookeeper负责。</li><li>Zookeeper：Zookeeper负责维护和协调broker。当Kafka系统中新增了broker或者某个broker发生故障失效时，由ZooKeeper通知生产者和消费者。生产者和消费者依据Zookeeper的broker状态信息与broker协调数据的发布和订阅任务。</li><li>Producer：生产者将数据推送到broker上，当集群中出现新的broker时，所有的生产者将会搜寻到这个新的broker，并自动将数据发送到这个broker上。</li><li>Consumer：因为Kafka的broker是无状态的，所以consumer必须使用partition offset来记录消费了多少数据。如果一个consumer指定了一个topic的offset，意味着该consumer已经消费了该offset之前的所有数据。consumer可以通过指定offset，从topic的指定位置开始消费数据。consumer的offset存储在Zookeeper中。</li></ul><h2 id="Kafka工作流程"><a href="#Kafka工作流程" class="headerlink" title="Kafka工作流程"></a>Kafka工作流程</h2><p>Kafka将某topic的数据存储到一个或多个partition中。一个partition内数据是有序的，每条数据都有一个唯一的index，这个index叫做offset。新来的数据追加到partition的尾部。每条数据可以在不同的broker上做备份，从而保证了Kafka使用的可靠性。</p><p>生产者将消息发送到topic中，消费者可以选择多种消费方式消费Kafka中的数据。下面介绍两种消费方式的流程。</p><h3 id="一个消费者订阅数据："><a href="#一个消费者订阅数据：" class="headerlink" title="一个消费者订阅数据："></a>一个消费者订阅数据：</h3><ul><li>生产者将数据发送到指定topic中</li><li>Kafka将数据以partition的方式存储到broker上。Kafka支持数据均衡，例如生产者生成了两条消息，topic有两个partition，那么Kafka将在两个partition上分别存储一条消息</li><li>消费者订阅指定topic的数据</li><li>当消费者订阅topic中消息时，Kafka将当前的offset发给消费者，同时将offset存储到Zookeeper中</li><li>消费者以特定的间隔（如100ms）向Kafka请求数据</li><li>当Kafka接收到生产者发送的数据时，Kafka将这些数据推送给消费者</li><li>消费者受到Kafka推送的数据，并进行处理</li><li>当消费者处理完该条消息后，消费者向Kafka broker发送一个该消息已被消费的反馈</li><li>当Kafka接到消费者的反馈后，Kafka更新offset包括Zookeeper中的offset。</li><li>以上过程一直重复，直到消费者停止请求数据</li><li>消费者可以重置offset，从而可以灵活消费存储在Kafka上的数据</li></ul><h3 id="消费者组数据消费流程"><a href="#消费者组数据消费流程" class="headerlink" title="消费者组数据消费流程"></a>消费者组数据消费流程</h3><p>Kafka支持消费者组内的多个消费者同时消费一个topic，一个消费者组由具有同一个Group ID的多个消费者组成。具体流程如下：</p><ol><li>生产者发送数据到指定的topic</li><li>Kafka将数据存储到broker上的partition中</li><li>假设现在有一个消费者订阅了一个topic，topic名字为“test”，消费者的Group ID为“Group1”</li><li>此时Kafka的处理方式与只有一个消费者的情况一样</li><li>当Kafka接收到一个同样Group ID为“Group1”、消费的topic同样为“test”的消费者的请求时，Kafka把数据操作模式切换为分享模式，此时数据将在两个消费者上共享。</li><li>当消费者的数目超过topic的partition数目时，后来的消费者将消费不到Kafka中的数据。因为在Kafka给每一个消费者消费者至少分配一个partition，一旦partition都被指派给消费者了，新来的消费者将不会再分配partition。即一个partition只能分配给一个消费者，一个消费者可以消费多个partition。</li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="http://kafka.apache.org/" target="_blank" rel="noopener">Apache Kafka</a></p><h2 id="安装zookeeper依赖"><a href="#安装zookeeper依赖" class="headerlink" title="安装zookeeper依赖"></a>安装zookeeper依赖</h2><p><a href="http://zookeeper.apache.org/" target="_blank" rel="noopener">Apache ZooKeeper - Home</a><br>启动kafka很简单，配置好前置的操作后，先进入zookeeper的目录下，启动zookeeper,可以单独安装,也可以使用kafka中集成的zookeeper,默认在bin目录下有zookeeper的启动脚本,zookeeper和kafka的配置均在kafka安装包下的config目录下,下面采用单独安装kafka的方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data&#x2F;soft&#x2F;zookeeper</span><br><span class="line">&#x2F;&#x2F; 启动脚本使用方法</span><br><span class="line">Usage: .&#x2F;bin&#x2F;zkServer.sh &#123;start|start-foreground|stop|restart|status|upgrade|print-cmd&#125;</span><br><span class="line">&#x2F;&#x2F; 启动Zookeeper</span><br><span class="line">.&#x2F;bin&#x2F;zkServer.sh  start</span><br><span class="line">&#x2F;&#x2F; 关闭Zookeeper</span><br><span class="line">.&#x2F;bin&#x2F;zkServer.sh  stop</span><br><span class="line">&#x2F;&#x2F; 查看进程是否启动</span><br><span class="line">ps -ef | grep zookeepe</span><br></pre></td></tr></table></figure><p>PS：因为kafka是需要注册在zookeeper上面，通过zookeeper进行管理和调度的，所以启动kafka之前，我们必须要启动zookeeper。</p><h2 id="2-kafka安装"><a href="#2-kafka安装" class="headerlink" title="2. kafka安装"></a>2. kafka安装</h2><p>随后我们进入Kafka目录下，启动kafka，具体操作命令如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;kafka_2.11-1.0.0</span><br><span class="line">&#x2F;&#x2F; 修改配置</span><br><span class="line">vim &#x2F;usr&#x2F;local&#x2F;kafka&#x2F;config&#x2F;server.properties  kafka配置</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;kafka&#x2F;config&#x2F;zookeeper.properties   kafka集成的zookeeper配置</span><br><span class="line">&#x2F;&#x2F; 启动kafka</span><br><span class="line">.&#x2F;bin&#x2F;kafka-server-start.sh -daemon .&#x2F;config&#x2F;server.properties</span><br><span class="line">&#x2F;&#x2F; 查看</span><br><span class="line">jps -lm</span><br><span class="line">11776 &#x2F;usr&#x2F;local&#x2F;cerebro-0.7.2&#x2F;lib&#x2F;cerebro.cerebro-0.7.2-launcher.jar</span><br><span class="line">1392 &#x2F;usr&#x2F;share&#x2F;jenkins&#x2F;jenkins.war --webroot&#x3D;&#x2F;var&#x2F;cache&#x2F;jenkins&#x2F;war --httpPort&#x3D;8080</span><br><span class="line">24209 sun.tools.jps.Jps -lm</span><br><span class="line">20867 com.github.ltsopensource.startup.jobtracker.JobTrackerStartup &#x2F;data&#x2F;soft&#x2F;lts&#x2F;conf&#x2F;zoo</span><br><span class="line">20755 com.github.ltsopensource.startup.admin.JettyContainer &#x2F;data&#x2F;soft&#x2F;lts</span><br><span class="line">7972 org.apache.zookeeper.server.quorum.QuorumPeerMain &#x2F;data&#x2F;soft&#x2F;zookeeper-3.3.6&#x2F;bin&#x2F;..&#x2F;conf&#x2F;zoo.cfg</span><br><span class="line">10486 kafka.Kafka ..&#x2F;config&#x2F;server.properties</span><br><span class="line">12029 com.quantifind.kafka.offsetapp.OffsetGetterWeb --zk 127.0.0.1:2181 --port 9001 --refresh 10.seconds --retain 2.days</span><br><span class="line">11471 org.elasticsearch.bootstrap.Elasticsearch</span><br><span class="line">PS: 可以看到zookeeper和kafka都已经运行起来了，当然这个是单机的命令，集群的命令后面再讲。</span><br></pre></td></tr></table></figure><h2 id="kafka常用命令总结"><a href="#kafka常用命令总结" class="headerlink" title="kafka常用命令总结"></a>kafka常用命令总结</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1. 查看topic的详细信息</span><br><span class="line">bin&#x2F;kafka-topics.sh -zookeeper 127.0.0.1:2181 -describe -topic testKJ1</span><br><span class="line">2. 为topic增加副本</span><br><span class="line">bin&#x2F;kafka-reassign -partitions.sh -zookeeper 127.0.0.1:2181 -reassignment-json-file json&#x2F;partitions-to-move.json -execute</span><br><span class="line">3. 创建topic</span><br><span class="line">bin&#x2F;kafka-topics.sh --create --zookeeper localhost:2181 --replication -factor1 --partitions 1 --topic testKJ1</span><br><span class="line">4. 为topic增加partition</span><br><span class="line">bin&#x2F;bin&#x2F;kafka-topics.sh –zookeeper 127.0.0.1:2181 –alter –partitions2 –topic testKJ1</span><br><span class="line">5. kafka生产者客户端命令</span><br><span class="line">bin&#x2F;kafka-console-producer.sh --broker-list localhost:9092 --topic testKJ1</span><br><span class="line">6. kafka消费者客户端命令</span><br><span class="line">bin&#x2F;kafka-console-consumer.sh -zookeeper localhost:2181 --from-beginning --topic testKJ1</span><br><span class="line">7. kafka服务启动</span><br><span class="line">bin&#x2F;kafka-server-start.sh -daemon ..&#x2F;config&#x2F;server.properties</span><br><span class="line">8. 下线broker</span><br><span class="line">bin&#x2F;kafka-run-class.sh kafka.admin.ShutdownBroker --zookeeper 127.0.0.1:2181 --broker #brokerId# --num.retries3--retry.interval.ms 60</span><br><span class="line">shutdown broker</span><br><span class="line">9. 删除topic,只会删除zookeeper中的元数据，消息文件须手动删除</span><br><span class="line">bin&#x2F;kafka-run-class.sh kafka.admin.DeleteTopicCommand --topic testKJ1 --zookeeper 127.0.0.1:2181</span><br><span class="line">10. 查看topic消费进度</span><br><span class="line">这个会显示出consumer group的offset情况， 必须参数为--group， 不指定--topic，默认为所有topic</span><br><span class="line">查看consumer组内消费的offset</span><br><span class="line">bin&#x2F;kafka-run-class.sh kafka.tools.ConsumerOffsetChecker --zookeeper localhost:2181 --group test --topic testKJ1</span><br><span class="line">bin&#x2F;kafka-consumer-offset-checker.sh --zookeeper 192.168.0.201:12181 --group group1 --topic group1</span><br><span class="line">11. 列出所有的TOPIC</span><br><span class="line">bin&#x2F;kafka-topics.sh --zookeeper 127.0.0.1:2181 --list</span><br></pre></td></tr></table></figure><h2 id="Connecting-to-ZooKeeper"><a href="#Connecting-to-ZooKeeper" class="headerlink" title="Connecting to ZooKeeper"></a>Connecting to ZooKeeper</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. check status</span><br><span class="line">$ bin&#x2F;zkServer.sh status</span><br><span class="line">2. connect</span><br><span class="line">$ bin&#x2F;zkCli.sh -server 127.0.0.1:2181</span><br></pre></td></tr></table></figure><p>更多信息: <a href="http://zookeeper.apache.org/doc/current/zookeeperStarted.html" target="_blank" rel="noopener">ZooKeeper Getting Started Guide</a></p>]]></content>
    
    <summary type="html">
    
      kafka专题
    
    </summary>
    
    
      <category term="Kafka" scheme="https://shuke163.github.io/categories/Kafka/"/>
    
    
      <category term="Kafka" scheme="https://shuke163.github.io/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>利用P2P软件(Murder)大规模分发大文件</title>
    <link href="https://shuke163.github.io/2020/04/20/%E5%88%A9%E7%94%A8P2P%E8%BD%AF%E4%BB%B6-Murder-%E5%A4%A7%E8%A7%84%E6%A8%A1%E5%88%86%E5%8F%91%E5%A4%A7%E6%96%87%E4%BB%B6/"/>
    <id>https://shuke163.github.io/2020/04/20/%E5%88%A9%E7%94%A8P2P%E8%BD%AF%E4%BB%B6-Murder-%E5%A4%A7%E8%A7%84%E6%A8%A1%E5%88%86%E5%8F%91%E5%A4%A7%E6%96%87%E4%BB%B6/</id>
    <published>2020-04-20T08:35:21.000Z</published>
    <updated>2020-04-20T08:35:38.678Z</updated>
    
    <content type="html"><![CDATA[<h2 id="利用P2P软件-Murder-大规模分发大文件"><a href="#利用P2P软件-Murder-大规模分发大文件" class="headerlink" title="利用P2P软件(Murder)大规模分发大文件"></a>利用P2P软件(Murder)大规模分发大文件</h2><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>当服务器多时，为了管理方便和提升效率，就会用到自动化管理工具（如Ansible）来自动部署和批量分发文件。</p><blockquote><p>场景描述：目前有50+台服务器，已部署Ansible用于自动化部署和批量分发文件。批量分发文件时，一般把文件传到 Ansible 所在的服务器并通过 copy或者synchronize 模块传输，文件小于100M时，分发正常。当传输大文件时（100M+），受单节点及其带宽的影响，整个分发过程变得非常缓慢，甚至出现Ansible卡死。</p></blockquote><p>使用 Ansible 来分发小文件速度很快，但对于大文件，文件分发就是一个很大的问题。在使用单一分布点和固定出口带宽的情况下，经常存在带宽拥堵、耗费时间长的问题。</p><p>对于大文件分发，首先想到的是 BitTorrent ，利用 P2P 协议实现快速分发，节省带宽，提高效率。</p><h2 id="P2P软件介绍"><a href="#P2P软件介绍" class="headerlink" title="P2P软件介绍"></a>P2P软件介绍</h2><p>为了解决上面的问题，这里我们使用 Murder </p><p><a href="https://github.com/lg/murder" target="_blank" rel="noopener">Murder</a>是 Twitter 的开源项目，很适合大文件分发。（该项目还能用，但官方已经不再继续维护）</p><p>项目介绍中有这么一段话：Large scale server deploys using BitTorrent and the BitTornado library</p><p>根据 Murder 开发者的博客，可以知道这个项目的来龙去脉：</p><blockquote><p>Twitter 在早期便依赖 Capistrano 来进行应用程序的部署，每当有新版本需要发布时，Capistrano 会根据预设好的各种设置和流程到 Twitter 所有的服务器上进行更新的操作。<br>在过去服务器还不多的情況下一切都很美好，但随着 Twitter 服务器数量的增长，到了几百台服务器时，事情已经不再像过去一样美好，甚至到后来拥有数千台服务器时，更新的操作会耗费 40 分钟。<br>Twitter 针对这个问题，认为问题的关键在于：使用集中式的系统，也就是所有的服务器要轮流排队到同一台版本控制系统上进行代码更新。</p></blockquote><p>Twitter 最初的想法是将版本控制系统也做出分散式的架构，服务器的代码更新就可以分散到不同的机器来压缩部署时间，但事实上版本控制系统即使分散在多台服务器上，这些服务器要更新文件也同样需要时间。<br>因此 Twitter 发现或许需要一个完全去中心化、最好是像 BitTorrent 这样的，利用 P2P 的特点让所有的节点都可以协助进行程序代码的更新。</p><p>从结果来看，在采用了 BitTorrent 的方式来更新代码，部署的时间从 40 分钟大幅减少到只要 12 秒！实在是非常惊人的改善，数千台服务器的代码更新居然只要短短 12 秒就能完成。</p><p>集中式架构和Murder架构对比:</p><p><img src="https://note.youdao.com/yws/api/personal/file/WEBb17ecf2d648c399a8e681511fbeb8997?method=download&shareKey=7c1ea1579628222596f0e3e3f2d106ce" alt="image"></p><p><img src="https://note.youdao.com/yws/api/personal/file/WEB7aa1edd58d4910b55f320ba6f7c19327?method=download&shareKey=357ea31cc3b84346b9f99004fb033aef" alt="image"></p><h2 id="部署Murder"><a href="#部署Murder" class="headerlink" title="部署Murder"></a>部署Murder</h2><h3 id="Murder-组件介绍"><a href="#Murder-组件介绍" class="headerlink" title="Murder 组件介绍"></a>Murder 组件介绍</h3><p>Murder 是基于 BitTornado 来实现的。有以下几个主要组件：</p><ol><li>torrent tracker: tracker 使用 murder_tracker.py 运行，tracker 实际上是运行中一台服务器上的单个服务，其他任何成员都要依赖它。Murder为了保持简单，并没有实现tracker-less distribution（DHT）功能。tracker 实际上是个迷你的 httpd 服务，存放着BitTorrent客户端需要更新状态的路径。</li><li>seeder ：sender 是存放要分发到其他主机的文件的服务器。这些文件存放在 seeder 的一个目录中，Murder 会将这个目录打包成 tgz 格式并创建一个 .torrent 文件（非常小的文件，包含有关这个tgz文件的基本hash信息）。这个 .torrent 文件让各个 peer 节点知道他们下载的是什么文件。同时，tracker 会保持跟踪有哪些 .torrent 文件正在被分发。一旦 Murder 开始传输文件，seeder 服务器将是各个 peer 节点获取种子的地方。</li><li>peers ：peer 是成百上千需要接收文件的服务器，并且它们之间可以相互传输文件（下载、上传）。一旦一个peer节点下载完整个 tgz 文件，还将继续 seeding 一段时间，防止蜜罐效应。</li></ol><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在 tracker 服务器下载并安装 Murder，写成脚本运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;src</span><br><span class="line">wget https:&#x2F;&#x2F;codeload.github.com&#x2F;lg&#x2F;murder&#x2F;zip&#x2F;master</span><br><span class="line">mv master murder.zip</span><br><span class="line">unzip murder.zip</span><br><span class="line">mv murder-master &#x2F;usr&#x2F;local&#x2F;murder</span><br></pre></td></tr></table></figure><p>配置好 ansible 服务，连通各个 peer 节点。</p><p>通过 ansible 将tracker服务器下的 master.zip 分发到各个 peer 节点的家目录下，并解压安装 Murder ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># ansible all -m copy -a &quot;src&#x3D;&#x2F;usr&#x2F;local&#x2F;src&#x2F;murder.zip dest&#x3D;~&quot;</span><br><span class="line"># ansible all -m shell -a &quot;unzip murder.zip ; mv murder-master murder&quot;</span><br></pre></td></tr></table></figure><p>各个节点ip和环境说明：</p><ul><li>tracker : 192.168.1.100</li><li>seeder : 192.168.1.100</li><li>peers : 192.168.1.101-111</li><li>服务器都在同一个机房</li><li>都是 CentOS 6.5 系统</li></ul><h2 id="启动-tracker-服务"><a href="#启动-tracker-服务" class="headerlink" title="启动 tracker 服务"></a>启动 tracker 服务</h2><p>在 Tracker 服务器，启动 tracker 服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># python &#x2F;usr&#x2F;local&#x2F;murder&#x2F;dist&#x2F;murder_tracker.py &gt; &#x2F;var&#x2F;log&#x2F;murder_tracker.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>检查端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># netstat -tnlp|grep 8998</span><br></pre></td></tr></table></figure><p>实时查看日志输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># tailf &#x2F;var&#x2F;log&#x2F;murder_tracker.log</span><br></pre></td></tr></table></figure><p>配置防火墙（如果防火墙是关闭的，则不用此操作）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># iptables -I INPUT -s 192.168.100.0&#x2F;24 -p tcp --dport 8998 -j ACCEPT</span><br></pre></td></tr></table></figure><p>murder_tracker.py 实际上是调用 BitTornado/BT1/track.py 这个文件。 track.py 有很多参数，如果需要添加参数，可以修改 murder_tracker.py。</p><p>几个重要参数：</p><ul><li>port ：tracker 监听的端口，默认 8998</li><li>dfile ：存储近期下载信息的文件</li><li>logfile ：tracker 日志文件，默认是标准输出</li></ul><h2 id="在-seeder-服务器上准备要分发的文件并创建种子"><a href="#在-seeder-服务器上准备要分发的文件并创建种子" class="headerlink" title="在 seeder 服务器上准备要分发的文件并创建种子"></a>在 seeder 服务器上准备要分发的文件并创建种子</h2><p>这里将 seeder 和 tracker 服务 放在同一台服务器。<br>准备分发文件，并放在 /home/data/murder/ 目录下。</p><p>生成种子文件的脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"># 定义变量</span><br><span class="line">deploy_file&#x3D;&#x2F;home&#x2F;data&#x2F;murder&#x2F;deploy.test.tar.gz</span><br><span class="line"># 因所有peer节点已经打通内网，这里用seeder服务器的内网地址</span><br><span class="line">Seeder_IP&#x3D;192.168.1.100</span><br><span class="line">make_torrent_command&#x3D;&#x2F;usr&#x2F;local&#x2F;murder&#x2F;dist&#x2F;murder_make_torrent.py</span><br><span class="line"># 生成种子</span><br><span class="line">python $&#123;make_torrent_command&#125; $&#123;deploy_file&#125; $&#123;Seeder_IP&#125;:8998 $&#123;deploy_file&#125;.torrent</span><br></pre></td></tr></table></figure><h2 id="分发种子文件给所有的peer节点"><a href="#分发种子文件给所有的peer节点" class="headerlink" title="分发种子文件给所有的peer节点"></a>分发种子文件给所有的peer节点</h2><p>利用 ansible 分发seeder服务器上的种子文件给所有的 peer 节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ansible all -m synchronize -a &quot;src&#x3D;&#x2F;home&#x2F;data&#x2F;murder&#x2F;deploy.test.tar.gz.torrent dest&#x3D;~&quot;</span><br></pre></td></tr></table></figure><h2 id="启动-seeder-服务"><a href="#启动-seeder-服务" class="headerlink" title="启动 seeder 服务"></a>启动 seeder 服务</h2><p>启动 seeder 服务的脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"># 定义变量</span><br><span class="line">deploy_file&#x3D;&#x2F;home&#x2F;data&#x2F;murder&#x2F;deploy.test.tar.gz</span><br><span class="line">start_ip&#x3D;192.168.1.100</span><br><span class="line">make_torrent_command&#x3D;&#x2F;usr&#x2F;local&#x2F;murder&#x2F;dist&#x2F;murder_client.py</span><br><span class="line"></span><br><span class="line"># 启动 seeder，放到后台运行</span><br><span class="line">python $&#123;make_torrent_command&#125; seed $&#123;deploy_file&#125;.torrent $&#123;deploy_file&#125; $&#123;start_ip&#125; &amp;</span><br></pre></td></tr></table></figure><p>要确保 seeder 服务在启动状态，否则 peer 节点下载时连接不到。</p><p>在各个peer节点执行下载任务<br>编写下载脚本 peer_download.sh ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"># 用于各个 peer 节点根据种子文件信息，执行下载任务</span><br><span class="line"># 定义变量</span><br><span class="line">torrent_file&#x3D;~&#x2F;deploy.test.tar.gz.torrent</span><br><span class="line">download_file&#x3D;~&#x2F;download&#x2F;deploy.test.tar.gz</span><br><span class="line"># 这里获取各个 peer 节点自己的内网IP</span><br><span class="line">local_ip&#x3D;$(hostname -I|awk &#39;&#123;print $2&#125;&#39;)</span><br><span class="line">murder_client_bin&#x3D;~&#x2F;murder&#x2F;dist&#x2F;murder_client.py</span><br><span class="line"># 在各个 peer 节点执行 P2P 下载命令</span><br><span class="line">python  $murder_client_bin peer $torrent_file $download_file $local_ip</span><br></pre></td></tr></table></figure><p>利用ansible远程操控，在每个peer节点都执行下载脚本。使用ansible的 script 模块，在本地写一个脚本，然后在远程服务器执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ansible all -m script -a &quot;peer_download.sh&quot;</span><br></pre></td></tr></table></figure><h2 id="下载速度分析"><a href="#下载速度分析" class="headerlink" title="下载速度分析"></a>下载速度分析</h2><p>Murder 默认是服务器都存于一个数据中心的彼此相互信任的内网，并且每台服务器都是关闭防火墙的。</p><p>Murder 封装的是 BitTornado，在 BitTornado/download_bt1.py 代码中默认是启动一个 10000-60000 范围的随机端口，每个 peer 在下载的同时向其他 peer 提供下载服务也是通过这个随机端口。</p><p>对于端口的配置，把防火墙关了当然好，当然为了安全，还是开放端口更好。然而开放这个大的端口范围，肯定是不行的，这里选择开放 10000-10500 500个端口，只允许内网IP访问。</p><p>在各个 peer 节点中配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># iptables -I INPUT -s 192.168.1.0&#x2F;24 -p tcp --dport 10000:10500 -j ACCEPT</span><br></pre></td></tr></table></figure><p>并且在 dist/BitTornado/download_bt1.py 中修改代码的端口范围：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(&#39;minport&#39;, 10000, &#39;minimum port to listen on, counts up if unavailable&#39;),</span><br><span class="line">(&#39;maxport&#39;, 10500, &#39;maximum port to listen on&#39;),</span><br><span class="line">(&#39;random_port&#39;, 1, &#39;whether to choose randomly inside the port range &#39; + &#39;instead of counting up linearly&#39;)</span><br></pre></td></tr></table></figure><blockquote><p>这一步最好在把Murder代码分发到各个peer节点前做，如果已经做了，只能重新分发覆盖了。</p></blockquote><p>分发测试的机器有11台，都是内网IP，千兆路由器，但防火墙开启，测试文件有 560 M 大小。</p><ul><li>第一次分发：没有配好防火墙，用时 5m 分发完成。</li><li>第二次分发：配好了防火墙，用时 2m30s 分发完成。</li><li>第三次分发：不用Murder，用 ansible 直接分发，用时 36s 分发完成。<br>这里测试的服务器还是太少，服务器越多时，P2P方式分发文件速度越快。服务器不超过50+时，还是用 ansible 直接分发更快。</li></ul><p>文件都下载完后，关闭 seeder 服务器进程<br>kill 掉 seeder 的进程PID，避免它一直做种子和提升安全性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># pgrep -f seed|xargs kill -9</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://blog.51cto.com/john88wang/1793080" target="_blank" rel="noopener">结合P2P软件使用Ansible分发大文件</a><br><a href="http://jaminzhang.github.io/p2p/use-Murder-to-distribute-big-software-package-in-production-environment/" target="_blank" rel="noopener">Murder 在生产环境中分发大软件包的应用</a><br><a href="https://wuyanteng.github.io/2017/10/12/%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%ADP2P%E5%88%86%E5%8F%91%E5%A4%A7%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%9A%84%E5%BA%94%E7%94%A8-Murder/" target="_blank" rel="noopener">在生产环境中-P2P分发大软件包的应用-Murder</a>  </p>]]></content>
    
    <summary type="html">
    
      利用P2P软件(Murder)大规模分发大文件
    
    </summary>
    
    
      <category term="PYTHON" scheme="https://shuke163.github.io/categories/PYTHON/"/>
    
    
      <category term="PYTHON" scheme="https://shuke163.github.io/tags/PYTHON/"/>
    
  </entry>
  
  <entry>
    <title>阿里巴巴 DevOps 转型后的运维平台建设</title>
    <link href="https://shuke163.github.io/2020/04/20/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4-DevOps-%E8%BD%AC%E5%9E%8B%E5%90%8E%E7%9A%84%E8%BF%90%E7%BB%B4%E5%B9%B3%E5%8F%B0%E5%BB%BA%E8%AE%BE/"/>
    <id>https://shuke163.github.io/2020/04/20/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4-DevOps-%E8%BD%AC%E5%9E%8B%E5%90%8E%E7%9A%84%E8%BF%90%E7%BB%B4%E5%B9%B3%E5%8F%B0%E5%BB%BA%E8%AE%BE/</id>
    <published>2020-04-20T08:34:34.000Z</published>
    <updated>2020-04-20T08:35:02.229Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实战-阿里巴巴-DevOps-转型后的运维平台建设"><a href="#实战-阿里巴巴-DevOps-转型后的运维平台建设" class="headerlink" title="实战:阿里巴巴 DevOps 转型后的运维平台建设"></a>实战:阿里巴巴 DevOps 转型后的运维平台建设</h2><blockquote><p>导读：阿里巴巴DevOps转型之后，运维平台是如何建设的？阿里巴巴高级技术专家陈喻结合运维自身的理解，业务场景的分析和业界方法论的一些思考，得出来一些最佳实践分享给大家.</p></blockquote><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>“我是这个应用的 Owner”是阿里巴巴DevOps转型的重要策略，运维有了这个策略以后，PE大量的日常工作就可以释放出来，会有更多的时间去思考沉淀，去做编码，去做以前不曾做的事情。</p><h3 id="运维的三个阶段"><a href="#运维的三个阶段" class="headerlink" title="运维的三个阶段"></a>运维的三个阶段</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEBbf3865e31808fe00f15398bbcc41424f?method=download&shareKey=f5bd11f6b941ca6316940227c22768bc" alt="运维三个阶段">  </p><ol><li>第一阶段：黑屏，三角形是代表整个运维给用户的一些体感或者给研发的体感，人工运维，目前很多企业可能还是这样。</li><li>第二阶段：白屏,自动化运维，以前把脚本做成工具去弄，有什么特征，人push机器去干活，自助运维。</li><li>第三阶段：用户对运维体感很少，但是运维这个领域是不变的。最重要的是人机交互变少了，无屏虽说是不可能的，非常极端，但是个趋势，少量的人机交互，它有自决策、自驱动。</li></ol><h3 id="自动化运维基础"><a href="#自动化运维基础" class="headerlink" title="自动化运维基础"></a>自动化运维基础</h3><p>做自动化运维，我认为有四大基础。</p><h4 id="第一-运维标准与规范"><a href="#第一-运维标准与规范" class="headerlink" title="第一: 运维标准与规范"></a>第一: 运维标准与规范</h4><p>我们的标准有什么好处，让研发 follow 这个标准，标准会在工具里固化。</p><h4 id="第二-泛监控，运行时，静态，数据化，可视化"><a href="#第二-泛监控，运行时，静态，数据化，可视化" class="headerlink" title="第二: 泛监控，运行时，静态，数据化，可视化"></a>第二: 泛监控，运行时，静态，数据化，可视化</h4><p>泛监控，不是说传统的监控，是把线上想知道的一切都数据化，最终数据不是给人看的，是给机器去消费的，数据是我们的生产资料，不是可视化，那不是我们的目标。</p><h4 id="第三-CMDB"><a href="#第三-CMDB" class="headerlink" title="第三: CMDB"></a>第三: CMDB</h4><p>1.CMDB 应该放什么，一般放服务器相关的、网络相关的、应用相关的这三个维度的相关信息。<br>2.经常有人会说 CMDB 不准，数据不准是因为没有把数据生产和数据消费形成闭环，如果形成了闭环数据不准，那是因为你不用这个数据，所以不准。</p><h4 id="第四-高效的CI-CD"><a href="#第四-高效的CI-CD" class="headerlink" title="第四: 高效的CI/CD"></a>第四: 高效的CI/CD</h4><p>我们一定要具备快速的交付能力，主要体现这两个方面：第一，新开发的能力能不能快速上线，第二，想扩容一台机器能不能快速扩出来。这两个能力抽象出来是三块。<br>持续集成(CI)，很多人说持续集成工具不好用，效率低，其实持续集成的本质是要自动化测试。如果研发部不具备自动化测试的能力，持续集成怎么做都是失败的。<br>持续集成里最重要的一点就是要推行单元测试、集成测试还有系统测试，单测是保证自己没问题，集成测试是保证跟上下游没问题，系统测试是保证整个系统没问题。<br>持续交付(CD)，有很多人说持续交付本质是一个 Pipeline，CI的目标是什么？快速正确打一个包出来。CD的目标是什么？能够快速把一个包在不同的环境验证它是ok的，可以放到线上去，这就是持续交付要干的事。持续交付里很关键的一点我们要解决，就是它的环境一致性、配置一致性。环境一致性可以用Docker解决，Docker 本身就是一种标准化的东西。所以说第一条用 Docker，肯定是标准化的，另外一个问题，配置是不是一致性，是不是动静分离。<br>持续部署(CD)，是一种能力，这种能力非常重要，就是把一个包快速部署在你想要的地方。</p><p>PS：持续部署的几个痛点。</p><ol><li>对包的文件的分发，阿里有一个叫蜻蜓的产品，是做了 SP2P，在 P2P 的基础上加了一个 Super。</li><li>应用启动，很多应用启动的时候要两三分钟，这是很有问题的。</li><li>部署起来以后这个业务是不是正确的，大家一定要做一个 HealthCheck，不是运维做，是PE做，一定要把这个要求说出来，执行 HealthCheck 这个脚本。</li></ol><h3 id="运维系统的重要特性"><a href="#运维系统的重要特性" class="headerlink" title="运维系统的重要特性"></a>运维系统的重要特性</h3><p>中间件研发首先关注稳定性，其次是效率，然后是易扩展。运维研发里面的六个重要特征，每一个都非常重要，以下是我感触比较深的几个。<br><img src="https://note.youdao.com/yws/api/personal/file/WEB620101a1629a2fdfbd0c36d6564055ff?method=download&shareKey=08971d6ce40134622e0c64456099e2ae" alt="运维系统重要特性">  </p><ol><li><p>高可用<br>在做同城容灾演练的时候，我把关一切，结果发现运维系统挂了，救命的东西没有了怎么办？所以说运维系统一定要是高可用，不一定是高并发。</p></li><li><p>幂等性<br>幂等性是分布式系统设计中十分重要的概念，这个也非常重要。</p></li><li><p>可回滚<br>这个是做运维最基本的一个 sense，你做的任何操作是不是可控的。如果真正做可回滚，其实事情没有这么复杂。</p></li><li><p>高效率<br>如果你的企业发展非常快速，你的规模性效应已经来了，你的运维系统一定要具备很高效率，快速扩容、快速部署这个效率我们要追求极致。</p></li></ol><h3 id="研发定义运维，配置驱动变更"><a href="#研发定义运维，配置驱动变更" class="headerlink" title="研发定义运维，配置驱动变更"></a>研发定义运维，配置驱动变更</h3><ol><li><p>从最下面看，是我们的基础设施，提供三种能力，包括集散、存储、网络。从右下角的位置看，画的是一个泛监控，它会知道系统、应用等，在旁边标了一个字，现状，我要通过这个现状把线上的系统全部数据化，然后放到决策中心。</p></li><li><p>左上角有 CMDB，现在很多变更系统，很多强调流程。我本人是做研发出身，非常抵触流程，流程不是一个效率工具，它是阻碍效率的。</p></li><li><p>比如故障搞完以后就是一堆的流程，非常阻碍效率，是质量控制的一个工具。流程不是不要，是把流程做到系统里面去，让系统帮人做决策，而不是人在那里点。</p></li><li><p>CMDB 定义了我刚才说的目标，现状通过监控拿到了，目标也知道了，这个时候还觉得这个事情很复杂吗？我认为这看你怎么去做。想做成人工还是做成自动或者做成智能，都取决于这个地方。所以智能里一定要有数据。</p></li><li><p>举个例子，通过智能分析出目标状态是使这个应用有100个VM，但是现在状态只有80个，一看这两个不一样，要扩容20台，如果系统做得更智能一点，通过图上左边的事件中心提示我20台负载较轻的放在哪，可以调度过去，然后去做执行变更。</p></li></ol><p>基于这些东西得出来两个结论，“研发定义运维”，“配置驱动变更”。</p><h3 id="为什么是研发定义运维？"><a href="#为什么是研发定义运维？" class="headerlink" title="为什么是研发定义运维？"></a>为什么是研发定义运维？</h3><p>研发定义运维（DDO），研发最贴近业务，最应该清楚这个业务应该具备什么样的能力，只有研发才知道这个业务KPS是多少。</p><h3 id="为什么是配置驱动变更"><a href="#为什么是配置驱动变更" class="headerlink" title="为什么是配置驱动变更?"></a>为什么是配置驱动变更?</h3><p>配置就是把目标改变一下，你跟我说一个运维场景，我可以在这个图里面 run 起来，配置只需要改你的目标状态，比如把你的状态10VM 变成15个VM。<br>这就是”研发定义运维，配置驱动变更”前因后果的思考。</p><h3 id="运维工具与方法论"><a href="#运维工具与方法论" class="headerlink" title="运维工具与方法论"></a>运维工具与方法论</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB9c904e2294e2fc84199992da72822695?method=download&shareKey=ebfc4a36f6d42bca917684b002fd174d" alt="运维工具及方法论">  </p><h4 id="精益发现价值"><a href="#精益发现价值" class="headerlink" title="精益发现价值"></a>精益发现价值</h4><p>价值来源于用户的需求，而不是自己的YY，我们的价值来源于用户。</p><p>精益对我最大的感触就是要发现价值。精益思想，什么东西是有价值的，能够对用户带来物质上的或者身体上的愉悦的东西就是有价值的。</p><p>今天也有人问，DevOps 团队是该拆还是该合，我想他应该首先弄清楚面对的是什么样的问题，问题的优先级是什么？如果只解决一个问题，也许并不是DevOps 团队拆不拆的问题。</p><h4 id="敏捷交付价值"><a href="#敏捷交付价值" class="headerlink" title="敏捷交付价值"></a>敏捷交付价值</h4><p>敏捷也是对我影响很多的。很多人谈敏捷，我们团队里也搞敏捷，敏捷是要快速交付价值，它是一系列的方法论。但是在引入的时候千万注意，别人行的东西你不一定行，你需要的东西并不一定是敏捷，要因团队而异，形成一个环，持续反馈。</p><h4 id="OODA环"><a href="#OODA环" class="headerlink" title="OODA环"></a>OODA环</h4><p>OODA 环，就是形成闭环，让价值快速流动。</p><h3 id="应用运维平台ATOM"><a href="#应用运维平台ATOM" class="headerlink" title="应用运维平台ATOM"></a>应用运维平台ATOM</h3><p>应用运维平台的基础设施是一层，二层是运维中台，最上面一块是要做的 PaaS 平台，这个平台分几步。<br><img src="https://note.youdao.com/yws/api/personal/file/WEBcf540b68ea94cc7580696604fdd19476?method=download&shareKey=0a14435fa7c2bae87259c1ca63a072ff" alt="ATOM平台产品架构">  </p><h4 id="第一块，预算、容量、资源、弹性"><a href="#第一块，预算、容量、资源、弹性" class="headerlink" title="第一块，预算、容量、资源、弹性"></a>第一块，预算、容量、资源、弹性</h4><p>这个是PaaS 平台上非常重要的一块，目的就是让资源快速流动起来，流向正确的方向来产生价值。资源如果常年不增不减，是有问题的。</p><h4 id="第二块，应用管理"><a href="#第二块，应用管理" class="headerlink" title="第二块，应用管理"></a>第二块，应用管理</h4><p>这是日常要做的操作，规模化，要快速对一个单元建站、扩容、缩容。</p><h4 id="第三块，数据化运营"><a href="#第三块，数据化运营" class="headerlink" title="第三块，数据化运营"></a>第三块，数据化运营</h4><p>一定要讲数据，数据不是可视化出来一些报表，是要给结论，告诉用户这个数据完了以后应该是什么，规则中心是什么，是所有运维同学日常的运维经验沉淀。</p><h3 id="批量腾挪工具"><a href="#批量腾挪工具" class="headerlink" title="批量腾挪工具"></a>批量腾挪工具</h3><p>批量腾挪工具-背景</p><ul><li>痛点: <ul><li>机房搬迁</li><li>机器过保替换</li><li>机器故障频发,替换</li></ul></li><li>目标:<ul><li>规模化,系统化资源腾挪,提升运维效率</li><li>减少批量腾挪投入的人力,时间资源</li><li>单机替换自动化处理<br>这个工具不是所有人都需要，可以解决机房的搬迁，凑框迁移。<br>弹性伸缩是我们的决策中心。它决定你的资源往哪个地方流，非常关键。<br>最后，这里是运维领域技术含量最深的一个地方，要搞机器学习、深度学习、强化学习、算法等。<br>弹性一般有水平伸缩、垂直伸缩，对线上做管理，当然我们有额度，这是比较精细化的管理。弹性有观察者模式还有自动化执行，每次弹性完以后有一个控制台，双11做全年压测的时候一般情况下不看这个。</li></ul></li></ul><p>个人觉得本文内容总结的相当好,具有很高的参考意义和价值,故做整理,方便阅读!</p><p><a href="https://segmentfault.com/a/1190000014088336" target="_blank" rel="noopener">原文链接</a><br><a href="http://dbaplus.cn/news-134-1876-1.html" target="_blank" rel="noopener">参考文章</a>  </p>]]></content>
    
    <summary type="html">
    
      阿里巴巴 DevOps 转型后的运维平台建设
    
    </summary>
    
    
      <category term="DevOps" scheme="https://shuke163.github.io/categories/DevOps/"/>
    
    
      <category term="DevOps" scheme="https://shuke163.github.io/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>Swagger介绍</title>
    <link href="https://shuke163.github.io/2020/04/20/Swagger%E4%BB%8B%E7%BB%8D/"/>
    <id>https://shuke163.github.io/2020/04/20/Swagger%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-04-20T08:33:22.000Z</published>
    <updated>2020-04-20T08:34:22.058Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Swagger介绍"><a href="#Swagger介绍" class="headerlink" title="Swagger介绍"></a>Swagger介绍</h2><blockquote><p>Swagger是一种REST APIs的简单但强大的表示方式，标准的，语言无关，这种表示方式不但人可读，而且机器可读。可以作为REST APIs的交互式文档，也可以作为REST APIs的形式化的接口描述，生成客户端和服务端的代码。<br> <a href="https://swagger.io/" target="_blank" rel="noopener">官网</a><br> <a href="https://github.com/swagger-api/swagger-ui" target="_blank" rel="noopener">GitHub - swagger-api/swagger-ui</a>)<br> <a href="https://github.com/swagger-api/swagger-editor" target="_blank" rel="noopener">GitHub - swagger-api/swagger-editor: Swagger Editor</a><br> <a href="https://github.com/Swagger2Markup/swagger2markup" target="_blank" rel="noopener">GitHub - Swagger2Markup/swagger2markup: Swagger2Markup</a>  </p></blockquote><h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h3><p>在没有产品经理或者项目经理的情况下，对于前端和后端打交道来说，无非就是对接口的争争吵吵，字段多多少少的事。大多时候前端都喜欢直接使用后端提供的接口，而后端有时候却不知道前端到底要什么数据，就这样，Swagger这样的神器被我找到了，对于Swagger高级的应用，比如集成到IDE中自动生成文档,支持GO/python/Java等多种语言的IDE集成环境!</p><h3 id="2-Swagger-UI和Swagger-Editor"><a href="#2-Swagger-UI和Swagger-Editor" class="headerlink" title="2. Swagger UI和Swagger Editor"></a>2. Swagger UI和Swagger Editor</h3><ol><li>swagger ui是一个API在线文档生成和测试的利器,目前发现最好用的。</li></ol><ul><li>支持API自动生成同步的在线文档</li><li>这些文档可用于项目内部API审核</li><li>方便测试人员了解API</li><li>这些文档可作为客户产品文档的一部分进行发布</li><li>支持API规范生成代码，生成的客户端和服务器端骨架代码可以加速开发和测试速度</li></ul><ol start="2"><li>使用Swagger Editor编写API文档</li></ol><ul><li>Swagger Editor上的是基于yaml/JSON的语法</li></ul><h3 id="3-为什么选择Swagger"><a href="#3-为什么选择Swagger" class="headerlink" title="3. 为什么选择Swagger"></a>3. 为什么选择Swagger</h3><ol><li>使用Swagger UI生成的界面比Javadoc生成的界面美观</li><li>swagger可以实时同步API文档(代码修改后，文档同步修改)</li><li>swagger解析速度快，效率高(使用轻量级数据交换格式JSON)</li><li>对现有SpringMVC工程支持友好</li><li>Swagger可以充当前后端交流的重要桥梁，方便快捷。很实用。</li><li>Swagger项目允许你生产，显示和消费你自己的RESTful服务。不需要代理和第三方服务。是一个依赖自由的资源集合，它能通过Swagger-API动态的生成漂亮的文档和沙盒,因为Swagger-UI没有依赖，你可以把他部署到任何服务器环境或者是你自己的机器</li></ol><h3 id="4-Swagger组件介绍"><a href="#4-Swagger组件介绍" class="headerlink" title="4. Swagger组件介绍"></a>4. Swagger组件介绍</h3><ol><li>部署安装略,可自行在github中查找,建议使用Docker方式安装部署,简单方便;</li><li>Swagger生态工具组件较多,本文主要介绍Swagger-Editor以及Swagger-UI的使用,Editor用于生成各语言客户端/服务端的依赖文件,UI部分主要针对客户端工具生成的swagger.json或swagger.yml文件进行接口的查看和接口测试;</li><li>Swagger也有支持生成MarkDown文档格式的组件(Swagger2Markup);<br>PS: Swgger UI的站点域名要和发送请求的域名一样,不然浏览器会报跨域错误。</li><li>示例Demo<br><a href="http://10.21.26.240:81/" target="_blank" rel="noopener">Swagger Editor</a><br><a href="http://10.21.26.240" target="_blank" rel="noopener">Swagger UI</a>  </li></ol><h3 id="5-Swagger-Editor使用说明"><a href="#5-Swagger-Editor使用说明" class="headerlink" title="5. Swagger Editor使用说明"></a>5. Swagger Editor使用说明</h3><h4 id="5-1-我们可以在Swagger-Editor中编辑swagger-json-swagger-yaml文件-编写项目的API-编写完成后下载文件-通过Swagger-UI进行展示和调试相关操作"><a href="#5-1-我们可以在Swagger-Editor中编辑swagger-json-swagger-yaml文件-编写项目的API-编写完成后下载文件-通过Swagger-UI进行展示和调试相关操作" class="headerlink" title="5.1 我们可以在Swagger Editor中编辑swagger.json/swagger.yaml文件,编写项目的API,编写完成后下载文件,通过Swagger UI进行展示和调试相关操作;"></a>5.1 我们可以在Swagger Editor中编辑swagger.json/swagger.yaml文件,编写项目的API,编写完成后下载文件,通过Swagger UI进行展示和调试相关操作;</h4><p>Swagger API语法说明:   <a href="https://huangwenchao.gitbooks.io/swagger/content/" target="_blank" rel="noopener">参考-Swagger从入门到精通</a>  </p><h4 id="5-2-如何下载文件"><a href="#5-2-如何下载文件" class="headerlink" title="5.2 如何下载文件?"></a>5.2 如何下载文件?</h4><p><img src="https://note.youdao.com/yws/api/personal/file/WEB1525428cb3824945193555edd9a8dc3b?method=download&shareKey=84d50c122964b88eda3ec345c896515d" alt="Swagger-json/Swagger-yaml">  </p><h4 id="5-3-下载CLient包"><a href="#5-3-下载CLient包" class="headerlink" title="5.3 下载CLient包?"></a>5.3 下载CLient包?</h4><p><img src="https://note.youdao.com/yws/api/personal/file/WEBbb49e77b2635fcf8fd33179488526763?method=download&shareKey=a5191b45239cdf1c76c23727074e0c4c" alt="Swagger-cleint">  </p><h3 id="6-Swagger-UI"><a href="#6-Swagger-UI" class="headerlink" title="6. Swagger UI"></a>6. Swagger UI</h3><p>主要用于展示Swagger-json/Swagger-yaml文件内容<br><img src="https://note.youdao.com/yws/api/personal/file/WEBabf5c04995f32e14e0092062760de81a?method=download&shareKey=f725621241eb4e9bb7ab95d5b5f73318" alt="Web接口展示"><br><img src="https://note.youdao.com/yws/api/personal/file/WEB5cdc68f7e2d3f84f766a18c34adf2e94?method=download&shareKey=41b341528ab6e9d0bbf981adcbb79c6a" alt="Web接口测试">  </p>]]></content>
    
    <summary type="html">
    
      Swagger介绍
    
    </summary>
    
    
      <category term="swagger" scheme="https://shuke163.github.io/categories/swagger/"/>
    
    
      <category term="swagger" scheme="https://shuke163.github.io/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>nginx配置http强制跳转https</title>
    <link href="https://shuke163.github.io/2020/04/20/nginx%E9%85%8D%E7%BD%AEhttp%E5%BC%BA%E5%88%B6%E8%B7%B3%E8%BD%AChttps/"/>
    <id>https://shuke163.github.io/2020/04/20/nginx%E9%85%8D%E7%BD%AEhttp%E5%BC%BA%E5%88%B6%E8%B7%B3%E8%BD%AChttps/</id>
    <published>2020-04-20T08:32:21.000Z</published>
    <updated>2020-04-20T08:32:50.310Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nginx配置http强制跳转https"><a href="#nginx配置http强制跳转https" class="headerlink" title="nginx配置http强制跳转https"></a>nginx配置http强制跳转https</h2><blockquote><p>很多网站虽然支持 https, 但是直接在浏览器地址栏输入网址后, 默认仍是以 http 协议去访问的, http 强制跳转 https 的需求应运而生, 以下介绍三种实现的方式</p></blockquote><h3 id="rewrite-方法"><a href="#rewrite-方法" class="headerlink" title="rewrite 方法"></a>rewrite 方法</h3><p>这是最常用的实现方法, 将所有 http 请求通过 rewrite 重定向到 https 即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">server &#123;  </span><br><span class="line">    listen  80;</span><br><span class="line">    server_name docs.lvrui.io</span><br><span class="line">      </span><br><span class="line">    rewrite ^(.*)$  https:&#x2F;&#x2F;$host$1 permanent; </span><br><span class="line">    # return 302 https:&#x2F;&#x2F;$host$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name docs.lvrui.io;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;docs.log  main;</span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate &#x2F;etc&#x2F;ssl&#x2F;docs.20150509.cn.crt;</span><br><span class="line">    ssl_certificate_key  &#x2F;etc&#x2F;ssl&#x2F;docs.20150509.cn.key;</span><br><span class="line">    error_page 404 &#x2F;404.html;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">    root &#x2F;var&#x2F;www&#x2F;html&#x2F;docs;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>497 状态码<br>error code 497: normal request was sent to HTTPS</p><p>在一个站点只允许 https 访问时, 如果使用 http 访问会报出497错误码</p><p>利用497状态码重定向到 https</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name docs.lvrui.io</span><br><span class="line">    </span><br><span class="line">    error_page 497  https:&#x2F;&#x2F;$host$uri?$args;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name docs.lvrui.io;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;docs.log  main;</span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate &#x2F;etc&#x2F;ssl&#x2F;docs.20150509.cn.crt;</span><br><span class="line">    ssl_certificate_key  &#x2F;etc&#x2F;ssl&#x2F;docs.20150509.cn.key;</span><br><span class="line">    error_page 404 &#x2F;404.html;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">    root &#x2F;var&#x2F;www&#x2F;html&#x2F;docs;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="index-html-刷新网页"><a href="#index-html-刷新网页" class="headerlink" title="index.html 刷新网页"></a>index.html 刷新网页</h3><p>上面两种方法均会耗费服务器资源, 我们使用 curl 来看下百度是如何实现的 baidu.com 向 <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a> 的跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ curl baidu.com -vv </span><br><span class="line">* Rebuilt URL to: baidu.com&#x2F;</span><br><span class="line">*   Trying 220.181.57.217...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to baidu.com (220.181.57.217) port 80 (#0)</span><br><span class="line">&gt; GET &#x2F; HTTP&#x2F;1.1</span><br><span class="line">&gt; Host: baidu.com</span><br><span class="line">&gt; User-Agent: curl&#x2F;7.51.0</span><br><span class="line">&gt; Accept: *&#x2F;*</span><br><span class="line">&gt; </span><br><span class="line">&lt; HTTP&#x2F;1.1 200 OK</span><br><span class="line">&lt; Date: Sat, 01 Apr 2017 06:32:35 GMT</span><br><span class="line">&lt; Server: Apache</span><br><span class="line">&lt; Last-Modified: Tue, 12 Jan 2010 13:48:00 GMT</span><br><span class="line">&lt; ETag: &quot;51-47cf7e6ee8400&quot;</span><br><span class="line">&lt; Accept-Ranges: bytes</span><br><span class="line">&lt; Content-Length: 81</span><br><span class="line">&lt; Cache-Control: max-age&#x3D;86400</span><br><span class="line">&lt; Expires: Sun, 02 Apr 2017 06:32:35 GMT</span><br><span class="line">&lt; Connection: Keep-Alive</span><br><span class="line">&lt; Content-Type: text&#x2F;html</span><br><span class="line">&lt; </span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;refresh&quot; content&#x3D;&quot;0;url&#x3D;http:&#x2F;&#x2F;www.baidu.com&#x2F;&quot;&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line">* Curl_http_done: called premature &#x3D;&#x3D; 0</span><br><span class="line">* Connection #0 to host baidu.com left intact</span><br></pre></td></tr></table></figure><p>可以看到百度很巧妙的利用meta的刷新作用，将baidu.com跳转到<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a><br>同理, 我们也可以用这个特性来实现http向https的跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># index.html</span><br><span class="line">&lt;html&gt;  </span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;refresh&quot; content&#x3D;&quot;0;url&#x3D;https:&#x2F;&#x2F;docs.lvrui.io&#x2F;&quot;&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name docs.lvrui.io;</span><br><span class="line">    </span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        # 将 index.html 文件放到下面的目录下</span><br><span class="line">        root &#x2F;var&#x2F;www&#x2F;html&#x2F;refresh&#x2F;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name docs.lvrui.io;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;docs.log  main;</span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate &#x2F;etc&#x2F;ssl&#x2F;docs.20150509.cn.crt;</span><br><span class="line">    ssl_certificate_key  &#x2F;etc&#x2F;ssl&#x2F;docs.20150509.cn.key;</span><br><span class="line">    error_page 404 &#x2F;404.html;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">    root &#x2F;var&#x2F;www&#x2F;html&#x2F;docs;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      nginx配置http强制跳转https
    
    </summary>
    
    
      <category term="Nginx" scheme="https://shuke163.github.io/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://shuke163.github.io/tags/Nginx/"/>
    
  </entry>
  
</feed>
